{"noir_version":"0.27.0+783feebcc2543497cc9a23db958af64902afa589","name":"BatcherVault","functions":[{"name":"get_target_address","is_unconstrained":true,"custom_attributes":[],"abi":{"parameters":[],"param_witnesses":{},"return_type":{"abi_type":{"kind":"field"},"visibility":"public"},"return_witnesses":[0]},"bytecode":"H4sIAAAAAAAA/72UTU7DMBCFnd+mREWwRLAIexYO4gDmCtwgKAGxaaS0leDyERh56CfHu5o+KZrxeOx5fh4nUUckzmaBmODB2Qox4z4LfQqedFvaTXIVxOrnK5xfIy91sWvEEvCU+TkWT60fL9VSowramXi1Wv8ODPwMevh5NeZTxFJvrdX1HvNFYE0ZqCc+70SurgyspU4FzmKcr0/Dr06sZTCWehvwKM/Ah61sMC5QexW/tq7U8Y3GPtMaZzDgL/Vy5Nw5e6WW4F7Ckz1psYFWklsHdGRf58jnm4z4/lu7bwnesfbl2aiT8nQS/HcPXzhtLXb7cereh5eh6xNQyz2atKQ+Y5wiTj8LxGZY/k6kro1Ju4Tagb8iv73Wailv1LeSqTCSgM/YrbM3zj5PU/fVfGz74bMZD/tmfGtex8O23/2t+AYnrzOYygcAAA==","debug_symbols":"zZfdaoNAEIXfZa6l7MzO/uirlF5sUwuCmBBtoYjvXiVqLhIIkSScux32HOZjLz7Ynur9LnXVvmmp6Mm8OSree2oPqZnmtkvHjgqxmvuMyuZrOjvRIaPvqi6pcG7ILuMcdEmLcWuY+VraBpnDynbNxjh8ZCOPB+MJYDwRjCcH42GDBsRoQIIGZNGAFA0IzdKMpmlG8zSjiZrRTC1oppZnm/q0RV6y5SFOFXbrFhtuPC5zvjCxmPPzCuvMpIBMDpDJAzIFQKYIyJTjMdnrLvBhblmjFy60uqHjNnT8hk7Y0In3dcbhNx2r9FmX00d5uvtpdsu/eRy7v8PpZvgH"},{"name":"get_encrypted_sum","is_unconstrained":true,"custom_attributes":[],"abi":{"parameters":[{"name":"current_round","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"current_round":[{"start":0,"end":1}]},"return_type":{"abi_type":{"kind":"array","length":4,"type":{"kind":"field"}},"visibility":"public"},"return_witnesses":[1,2,3,4]},"bytecode":"H4sIAAAAAAAA/9VayXITMRDVeLxmYide2cHsO4x3sxyGX+APAnYoLnFVlio4wglOcIIP4c6npfB01PhZGSck6S4SVU1JI0tPr59aPWONPLOX0tPLs2Ufypi4LrJ5eLLUEsQKPeCYhnLK2hPX/bb1ebApkuLQDXtZMxvc1S+wXAy0yU2vKnBKy3NqxbgZadwpct7yF8aleeT5yVjcHNyzVgUz01lo7BaO7dmrAGPy1HG5Am25HevBc83ci9Mra8uFA/qlnX4laJNNsD8ysvbnHD45h3MG6sqxDemZLsxNwd/a8frxzXxy11gEZfQV8XUVqq2rMMbled6Vwx0kza3vaFWCNuhrCuucfC3j8OF7Hu+onFOngDP6RdPI+kVe3qb2itlb2z7wNwvsWrJlQb8MjUmOLUsw7rItC8Z6es4EFovffZjHMtRzm3XgY6AcifDpdfJmFs/kcAf0nE6J4/bXYyxfnm8b47Ug37l4LYg7wHgtiNvDGCaH256LI4Lz1sF3EkEd3mLckfbfQF6HLsYr6XkriuN2CLekxHdFft7GMdaqkj+UlfyhoqRvVV4HipM1eVxax3Ul3IaSP5yT9wd6XpyX50vPiwvyuOS/F+X9l9bxJaV1cVkcd+/97Iq8P5C+V5X895o8X3o/a8rzpbhzXR6X1tsNeVxabzeV/PeW/LyR/96W14Hi7x0l/70rrwOtt3tK+t5X8ocH8vqOYqyH8jrQunikpO9jJX94ojRvT5V0CJV0aMn7GcX1tjxfeg51lHToKvlDT17ffozVV9J3IM+X4vpQHpfi2TOleXsujtuhdfFCnu+Y/xvH6aXNS1CHe0pa35AwRVAuJPDxTgGfwCR/ry04muE3XPztF/zOezQpqGN7/QTsItTxflQpoS/qVARbIlsOT5ZIJxwrgvsi5J7D8X/zySXw0fr2w/PD2Hyf09Wig3tpgrjD2CaOF/ytnfnzeGlo89nmGGM4eU59ZPb7OM4X7uEp2NbF/TxBXNKs4mjG/MugGbf56tjralZZoNkKaMZ9cR9RwbYe7ikK4pJmNUcz5l8FzbjN90M0qy3QrAyasVa4l6lgWx/3NQVxSbOGoxnzr4Nm3ObnIZo1FmhWBc1YK9xPbcjb1sVnHXI0DkeTwEfjHUHJTvrGXHdsChybStAGnyMKPtVK8gO+r8M8HIXz6hnkXDmDnGungHMAdQHk/Du+T6ccW/D8FrbPQ73guZJhjJuV12kY28HnEzgdFLvwbIDCebHWkpnNxdb2ZHPt3fj1eG2UdBw279D1zDz1XWiTgnos+wl1u5AHYDKPG9e5RzjRRbJQx/h47HDfUeTI5uHJEvm8D2K4adE54nRCn082529wrzY31z4232+Mxh+ak53t5mS9+WayszHawk5fjtPp23E6/fjXTn97/AHqDaVyGS4AAA==","debug_symbols":"1dzdalpBFMXxdznXUmbPzN6zt69SemFTC4KYEG2hiO9epecjxaQ2ksS17pI4R3/kYv1jFPfd+v5usVvdb7bdfN+lTxLd/PO+2z4sNqcfbHeLx103zzW5zbrl5tvpaxE/zLrvq/Wym6seZmfHQ0p/OMzGoyL2zNkanvrDmmodT+ecDl9mR1FOcCKBE2U4UYETVTiRwokMTtTgRA4ngtvsArfZBW6zC9xmF7jNLnCbXeA2u7zFZkuq0p+WFH7BlJO04b6Tpn/ftbXBYVGmOx75jZvv3Pyg5tfEzRdufubmF25+5eYrN5+7upW7upW7upW7uspdXeWurnJXV7mrq9zVVe7qKnd1lbu6yl1d5a6ucVfXuKtr3NU17uoad3WNu7rGXV3jrq5xV9e4q9u4q9u4q9u4q9u4q9u4q9u4q9u4q9u4q9u4q9u4q+vc1XXu6jp3dZ27us5dXeeurnNX17mr69zVde7qBnd1g7u6wV3d4K5ucFc3uKsb3NUN7uoGd3WDu7qSuLMribu7kv4nvFkv+EV08Eu1vx7m/HRpuT9cZSK5D6ICJ6pwIoUTGZyowYkcThRoIklwIoETwW22wG22wG22wG22wG22wG22wG22wG12htvsDLfZGW6z83tvdv8w9WMe5m3WVW18mOYXfr/H565lfNYmebrr0WSApgZockBT4JlKAjQJoCnfwFRjNKk/YyqApgpoUkCTAZoaoMkBTbfY8Zj+WEn13FQToEkATRnQVABNFdCkgKYb7LhMr+zI09dqRlMDNDmgKfBMmgBNAmjKeKYX3iNuwyur5cmAjP8yeeGd2RcukmsuytdcVK65qL7uouM3PxePq8XX9fL0qcmn235s7oYPUT5+u/v18OeWw28="},{"name":"cancel_batch_and_claim","is_unconstrained":false,"custom_attributes":["aztec(private)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::context::globals::private_global_variables::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"current_round","type":{"kind":"field"},"visibility":"private"},{"name":"secret_hash","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"current_round":[{"start":47,"end":48}],"inputs":[{"start":0,"end":47}],"secret_hash":[{"start":48,"end":49}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_block_number","type":{"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber","fields":[{"name":"_opt","type":{"kind":"struct","path":"std::option::Option","fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}},{"name":"note_hash_read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267]},"bytecode":"","debug_symbols":""},{"name":"init_relayer","is_unconstrained":false,"custom_attributes":["aztec(private)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::context::globals::private_global_variables::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"bonding_token","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"bonding_amount","type":{"kind":"field"},"visibility":"private"},{"name":"he_pub_key","type":{"kind":"array","length":2,"type":{"kind":"field"}},"visibility":"private"},{"name":"sk_hash","type":{"kind":"field"},"visibility":"private"},{"name":"interval","type":{"kind":"field"},"visibility":"private"},{"name":"he_secret_key","type":{"kind":"field"},"visibility":"private"},{"name":"rand","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"bonding_amount":[{"start":49,"end":50}],"bonding_token":[{"start":48,"end":49}],"he_pub_key":[{"start":50,"end":52}],"he_secret_key":[{"start":54,"end":55}],"inputs":[{"start":0,"end":47}],"interval":[{"start":53,"end":54}],"rand":[{"start":55,"end":56}],"relayer":[{"start":47,"end":48}],"sk_hash":[{"start":52,"end":53}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_block_number","type":{"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber","fields":[{"name":"_opt","type":{"kind":"struct","path":"std::option::Option","fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}},{"name":"note_hash_read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547]},"bytecode":"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","debug_symbols":"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"},{"name":"spend_public_authwit","is_unconstrained":true,"custom_attributes":["aztec(public)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"inner_hash","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"inner_hash":[{"start":54,"end":55}],"inputs":[{"start":0,"end":54}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269]},"bytecode":"","debug_symbols":""},{"name":"dipute_relayer","is_unconstrained":false,"custom_attributes":["aztec(private)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::context::globals::private_global_variables::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"he_secret_key","type":{"kind":"field"},"visibility":"private"},{"name":"new_sk_hash","type":{"kind":"field"},"visibility":"private"},{"name":"new_he_pub_key","type":{"kind":"field"},"visibility":"private"},{"name":"new_he_secret_key","type":{"kind":"field"},"visibility":"private"},{"name":"new_relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"secret_hash","type":{"kind":"field"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"he_secret_key":[{"start":47,"end":48}],"inputs":[{"start":0,"end":47}],"new_he_pub_key":[{"start":49,"end":50}],"new_he_secret_key":[{"start":50,"end":51}],"new_relayer":[{"start":51,"end":52}],"new_sk_hash":[{"start":48,"end":49}],"nonce":[{"start":53,"end":54}],"secret_hash":[{"start":52,"end":53}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_block_number","type":{"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber","fields":[{"name":"_opt","type":{"kind":"struct","path":"std::option::Option","fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}},{"name":"note_hash_read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669]},"bytecode":"","debug_symbols":"7Z3djhvHEYXfZa8Fo3+q//QqQS4UxwEEGLJhKQECQ+9uirvTM23OsPenl3229lxFRmbIqu8Mz5wuzrL/vPv1t58/ffv825evdx//vHPm7uM//rz7+vunLz/+8+u3T398u/toPtz98uXfp//9/uHuP59//eXuYwjfP1wc5oxfjnQmuHqwtWbnaC9FHo72IdrO0VLy8trBiNSjnTPf//nhztk3Wre7Xd0h26XuKC+t27+gbikl1tf2sR6c9g62xriHg61xa9nOpJ2jT6+3vLLP67FWzkXLWyw6vMWi4wuKtjHUOpJN64Vqyt7ROdajS8zdo43Uo11uLuunfwjSS7pMztcuk/TqdqHW7c2WSd6rW9LDwVJMc+yPqvObrLq8xaq9eZNV2zdZtXuTVfs3WbW8yarDm6w6vsmq3+S90cPeG63UIOIuqoa9N16rWlDvjSEvLx1duqga9d6YZHnplGyvQ1d18WU9VvZyvrX1A2NtjM3RP3ig3nVn8UC9n8/iIe+OR7KVRwkXPFAzyCweqOlmFg/U3PRqPJxZurPnKczfeKAmslk8ULPeJB4BNUW+4v02rjzsBQ8V+TSHJYF71+HhTJ3ROmvXia4/j2iDing6DgdqOi1muahLMt1PS1k+LWG9f3q/+1VCvdfmzbD/noWQRWWBmkpnsEBNpDNYoKbRGSxQk+gMFqgpdAKLiJpAZ7BATZ8zWKBGzxksmDtXFkIWlQVz58qCuXNlwdy5smDuXFkwd1YWiblzZcHcubJg7lxZMHeuLIQsKgvmzpUFc+fKgrlzZcHcubJg7qwsMnPnyoK5c2XB3LmyYO5cWQhZVBbMnSsL5s6VBXPnyoK5c2XB3FlZFObOlQVz58qCuXNloSF3Jrscmza/0HBi8aNB0d6ghoSY3XKJ5uSuX83Xn1cuGjLiOBoaUuI4Ghpy4jgaGpLiMBrWaAiLA3FoyIsDcWiIjNdShDUaguBAwYU4tjgYMhscTJkNDsbMBgdzZoODQXOLw2oImlejhGV2bATXkB0H4mDQbHAIcWxxMGg2OBg0GxwMmg0ODUHzepRgdtwK7jikbHAwaDY4GDQbHAyaDQ4hji0OBs0Gh4ageTVKwO69MUlwDikbHAyaWxyw25BMwsGg2eBg0GxwMGg2OER7lIDdFmaS4BxSNjgYNBscDJoNDgbNLQ7YPX0m4WDQbHCof+wSdvefSYILcWxxMGg2OBg0GxwMmg0OBs0GB4PmFgfstj/DogTsRj6TBOeQssHBoNngEOLY4mDQbHAwaDY4GDQbHOofu1SxW884wVVs2DMQB4Nmg4NBs8HBoNngEOLY4mDQbHCof+xSxcY8AwXnkLLBwaC5xaFih56BOBg0GxwMmg0OBs0Gh2iPEir24BkoOIeUDQ4GzQYHg2aDg0Fzi0PFljwDcTBoNjjUP3apYrudgYILcWxxMGg2OBg0GxwMmg0OBs0GB4PmFoeKPXiuRgkVO+sMFJxDygYHg2aDQ4hji4NBs8HBoNngYNBscKh/7JJb8mwFd9ySp8XBoNngYNBscDBoNjiEOLY4GDQbHNofu3TckqcVnEPKBgeD5haHii15BuJg0GxwMGg2OBg0GxyiPUpwS55WcA4pGxwMmg0OBs0GB4PmFgf372lxMGg2OLQ/dum4JU8ruBDHFgeDZoODQbPBwaDZ4GDQbHAwaG5xqNi/52qU4JY8reAcUjY4GDQbHEIcWxwMmg0OBs0GB4Nmg0P7Y5eOW/I0gnNLnhYHg2aDg0GzwcGg2eAQ4tjiYNBscKh/7JJb8rSCc0jZ4GDQ3OJQsSXPQBwMmg0OBs0GB4Nmg0NAceR68N9xnMveDYQ2BxuWt8gh2uvl99DEg/dIrr5H+vHC1xH5XA9PYnw9PO2WJHFp4HSXW+u31uwc7aUskPy22/2jpdR2g5FVLece+k3w/Ya8XPc+yov7zUP6Fb9+BiTKtt/zu5Qx7+LMtXfZ31nl6e+S6scnhVSua2dLNHk5vGQfLoqyty/KmZPDL1eUcSVfPzy6xXRjXI3UmT0ntSYsB58Mbq3D7tadSlos2myOjffX3v5eJ0TzA40nmiM0QjRHaALRHKGJRHOEJhHNEZpMNEdoCtEcoEmGaI7QKEvDp+X8UoiV2KA5t6ss4fbaVZZae+3K+2pXWbrstassMfbaVZYCe+0qS3a9dpWltU67WVkC67U7JVX5XKfWRlwZ1+5pHm7WefjmOxK/941K8eXh4BLXIpzdfdwiLLPaVDaz8Ptsmp0uisFXiiH5DsXrsT17ojlCI0RzhCYQzRGaSDRHaBLRHKHJRHOEphDNAZpiiOYIjbLgPBIN0/AhGm1puHbrou+hedq61dbHgmzzynIPUghyDEhtSXsaSG25fBpIbSl+GkhtmX8aSG0rhEkgvdG2npgGUtvqYxpIbWuVaSC5shkEUgjykSD9+tXmBkgFyZXNIJBc2QwCyZXNIJBc2QwCyZXNGJCWK5tBILmyGQSSK5tBILmyGQRSCHIMSK5sHgsypAoypUuQXNkMAsmVzSCQXNkMAsmVzRiQjiubQSC5shkEkiubQSC5shkEUghyDEiubAaBVLayievv3MUcG5DndpWtP3rtKlsl9NpVluU77XplibvXrrJc3GtXWXrttassY/balffVrrK8tm6q4JJPl+0qS1W9dpWlql67ylJVr11lqarTrihLVb12laWqXrvKUlWvXWWpqteuvK92taWqWrdLxV22qy1VddrVlqo67WpLVZ12taWq6+0Gbamq0662VNVpV1uq6rSrLVV12pX31e77SlVBWarKdQcnlzcbOA34KrVI3VetNL8ZGl/4yt655QdGvZPSvPJZImVJUKNEytKrRomUJW6FEkVlqwSNEilb2WiUSNlqTKNEylaQGiUSSoQukbKVukaJOF2Al4jThfkShbrh+ulL30uJOF2Al4jTBXSJEqcL8BJxugAvEacL8BJxugAvkVAidIk4XYCXiNMFeIk4XYCXiNOFR76ysWvNMd9wRpc4XUCXKHO6AC8RpwvwEnG6AC8RpwvwEgklQpeI0wV4iThdgJeI0wV4iThdgJeI04X5El2f0RVOF+Al4nQBXiJOF+Al4nQBXiKhROgScboALxGnC/AScboALxGnC/AScboALpEYThceK1FeDnbnV7vVjE4MpwvwEnG6AC8RpwvwEgklQpeI0wV4iThdgJeI0wV4iThdgJeI0wV0iSynC/AScbowX6LrMzrL6QK8RJwuwEsklAhdIk4X4CXidAFeIk4X4CXidAFeIk4X0CVynC7AS8TpArxEM6YLNpW6NZnNXraHn4uasZ4+vfxaVDH2oiiZUVSxfinKmZ2iZqyZnK2/WHX6d3IXRUXEotKUokp1DOf8pXwzkqDzoZqNO13WF0XNyD5OpH76XDDx70X5GXd7b1fD93bz22xLUTPub975Kp/3/uJC9zMc3Yup8vnTPPT64bksr12cWW9JkvcqOTW5FOLKel3Y3bql5EWxYGS9tE/meQ/HE84xHIGHU/xi8iWUDpyYygIn5m30EfMcOAEeTqo3G2tMaOicOzi4LedQagfFlOsdnJJqtURr12fV/QOlg7tsqZH19O9ot+9xPm3/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"},{"name":"_initialize","is_unconstrained":true,"custom_attributes":["aztec(public)","aztec(internal)","aztec(noinitcheck)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"admin","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"target","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"token_in","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"token_out","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"}],"param_witnesses":{"admin":[{"start":54,"end":55}],"inputs":[{"start":0,"end":54}],"target":[{"start":55,"end":56}],"token_in":[{"start":56,"end":57}],"token_out":[{"start":57,"end":58}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272]},"bytecode":"","debug_symbols":""},{"name":"check_sk_hash","is_unconstrained":true,"custom_attributes":["aztec(public)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"sk_hash","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":54}],"sk_hash":[{"start":54,"end":55}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269]},"bytecode":"","debug_symbols":""},{"name":"validate_execute_batch","is_unconstrained":true,"custom_attributes":["aztec(public)","aztec(internal)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"c1","type":{"kind":"field"},"visibility":"private"},{"name":"c2","type":{"kind":"field"},"visibility":"private"},{"name":"amount_out","type":{"kind":"field"},"visibility":"private"},{"name":"amount_out_sub_cancelled","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"amount_out":[{"start":57,"end":58}],"amount_out_sub_cancelled":[{"start":58,"end":59}],"c1":[{"start":55,"end":56}],"c2":[{"start":56,"end":57}],"inputs":[{"start":0,"end":54}],"sender":[{"start":54,"end":55}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273]},"bytecode":"","debug_symbols":"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"},{"name":"finalize_execute","is_unconstrained":true,"custom_attributes":["aztec(public)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"secret_hash_for_redeeming_minted_notes","type":{"kind":"field"},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"},{"name":"secret_for_L1_to_L2_message_consumption","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"amount":[{"start":55,"end":56}],"inputs":[{"start":0,"end":54}],"secret_for_L1_to_L2_message_consumption":[{"start":56,"end":57}],"secret_hash_for_redeeming_minted_notes":[{"start":54,"end":55}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271]},"bytecode":"","debug_symbols":""},{"name":"get_token_in","is_unconstrained":true,"custom_attributes":[],"abi":{"parameters":[],"param_witnesses":{},"return_type":{"abi_type":{"kind":"field"},"visibility":"public"},"return_witnesses":[0]},"bytecode":"H4sIAAAAAAAA/72UTU7DMBCFnT83JSqCJYJF2LNIJA5grsANghIQm0ZKWwkuH1EjD/3keFfTJ0UzHo89z8/jJOqExNksEBM8OVsiZtxn0ZyD56bVdpNcBbE6foXzK+SlLnaLWAKeMj/H4nlkeq2WGpXQzsSr1fp3YOBn0MPPqzCfIpZ6a62uj5gvAmt0oJ74vBO5Oh1YS50KnMU4vzkPvzqxlsFY6m3AQ1+AD1vZYFyg9ip+7aZUpzca+0xrnMGAv9TLkfPg7I1agnsJT/akxQZaSW4V0JF9nSOfbzLi+2/tvhq8Y+3Ls1En5ekk+O8evnLaWuz249R9DK9D1yeglns0aUl9xjhFnH4WiM2w/J1IXRuTdgm1A39Ffnut1VLeqG8lU2EkAZ+xe2fvnH2Zpu67/tz2w1c9Hvb1+F6/jYdtv/tb8QPEr1DXygcAAA==","debug_symbols":"zZfdaoNAEIXfZa6l7Mzsn75K6cU2tSCICdEWivju1SSaiwRCJAnnzmHPcT724oPtqd5uUldtm5aKnsybo+K9p3aXmmluu7TvqBD1RjIqm6/Dt8qQ0XdVl1Q4N2SXcQ52TotxS5j5WlrD/GvLumRjHD6ykceD8QQwngjGk4PxsEEDYjQgQQNSNCCLBoRmaUbTNKN5mtFEzWimFjRTy7NNfdwiL9nyEKcKu2WLhhuXy5zPTCzmfL3C9sRkAZkcIJMHZAqATBGQKcdj0usu8OHUUmMvXKh2Rcet6PgVnbCiE+/rjMNv2lfpsy6nh/J09tNs5nfzOHZ/u+PJ8A8="},{"name":"get_sk_hash","is_unconstrained":true,"custom_attributes":[],"abi":{"parameters":[{"name":"he_secret_key","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"he_secret_key":[{"start":0,"end":1}]},"return_type":{"abi_type":{"kind":"field"},"visibility":"public"},"return_witnesses":[1]},"bytecode":"H4sIAAAAAAAA/7VU0QrDIAw0tY0dg4097H2f4MY+wP//qumawDUtfWkMSOMZLnepSGEJktUiQo6hWJFvPhdvR65MRudT8hnw4tXvmz/cSMb1XDSudQ26kZpUF8M5Ca51D8AItE/e2uvcW/9oNFsPBfIJ9Iwd9HTy+b8TbDxF4+kGNQP45A4+Cfoqt+4Zeiv28uudG2/q4OleOS4w12Tmi3d+3sFw5kG4Nm9PcfwBKvTogds7Cz/RdEw2KgUAAA==","debug_symbols":"vdTPCgIhEAbwd5mzxPivzFeJDrYZCOIuqwUhvntabJfOzW0+5oPfaaZCnCdXwpwy2Aq424M9VciLSyPn4tYCVighFQOfru/ZYGNwC9GD1bqx3zoa3Nqcm29ZYjuzbhwIDENgHAkMjhQIp0AEBSIpEEWBaAqE4tz5v++9h4dbg7tEP77Y2N3TtD21Hstz+WzaCw=="},{"name":"deposit_to_batch","is_unconstrained":false,"custom_attributes":["aztec(private)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::context::globals::private_global_variables::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"current_round","type":{"kind":"field"},"visibility":"private"},{"name":"amount_out","type":{"kind":"field"},"visibility":"private"},{"name":"relayer_he_pubkey","type":{"kind":"struct","path":"types::affine_point::AffinePoint","fields":[{"name":"point","type":{"kind":"struct","path":"std::ec::tecurve::affine::Point","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}}]},"visibility":"private"},{"name":"rand","type":{"kind":"field"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"amount_out":[{"start":48,"end":49}],"current_round":[{"start":47,"end":48}],"inputs":[{"start":0,"end":47}],"nonce":[{"start":52,"end":53}],"rand":[{"start":51,"end":52}],"relayer_he_pubkey":[{"start":49,"end":51}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_block_number","type":{"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber","fields":[{"name":"_opt","type":{"kind":"struct","path":"std::option::Option","fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}},{"name":"note_hash_read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[22278,22279,22280,22281,22282,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22300,22301,22302,22303,22304,22305,22306,22307,22308,22309,22310,22311,22312,22313,22314,22315,22316,22317,22318,22319,22320,22321,22322,22323,22324,22325,22326,22327,22328,22329,22330,22331,22332,22333,22334,22335,22336,22337,22338,22339,22340,22341,22342,22343,22344,22345,22346,22347,22348,22349,22350,22351,22352,22353,22354,22355,22356,22357,22358,22359,22360,22361,22362,22363,22364,22365,22366,22367,22368,22369,22370,22371,22372,22373,22374,22375,22376,22377,22378,22379,22380,22381,22382,22383,22384,22385,22386,22387,22388,22389,22390,22391,22392,22393,22394,22395,22396,22397,22398,22399,22400,22401,22402,22403,22404,22405,22406,22407,22408,22409,22410,22411,22412,22413,22414,22415,22416,22417,22418,22419,22420,22421,22422,22423,22424,22425,22426,22427,22428,22429,22430,22431,22432,22433,22434,22435,22436,22437,22438,22439,22440,22441,22442,22443,22444,22445,22446,22447,22448,22449,22450,22451,22452,22453,22454,22455,22456,22457,22458,22459,22460,22461,22462,22463,22464,22465,22466,22467,22468,22469,22470,22471,22472,22473,22474,22475,22476,22477,22478,22479,22480,22481,22482,22483,22484,22485,22486,22487,22488,22489,22490,22491,22492,22493,22494,22495,22496,22497,22498]},"bytecode":"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","debug_symbols":""},{"name":"_init_relayer","is_unconstrained":true,"custom_attributes":["aztec(public)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"bonding_token","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"bonding_amount","type":{"kind":"field"},"visibility":"private"},{"name":"he_pub_key_x","type":{"kind":"field"},"visibility":"private"},{"name":"he_pub_key_y","type":{"kind":"field"},"visibility":"private"},{"name":"sk_hash","type":{"kind":"field"},"visibility":"private"},{"name":"interval","type":{"kind":"field"},"visibility":"private"},{"name":"rand","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"bonding_amount":[{"start":56,"end":57}],"bonding_token":[{"start":55,"end":56}],"he_pub_key_x":[{"start":57,"end":58}],"he_pub_key_y":[{"start":58,"end":59}],"inputs":[{"start":0,"end":54}],"interval":[{"start":60,"end":61}],"rand":[{"start":61,"end":62}],"relayer":[{"start":54,"end":55}],"sk_hash":[{"start":59,"end":60}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276]},"bytecode":"","debug_symbols":""},{"name":"compute_note_hash_and_nullifier","is_unconstrained":true,"custom_attributes":[],"abi":{"parameters":[{"name":"contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"storage_slot","type":{"kind":"field"},"visibility":"private"},{"name":"note_type_id","type":{"kind":"field"},"visibility":"private"},{"name":"serialized_note","type":{"kind":"array","length":20,"type":{"kind":"field"}},"visibility":"private"}],"param_witnesses":{"contract_address":[{"start":0,"end":1}],"nonce":[{"start":1,"end":2}],"note_type_id":[{"start":3,"end":4}],"serialized_note":[{"start":4,"end":24}],"storage_slot":[{"start":2,"end":3}]},"return_type":{"abi_type":{"kind":"array","length":4,"type":{"kind":"field"}},"visibility":"public"},"return_witnesses":[24,25,26,27]},"bytecode":"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","debug_symbols":"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"},{"name":"_validate_claim_params","is_unconstrained":true,"custom_attributes":["aztec(public)","aztec(internal)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"_round","type":{"kind":"field"},"visibility":"private"},{"name":"_total_token_in","type":{"kind":"field"},"visibility":"private"},{"name":"_total_token_out","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"_round":[{"start":54,"end":55}],"_total_token_in":[{"start":55,"end":56}],"_total_token_out":[{"start":56,"end":57}],"inputs":[{"start":0,"end":54}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271]},"bytecode":"","debug_symbols":""},{"name":"get_round","is_unconstrained":true,"custom_attributes":[],"abi":{"parameters":[],"param_witnesses":{},"return_type":{"abi_type":{"kind":"field"},"visibility":"public"},"return_witnesses":[0]},"bytecode":"H4sIAAAAAAAA/72UTU7DMBCFnd+mREWwRLAIexaOBHtzBW4QlIDYNFLaSnD5CIw89JPjXU2fFM14PPY8P4+TqCMSZ7NATPDgbIWYcZ+FPgWPui3tJrkKYvXzFc6vkZe62DViCXjK/ByLp9ZPl2qpUQXtTLxarX8HBn4GPfy8GvMpYqm31up6j/kisKYM1BOfdyJXVwbWUqcCZzHO16fhVyfWMhhLvQ14lGfgw1Y2GBeovYpfW1fq+EZjn2mNMxjwl3o5cu6cvVJLcC/hyZ602EArya0DOrKvc+TzTUZ8/63dtwTvWPvybNRJeToJ/ruHL5y2Frv9OHXvw8vQ9Qmo5R5NWlKfMU4Rp58FYjMsfydS18akXULtwF+R315rtZQ36lvJVBhJwGfs1tkbZ5+nqftqPrb98NmMh30zvjWv42Hb7/5WfAM0U4cnygcAAA==","debug_symbols":"zZfdCoJAEIXfZa4ldvZfXyW62MpAEIu0IMR3T0vtQiGSinO3w57Z+diLD6am/LgLVXYsSkpqEitDybqm8hSKri6rcK4okcqziygt9o+zNk1EhyxPKTHtcRJnZtOnmbUdwyzFTFo52Yc1qzHrfbOJWh4LxuPAeDwYTwzGwwINiNGAJBqQQgPSaEBolmY0TTOapxlN1IxmaolmavlrUz+nyL9M+Y5TjR2nOP/mcznWYzo2r6elGP5XAzIZQCYLyOQAmTwgU4zHpOZdYAciJfTEhUov6DELeuyCHregx3/W0xbXcM7CNk+7Rbm7uxS7YW9uy+p2et40dw=="},{"name":"get_batch_relayer","is_unconstrained":true,"custom_attributes":[],"abi":{"parameters":[],"param_witnesses":{},"return_type":{"abi_type":{"kind":"struct","path":"types::relayer::BatchRelayer","fields":[{"name":"relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"bonding_token","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"bonding_amount","type":{"kind":"field"}},{"name":"he_pub_key","type":{"kind":"struct","path":"types::affine_point::AffinePoint","fields":[{"name":"point","type":{"kind":"struct","path":"std::ec::tecurve::affine::Point","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}}]}},{"name":"sk_hash","type":{"kind":"field"}},{"name":"last_timestamp","type":{"kind":"field"}},{"name":"interval","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[0,1,2,3,4,5,6,7]},"bytecode":"H4sIAAAAAAAA/72YTW/TQBCG187GceJ81PnqtxTBCU4OlDYnMAc4wQX4A0EJFZdGSlsJ/nwEW/bFr9d2XbnejhR5Op6deefJWvXGEf+s9ffjaL8hEvNF1pDnGvlSX5v66lHtbU69WH+URY+xs2jhsQDDVP+u9gPKcynmyPQsKubK9Fwq1pDpGVVMyvS8KtaUSW/EPJlmoGItHWvrWEgNkeeT1p2oiVkUnfdFYg71AoO4vl5zR6QtJp+Zm3kB3efvy9x7ivMl3W/mrPFy+sFPfZ/a93LWMqcmzRJrP3qc3XHiXjH9jX490uE9gR5+rGKRfc5V71b9vV/7InkGaqy7UDO1aYaY9KOfpJzn+ronssa1oJP3pLIesWpTHwuznamaHUvMAoMZ9HeIGXJeljALCpj5xAysArpnYbZI1e1aYtYzmEF/l5ghZ17CrFfArEPMAvLBzMJsc1W3b4nZwGAG/X1ihpxFCbNBAbMucQKrATGzMNsrn3TWWPeOWWgw6xtcJOW8M+6ZzMICZn1iBlYhMbMw2xtVd2iJ2chgBv1DYoacjyXMRgXM9ogZWI2ImYXZzlXdsSVmE4MZ9I+JGXI+GwxMZpMCZkNiBlYTYmZhtgtVd2qJ2b7BDPqnxAw530qY7RcwGxMzsEJuYPi4TmkNYgfaH1DskPQjdqR9/h99rP2QYifaH1HsVPsTirk5mjHblGJ49zygGHQdUgzvxUcUw/vYMcXwvnFCMcx0SjPyuajGM9jCJ61xjXWZFey+M5jtc0RHJHvv+mazXV6uv6yXK4ekSZLAch2Rlr6jHJfi7DdyYju68hbh4z22CG9110DEWxP5bZHFW+sZrCHyjX9PcbTYhh6qqUW3RBaqsmf6iufm/Xa7/D37ebVa/5ptbm9mmx+z75vbq9U1L3pRZVFUZdFFlUVvqyz6UGXRpyqLvj500f8VfwA6KEFroRMAAA==","debug_symbols":"zdrdSsMwGAbge8lxkXx/+emtiAd1ThiMbmxVkNF7d3VbJnQgFl3fs7b5PvKQwktoc3DrzaLpVpt27+qD8w/Ern48uP22aYcH+67Zda5myayVW7YvX9fGfeVeV+ulq836alRORHauJtJQion9jWqJfC5WklKbUv9UDSBBAykayNBAAQ0U0UAJDZTBQOzRQIQGQktqRktqRktqRktqRktqRktq/u+kPs2S7zGL/E2mWiizxPTD4pLPsVT7q0nPyyuER2I8kuCRFI9keKSAR4r3J5F8CyYdkxIeKcOR1OORCI/EeCTBI82Q3kwll5jHuaSGRwp4pIhHSnikDEcyj0eaIb05USFlPyYxHknwSIpHMjxSwCNFPNIM6S1cSCI3SBmOFDweifBIjEcSPJLikWZIb6V8qVZOY1LAI0U8UsIjZThS9HgkwiPNkN5qqZBCHJMEj6R4JMMjBTxSxCMlPNIc6Z3L5sT8eHOSPB6J8EiMRxI8kuKRDI5E/vabC5fPieKvvxTKCTKvU5psSlOY0hSnNKXfNR1v3pvdqnleL4fztMPYW7u4HK893nYf29NI/wk="},{"name":"get_token_out","is_unconstrained":true,"custom_attributes":[],"abi":{"parameters":[],"param_witnesses":{},"return_type":{"abi_type":{"kind":"field"},"visibility":"public"},"return_witnesses":[0]},"bytecode":"H4sIAAAAAAAA/72UTU7DMBCFnd+mREWwRLAIexaO4ADmCtwgKAGxaaS0leDyERh56CfHu5o+KZrxeOx5fh4nUUckzmaBmODB2Qox4z4LfQqedFvaTXIVxOrnK5xfIy91sWvEEvCU+TkWT60fL9VSowramXi1Wv8ODPwMevh5NeZTxFJvrdX1HvNFYE0ZqCc+70SurgyspU4FzmKcr0/Dr06sZTCWehvwKM/Ah61sMC5QexW/tq7U8Y3GPtMaZzDgL/Vy5Nw5e6WW4F7Ckz1psYFWklsHdGRf58jnm4z4/lu7bwnesfbl2aiT8nQS/HcPXzhtLXb7cereh5eh6xNQyz2atKQ+Y5wiTj8LxGZY/k6kro1Ju4Tagb8iv73Wailv1LeSqTCSgM/YrbM3zj5PU/fVfGz74bMZD/tmfGtex8O23/2t+AbXU+RoygcAAA==","debug_symbols":"zZfBaoQwFEX/5a2l5L4kJvorpYt0akEQZxhtoYj/Xu2oXcxAqbTD3eWRe3mHLA5kkOZ4SH19bDspBzEPXsrHQbpTaue569O5l1JtADKp2pevs9Mxk9e6qaT0fsyu4whuTavxWxi4lbZBl7CD3bIxjk/ZxJOT8QQynkjGU5DxwLABgQ1I2YAsG5BjA2KzNNg0DTZPg03UYDO1spla/9vUly16ly1/4lSF37bY8MPjAsXKBDXfz6twC5MjZPKETDkhUyBkioRMBR+Tve2CPCwta9yVC63b0fE7OvmOTtjRib/rTMN7Otfpuanmj/J899Ye1n/zNPYfp8vN+Ak="},{"name":"claim_token_in","is_unconstrained":false,"custom_attributes":["aztec(private)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::context::globals::private_global_variables::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"round","type":{"kind":"field"},"visibility":"private"},{"name":"total_token_in","type":{"kind":"field"},"visibility":"private"},{"name":"total_token_out","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":47}],"round":[{"start":47,"end":48}],"total_token_in":[{"start":48,"end":49}],"total_token_out":[{"start":49,"end":50}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_block_number","type":{"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber","fields":[{"name":"_opt","type":{"kind":"struct","path":"std::option::Option","fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}},{"name":"note_hash_read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210]},"bytecode":"","debug_symbols":""},{"name":"get_admin","is_unconstrained":true,"custom_attributes":[],"abi":{"parameters":[],"param_witnesses":{},"return_type":{"abi_type":{"kind":"field"},"visibility":"public"},"return_witnesses":[0]},"bytecode":"H4sIAAAAAAAA/72UTU7DMBCFnT83JSqCJYJF2LNwJQ5grsANghIQm0ZKWwkuH4GRh35yvKvhSdGMx2PP8/M4mToh87aIxAQP3taIWf85mHPwaLbabVKqKFbfX+X9Bnm5j10jloGnzM+peBqzvVRLjWpoZxPWCu/Awi+gR5jXYD5HLA/WOl3vMV9F1uhIPfF5J3J1OrKWOlU4i/W+OQ8/OrGWxVjqbcBD/wMftrLFuELtVfraplanN5r6TGucwYK/1CuRc+ftlVqCewlP9qTDBlpJbhPRkX1dIp9vMuX7d/tq8E61L89GnVSgk+Cve/jCa+uwP4xT9zY8D12fgVoZ0KQl9RnjHHH6RSQ2w/J3InVdTNol1g78FYXttVZLeZO+lULFkUV8xm69vfH2aZq6z/Z91w8f7Xg8tONr+zIed/3+d8UXdqw6UsoHAAA=","debug_symbols":"zZfNaoNAFIXfZdZS5v6MM+OrlC6mqQVBTIi2UMR3rxK1iwohkoSz8zLneD9m8cH0pj4eUlcdm9YUvbEvzhSvvWlPqZnmtkvnzhQsEjkzZfMxfSvxkJnPqi5N4dyQbcRDXNLKdg0T00Za/PJrJVmzIQxv2ciTg/F4MJ4AxhPBeMiiAREaEKMBCRqQogGhWZrQNE1oniY0UROaqRnN1PxoU1+28FO23MWpKnbd4vjK5RJFndPE9u96mXRmUkAmB8iUAzJ5QKYAyBTxmGTbBbmfW2L1nwtFd3Tcjk6+o+N3dMJtnXH4Tucqvdfl9FCezr6aw/JuHsfu53Q5GX4B"},{"name":"replace_relayer_and_slash_stake","is_unconstrained":true,"custom_attributes":["aztec(public)","aztec(internal)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"sk_hash","type":{"kind":"field"},"visibility":"private"},{"name":"new_he_pub_key","type":{"kind":"struct","path":"types::affine_point::AffinePoint","fields":[{"name":"point","type":{"kind":"struct","path":"std::ec::tecurve::affine::Point","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}}]},"visibility":"private"},{"name":"new_relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"secret_hash","type":{"kind":"field"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":54}],"new_he_pub_key":[{"start":55,"end":57}],"new_relayer":[{"start":57,"end":58}],"nonce":[{"start":59,"end":60}],"secret_hash":[{"start":58,"end":59}],"sk_hash":[{"start":54,"end":55}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274]},"bytecode":"","debug_symbols":""},{"name":"_sub_token_out_amount","is_unconstrained":true,"custom_attributes":["aztec(public)","aztec(internal)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"},{"name":"_round","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"_round":[{"start":55,"end":56}],"amount":[{"start":54,"end":55}],"inputs":[{"start":0,"end":54}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270]},"bytecode":"","debug_symbols":"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T2J/95PY3/0k9nc/if3dT2J/95PY3/0k9nc/if3dT2J/95M43v0kjnc/iePdT+J495M43v0kjnc/iePdT+J495M43v0kjnc/ifPdT+J895M43/0kznc/ifPdT+J895M43/0kznc/ifPdT+J895O43v0krnc/ievdT+J695O43v0krnc/ievdT+J695O43v0krnc/ifuvOYk9f+EDmNXHB7Ds/7TO//zq+PF3naf9PNM5P0YyvZFcb6TQGyn1Riq9kVpvpNEb6eiNdOVGGj16jx69R4/eo0fv0aP36NF79Og9evQePXqPHr2PHr2PHr2PHr2PHr2PHr2PHr2PHr2PHr2PHr2PHr2vHr2vHr2vHr2vHr2vHr2vHr2vHr2vHr2vHr2vHL3vI0fv+8jR+z5y9L6PHL3vI0fv+8jR+z5y9L6PHL3vI0fv++jR2/TobXr0Nj16mx69TY/epkdv06O36dHb9OhtevR2PXq7Hr1dj96uR2/Xo7fr0dv16O169HY9ersevUOP3qFH79Cjd+jRO/ToHXr0Dj16hx69Q4/eoUfv1KN36tE79eidevROPXqnHr1Tj96pR+/Uo3fq0bv06F169C49epcevUuP3qVH79Kjd+nRu/ToXXr01mstr15refVay6vXWl691vLqtZZXr7W8eq3l1Wstr15refVay6vXWl691vLqtZZXr7W8eq3l1Wstr15refVay6vXWl691vLqtZZXr7W8eq3l1Wstr15refVay6vXWl691vLqtZZXr7W8eq3l1Wstr15refVay6vXWl691vLqtZZXr7W8cq2lP3Kt5WskNXq/RlKj92skNXq/RlKj92skNXq/RlKj92skNXq/RlKj92skPXrLtZavkfToLddavkbSo7dca/kaSY/ecq3lf/yV03oj6dFbrrX0R661fI2kR2+51vI1kh695VrL10h69JZrLV8j6dFbrrV8jaRHb7nW8jWSHr3lWsvXSHr0lmstXyPp0VuutXyNpEdvudbyNZIeveVay9dIevSWay1fI+nRW661fI2kR2+51vI1kh695VrL10h69JZrLV8j6dFbrrV8jaRHb7nW8jWSHr3lWsvXSHr0lmstXyPp0VuutXyNpEdvudbyNZIeveVay9dIevSWay1fI+nRW661fI2kR2+51vI1kh695VrL10h69JZrLV8j6dFbrrV8jaRHb7nW8jWSHr3lWsvXSHr0lmstXyPp0VuutXyNpEdvudbyNZIeveVay9dIevSWay1fI+nRW661fI2kR2+51vI1kh695VrL10h69JZrLV8jydHb9FpL02stTa+1NL3W0h45eptea2l6raXptZam11qaXmtpeq2l6bWWptdaml5raXqtpem1lqbXWppea2l6raXptZam11qaXmtpeq2l6bWWptdaml5raXqtpem1lqbXWppea2l6raXptZam11qaXmtpeq2l6bWWptdaml5raXqtpem1lqbXWppea2l6raXptZam11qaXmtpeq2l6bWWptdaml5raXqtpem1lqbXWppea2l6raXptZam11qaXmtpeq2l6bWWptdaml5raXqtpem1lqbXWppea2l6raXptZam11qaXmtpeq2l6bWWptdaml5raXqtpem1lqbXWppea2l6raXptZam11qaXmtpeq2l6bWWptdaml5raXqtpem1lqbXWppea2l6raXptZam11qaXmtpeq2l6bWWptdaml5raXqtpem1lq7XWrpea+l6raXrtZb+yNHb9VpL12stXa+1dL3W0vVaS9drLV2vtXS91tL1WkvXay1dr7V0vdbS9VpL12stXa+1dL3W0vVaS9drLV2vtXS91tL1WkvXay1dr7V0vdbS9VpL12stXa+1dL3W0vVaS9drLV2vtXS91tL1WkvXay1dr7V0vdbS9VpL12stXa+1dL3W0vVaS9drLV2vtXS91tL1WkvXay1dr7V0vdbS9VpL12stXa+1dL3W0vVaS9drLV2vtXS91tL1WkvXay1dr7V0vdbS9VpL12stXa+1dL3W0vVaS9drLf3bW8uPdRxa52/D2eof68z5hX+Lb3+89e2f/y2un0dKvZFKb6TGR7LniY9XP+afDTWKQx3Foa7gUH+jOvJvPJQpDuWKQ8VvMFTeH0PV+WyoVByqFIdqxaFGcaijONQVHOr+FkS/P/+h88nPhjLFoVxxqFAcKhWHKsWhWnGo34Dolvbj1a9JPhnqKA519YaK51EcyhSHcsWhQnGo34Dor6l+vDrOZ0OV4lCtONQoDnUUh7qCQ9mjOJQpDuWKQ4XiUIpEN0WimyLRTZHopkh0UyS6KxLdFYnuikR3RaK7ItFdkeiuSHRXJLorEt0ViR6/BdHvj8t9fz4dyhSHcsWhQnGoVByqFIdq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P9EgP9EgP9EgP9EhP9EhP9EhP9EhP9GfhNYpaJ2G1hlonQOtA/EA8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMd8hMD8hMD8hMD8hMD8hPjSWidgtZpaJ2B1jnQOhAPID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xID8xIT8xIT8xIT8xIT8xn4TWKWidhtYZaJ0DrQPxAPITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/ITE/IT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rTPQOgdaB+IB5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cca5Cc65Cc65Cc65Cc65Cf6k9A6Ba3T0DoDrXOgdSAeQH6iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ36iQ35iQH5iQH5iQH5iQH5iPAmtU9A6Da0z0DoHWgfiAeQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnBuQnJuQnJuQnJuQnJuQn5pPQOgWt09A6A61zoHUQHtRf+Pt3np+eev7r9/cnPl7pT/3Z+9vz2avvYx+vvmb/6dUf05TUNC01zUhNc6SmuUrTfP7f4X/TNDM/pjn56TQmNY1LTRNS06TUNCU1TUtNM1LTHKlprtI0JcXikmJxSbG4pFhcUiwuKRaXFItLisUlxeKSYnFLsbilWNxSLG4pFjfJYu8f08zn05TUNC01zUhNc6SmuUrTzCM1jUlN41LThNQ0UiweKRaPFItHisUjxeKRYvGRYvGRYvGRYvGRYvGRYvGRYvGRYvGRYvGRYvGRYvGVYvGVYvGVYvGVYvGVYvGVYvGVYvGVYvGVYvElWXzPT6+Ox+eTaf7C36X4m01jUtO41DQhNU1KTcOx+PXJ88c0tz+dpqWmuUrT2CM1jUlN41LThNQ0KTUNyBurD7843O4vvDrv+Xjven2MH692/3n2fuPZ541nPxKzf0wDngpmHz7962f86TT+SE1jUtO41DQhNU1KTVNS07TUNCM1zZGaRorFIcXikGJxSLE4pFgcUiwOKRaHFItDisUhxeKQYnFKsTilWJxSLE4pFqcUi1OKxSnF4pRicUqxOKVYXFIsLikWlxSLwcrt9Z+y7cdNW/un06TUNCU1TUtNM1LTHKlprtI0YOX210xjUtO41DRSLG4pFrcUi1uKxS3F4pZicUuxeKRYPFIsHikWjxSLR4rFI8XikWLxSLF4pFg8Uiw+Uiw+Uiw+Uiw+Uiw+Uiw+Uiw+Uiw+Uiw+Uiw+Uiy+Uiy+Uiy+Uiy+Uiy+Uiy+Uiy+Uiy+Uiy+Uiy+SizOR4nF+SixOB8lFuejxOK/8L8U8JtNo8TifJRY/Bf+twl+s2mUWJyPFItNisUmxWKTYrFJsdikWGxSLDYpFpsUi02KxSbFYpdisUux2KVY7FIsdikWuxSLXYrFLsVil2KxS7E4pFgcUiwOKRaHFItDisUhxeKQYnFIsTikWBxSLE4pFqcUi1OKxSnF4pRicUqxOKVYnFIsTikWpxSLS4rFJcXikmKxVHeXUt1dSnV3KdXdpVR3l1LdXUp1dynV3aVUd5dS3V1KdXcp1d2lVHeXUt1dSnV3KdXdpVR3l1LdXUp1dynV3aVUd5dS3V1KdXcp1d2lVHeXUt1dSnV3KdXdpVR3l1LdXUp1dynV3aVUd5dS3V1KdXcp1d2lVHeXUt1dSnV3KdXdpVR3l1LdXUp1dynV3aVUd5dS3V1KdXcl1d2VVHdXUt1dSXV39SixuKS6u5Lq7kqquyup7q6kuruS6u5Kqrsrqe6upLq7kuruSqq7K6nurqS6u5Lq7kqquyup7q6kuruS6u5Kqrsrqe6upLq7kuruSqq7K6nurqS6u5Lq7kqquyup7q6kuruS6u5Kqrsrqe6upLq7kuruSqq7K6nurqS6u5Lq7kqquyup7q6kuruS6u5Kqrsrqe6upLq7kuruSqq7K6nurqS6u5Lq7kqquyup7q6kuruS6u5Kqrsrqe6upLq7kuruSqq7K6nurqS6u5Lq7kqquyup7q6kuruS6u5Kqrsrqe6upLq7kuruSqq7K6nurqS6u5Lq7kqquyup7q6kuruS6u5Kqrsrqe6upLq7kuruSqq7K6nurqS6u5Lq7kqquyup7q6kuruS6u5Kqrsrqe6upLq7kuruSqq7a6nurqW6u5bq7lqqu+tHicUt1d21VHfXUt1dS3V3LdXdtVR311LdXUt1dy3V3bVUd9dS3V1LdXct1d21VHfXUt1dS3V3TXZ38dTHNOHz6TQuNU1ITQOyOCZ/TDP16TQlNc1ITXOkprlK05Cl218xjUlN8+kv3Hs+nnvyx2Pn/HiqvvRUf+mp+dJT50tP3a889Xn30N4/PdV9Pnuqv/TUfOmp86Wn7u6p1z/5v//hf/zTP/zv//yP//p64D/+tf/rj//tT//0L3/86Z/+6f/57///v/Lv/y8="},{"name":"stake","is_unconstrained":true,"custom_attributes":["aztec(public)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"token","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"amount","type":{"kind":"field"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"amount":[{"start":56,"end":57}],"inputs":[{"start":0,"end":54}],"nonce":[{"start":57,"end":58}],"relayer":[{"start":54,"end":55}],"token":[{"start":55,"end":56}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272]},"bytecode":"","debug_symbols":""},{"name":"constructor","is_unconstrained":false,"custom_attributes":["aztec(private)","aztec(initializer)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::context::globals::private_global_variables::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"admin","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"target","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"token_in","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"token_out","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"}],"param_witnesses":{"admin":[{"start":47,"end":48}],"inputs":[{"start":0,"end":47}],"target":[{"start":48,"end":49}],"token_in":[{"start":49,"end":50}],"token_out":[{"start":50,"end":51}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_block_number","type":{"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber","fields":[{"name":"_opt","type":{"kind":"struct","path":"std::option::Option","fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}},{"name":"note_hash_read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416]},"bytecode":"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","debug_symbols":"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"},{"name":"execute_batch","is_unconstrained":false,"custom_attributes":["aztec(private)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"private_global_variables","type":{"kind":"struct","path":"aztec::context::globals::private_global_variables::PrivateGlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"encrypted_amount","type":{"kind":"array","length":2,"type":{"kind":"field"}},"visibility":"private"},{"name":"secret_key","type":{"kind":"field"},"visibility":"private"},{"name":"token_out_amount_cancelled","type":{"kind":"field"},"visibility":"private"},{"name":"tokne_in","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"token_out","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]},"visibility":"private"},{"name":"nonce_for_transfer_approval","type":{"kind":"field"},"visibility":"private"},{"name":"nonce_for_swap_approval","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"encrypted_amount":[{"start":47,"end":49}],"inputs":[{"start":0,"end":47}],"nonce_for_swap_approval":[{"start":54,"end":55}],"nonce_for_transfer_approval":[{"start":53,"end":54}],"secret_key":[{"start":49,"end":50}],"token_out":[{"start":52,"end":53}],"token_out_amount_cancelled":[{"start":50,"end":51}],"tokne_in":[{"start":51,"end":52}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_block_number","type":{"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber","fields":[{"name":"_opt","type":{"kind":"struct","path":"std::option::Option","fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}},{"name":"note_hash_read_requests","type":{"kind":"array","length":32,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_key_validation_requests","type":{"kind":"array","length":1,"type":{"kind":"struct","path":"aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest","fields":[{"name":"public_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_point::GrumpkinPoint","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}},{"name":"secret_key","type":{"kind":"struct","path":"aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey","fields":[{"name":"high","type":{"kind":"field"}},{"name":"low","type":{"kind":"field"}}]}}]}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"private_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"encrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"encrypted_log_preimages_length","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}}]},"visibility":"public"},"return_witnesses":[204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424]},"bytecode":"","debug_symbols":"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"},{"name":"_add_token_out_amount","is_unconstrained":true,"custom_attributes":["aztec(public)","aztec(internal)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"C1_serialized","type":{"kind":"array","length":2,"type":{"kind":"field"}},"visibility":"private"},{"name":"C2_serialized","type":{"kind":"array","length":2,"type":{"kind":"field"}},"visibility":"private"}],"param_witnesses":{"C1_serialized":[{"start":54,"end":56}],"C2_serialized":[{"start":56,"end":58}],"inputs":[{"start":0,"end":54}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272]},"bytecode":"","debug_symbols":""},{"name":"_validate_round","is_unconstrained":true,"custom_attributes":["aztec(public)","aztec(internal)"],"abi":{"parameters":[{"name":"inputs","type":{"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"public_global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}]},"visibility":"private"},{"name":"round","type":{"kind":"field"},"visibility":"private"}],"param_witnesses":{"inputs":[{"start":0,"end":54}],"round":[{"start":54,"end":55}]},"return_type":{"abi_type":{"kind":"struct","path":"aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs","fields":[{"name":"call_context","type":{"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext","fields":[{"name":"msg_sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"storage_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"portal_contract_address","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"function_selector","type":{"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector","fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}},{"name":"side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"gas_settings","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings","fields":[{"name":"da","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l1","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"l2","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::DimensionGasSettings","fields":[{"name":"gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"teardown_gas_limit","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"max_fee_per_gas","type":{"kind":"field"}}]}},{"name":"inclusion_fee","type":{"kind":"field"}}]}},{"name":"transaction_fee","type":{"kind":"field"}}]}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"nullifier_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"nullifier_non_existent_read_requests","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"contract_storage_update_requests","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"new_value","type":{"kind":"field"}}]}}},{"name":"contract_storage_reads","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::contrakt::storage_read::StorageRead","fields":[{"name":"storage_slot","type":{"kind":"field"}},{"name":"current_value","type":{"kind":"field"}}]}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":4,"type":{"kind":"field"}}},{"name":"new_note_hashes","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffect","fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_nullifiers","type":{"kind":"array","length":16,"type":{"kind":"struct","path":"aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash","fields":[{"name":"value","type":{"kind":"field"}},{"name":"note_hash","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}]}}},{"name":"new_l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message","fields":[{"name":"recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"content","type":{"kind":"field"}}]}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"unencrypted_logs_hash","type":{"kind":"field"}},{"name":"unencrypted_log_preimages_length","type":{"kind":"field"}},{"name":"historical_header","type":{"kind":"struct","path":"aztec::protocol_types::header::Header","fields":[{"name":"last_archive","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"content_commitment","type":{"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment","fields":[{"name":"tx_tree_height","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}]}},{"name":"state","type":{"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference","fields":[{"name":"l1_to_l2_message_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"partial","type":{"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference","fields":[{"name":"note_hash_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"nullifier_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}},{"name":"public_data_tree","type":{"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot","fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]}}]}},{"name":"global_variables","type":{"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables","fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"fee_recipient","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"gas_fees","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees","fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l1_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}]}}]}}]}},{"name":"prover_address","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"revert_code","type":{"kind":"integer","sign":"unsigned","width":8}},{"name":"gas_left","type":{"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas","fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l1_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}]}}]},"visibility":"public"},"return_witnesses":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269]},"bytecode":"","debug_symbols":"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EzekJm5ITdyQmrghNXFDauKG1MQNqYkbUhM3pCZuSE3ckJq4ITVxQ2rihtTEDamJG1ITN6QmbkhN3JCauCE1cUNq4g6piTukJu6QmrhDauLOAyLwITVxh9TEHVITd0hN3CE1cYfUxB1SE3eUTdz57tMn7KNhgjRMkoYp0jBCAp8578PM/WiYIQ1zSMNc0DDKJu6HhxFy5j729ulrH/00KcuvHx5G99MUMfntp19/WR8No/tpijR/GybTPxrmgoYRVjw/YpggDZOkYYo0TJOGGdIwJM4EiTPCiudHDGOkYUgETiWB7/s/tavtBz6d97x9dz353f/96f4+ev56R69f7+iNGP3bYZT/LKh5/1G6Hw5zSMNc0DD1kIYx0jBOGiZIwyRpmCIN06RhSAQuEoGLROAmEbhJBG4SgZtE4CYRuEkEbhKBm0TgJhG4SQQeEoGHROAhEXhIBB4SgYdE4CEReEgEHhKBh0TgQyLwIUHvkKB3SNA7JOgdEvSECU/UeXMPovOnn7CFwc/PPvr91Y6+SGa+fSC2D+T2gdo+0NsHZvvA2T5wdw/cRVLw7QO2fcC3D8T2gdw+UNsHevvAbB842we2m7btpm27adtu2rabtu2mbbtp227atpu27aZtu2nfbtq3m/btpn27ad9u2reb9u2mfbtp327at5uO7aZju+nYbjq2m47tpmO76dhuOrabju2mY7vp3G46t5vO7aZzu+ncbjq3m87tpnO76dxuOrebru2ma7vp2m66tpuu7aZru+nabrq2m67tpmu76d5uureb7u2me7vp3m66t5vu7aZ7u+nebrq3m57tpme76dluerabnu2mZ7vp2W56tpue7aZnu+mz3fTZbvpsN322mz7bTZ/tps9202e76bPd9Nlu+m43fbeb3t7I7vZGdrc3sru9kd3tjexub2R3eyO72xuZPdsj2esJWz/h6ydi/USun6j1E71+YtZPnPUT653beue23rmtd27rndt657beua13buud23rntt65r3fu6537eue+3rmvd+7rnft6577eua937uudx3rnsd55rHce653Heuex3nmsdx7rncd657Heea53nuud53rnud55rnee653neue53nmud57rndd657Xeea13Xuud13rntd55rXde653Xeue13nmvd97rnfd6573eea933uud93rnvd55r3fe653P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4bWWh9daXl5reXmt5eW1lpfXWt4HR+/Lay0vr7W8vNby8lrLy2stL6+1vLzW8vJay8trLS+vtby81vLyWsvLay0vr7W8vNby8lrLy2stL6+1vLzW8vJay8trLS+vtby81vLyWsvLay0vr7W8vNby8lrLy2stL6+1vLzW8vJay8trLS+vtby81vLyWsvLay0vr7W8vNby8lrLy2stL6+1vLzW8vJay8trLS+vtby81vLyWsvLay0vr7W8vNby8lrLy2stL6+1vLzW8vJay8trLS+vtby81vLyWsvLay0vr7W8vNby8lrLy2stL6+1vLzW8vJay8trLS+vtby81vLyWsvLay0vr7W8vNby8lrLy2stL6+1vLzW8vJay8trLS+vtby81vLyWsvLay0vr7W8vNby8lrLy2stL6+1vLzW8vJay8trLS+vtby41tIfXGv5GolG79dINHq/RqLR+zUSjd6vkWj0fo1Eo/drJBq9XyPR6P0aiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaiUdvXGv5GolHb1xr+RqJR29ca/kaCUdv47WWxmstjddaGq+1tAdHb+O1lsZrLY3XWhqvtTRea2m81tJ4raXxWkvjtZbGay2N11oar7U0XmtpvNbSeK2l8VpL47WWxmstjddaGq+1NF5rabzW0nitpfFaS+O1lsZrLY3XWhqvtTRea2m81tJ4raXxWkvjtZbGay2N11oar7U0XmtpvNbSeK2l8VpL47WWxmstjddaGq+1NF5rabzW0nitpfFaS+O1lsZrLY3XWhqvtTRea2m81tJ4raXxWkvjtZbGay2N11oar7U0XmtpvNbS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"}],"outputs":{"structs":{"functions":[{"kind":"struct","path":"BatcherVault::finalize_execute_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::finalize_execute_parameters","fields":[{"name":"secret_hash_for_redeeming_minted_notes","type":{"kind":"field"}},{"name":"amount","type":{"kind":"field"}},{"name":"secret_for_L1_to_L2_message_consumption","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::_initialize_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::_initialize_parameters","fields":[{"name":"admin","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"target","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"token_in","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"token_out","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},{"kind":"struct","path":"BatcherVault::claim_token_in_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::claim_token_in_parameters","fields":[{"name":"round","type":{"kind":"field"}},{"name":"total_token_in","type":{"kind":"field"}},{"name":"total_token_out","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::spend_public_authwit_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::spend_public_authwit_parameters","fields":[{"name":"inner_hash","type":{"kind":"field"}}]}},{"name":"return_type","type":{"kind":"field"}}]},{"kind":"struct","path":"BatcherVault::dipute_relayer_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::dipute_relayer_parameters","fields":[{"name":"he_secret_key","type":{"kind":"field"}},{"name":"new_sk_hash","type":{"kind":"field"}},{"name":"new_he_pub_key","type":{"kind":"field"}},{"name":"new_he_secret_key","type":{"kind":"field"}},{"name":"new_relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"secret_hash","type":{"kind":"field"}},{"name":"nonce","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::check_sk_hash_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::check_sk_hash_parameters","fields":[{"name":"sk_hash","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::_init_relayer_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::_init_relayer_parameters","fields":[{"name":"relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"bonding_token","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"bonding_amount","type":{"kind":"field"}},{"name":"he_pub_key_x","type":{"kind":"field"}},{"name":"he_pub_key_y","type":{"kind":"field"}},{"name":"sk_hash","type":{"kind":"field"}},{"name":"interval","type":{"kind":"field"}},{"name":"rand","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::deposit_to_batch_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::deposit_to_batch_parameters","fields":[{"name":"current_round","type":{"kind":"field"}},{"name":"amount_out","type":{"kind":"field"}},{"name":"relayer_he_pubkey","type":{"kind":"struct","path":"types::affine_point::AffinePoint","fields":[{"name":"point","type":{"kind":"struct","path":"std::ec::tecurve::affine::Point","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}}]}},{"name":"rand","type":{"kind":"field"}},{"name":"nonce","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::cancel_batch_and_claim_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::cancel_batch_and_claim_parameters","fields":[{"name":"current_round","type":{"kind":"field"}},{"name":"secret_hash","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::validate_execute_batch_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::validate_execute_batch_parameters","fields":[{"name":"sender","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"c1","type":{"kind":"field"}},{"name":"c2","type":{"kind":"field"}},{"name":"amount_out","type":{"kind":"field"}},{"name":"amount_out_sub_cancelled","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::_add_token_out_amount_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::_add_token_out_amount_parameters","fields":[{"name":"C1_serialized","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"C2_serialized","type":{"kind":"array","length":2,"type":{"kind":"field"}}}]}}]},{"kind":"struct","path":"BatcherVault::constructor_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::constructor_parameters","fields":[{"name":"admin","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"target","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"token_in","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"token_out","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}}]}}]},{"kind":"struct","path":"BatcherVault::_sub_token_out_amount_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::_sub_token_out_amount_parameters","fields":[{"name":"amount","type":{"kind":"field"}},{"name":"_round","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::_validate_round_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::_validate_round_parameters","fields":[{"name":"round","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::execute_batch_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::execute_batch_parameters","fields":[{"name":"encrypted_amount","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"secret_key","type":{"kind":"field"}},{"name":"token_out_amount_cancelled","type":{"kind":"field"}},{"name":"tokne_in","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"token_out","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"nonce_for_transfer_approval","type":{"kind":"field"}},{"name":"nonce_for_swap_approval","type":{"kind":"field"}}]}},{"name":"return_type","type":{"kind":"field"}}]},{"kind":"struct","path":"BatcherVault::replace_relayer_and_slash_stake_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::replace_relayer_and_slash_stake_parameters","fields":[{"name":"sk_hash","type":{"kind":"field"}},{"name":"new_he_pub_key","type":{"kind":"struct","path":"types::affine_point::AffinePoint","fields":[{"name":"point","type":{"kind":"struct","path":"std::ec::tecurve::affine::Point","fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}}]}}]}},{"name":"new_relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"secret_hash","type":{"kind":"field"}},{"name":"nonce","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::init_relayer_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::init_relayer_parameters","fields":[{"name":"relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"bonding_token","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"bonding_amount","type":{"kind":"field"}},{"name":"he_pub_key","type":{"kind":"array","length":2,"type":{"kind":"field"}}},{"name":"sk_hash","type":{"kind":"field"}},{"name":"interval","type":{"kind":"field"}},{"name":"he_secret_key","type":{"kind":"field"}},{"name":"rand","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::stake_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::stake_parameters","fields":[{"name":"relayer","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"token","type":{"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress","fields":[{"name":"inner","type":{"kind":"field"}}]}},{"name":"amount","type":{"kind":"field"}},{"name":"nonce","type":{"kind":"field"}}]}}]},{"kind":"struct","path":"BatcherVault::_validate_claim_params_abi","fields":[{"name":"parameters","type":{"kind":"struct","path":"BatcherVault::_validate_claim_params_parameters","fields":[{"name":"_round","type":{"kind":"field"}},{"name":"_total_token_in","type":{"kind":"field"}},{"name":"_total_token_out","type":{"kind":"field"}}]}}]}]},"globals":{"storage":[{"kind":"struct","fields":[{"name":"admin","value":{"kind":"struct","fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"1"}},{"name":"typ","value":{"kind":"string","value":"PublicImmutable<AztecAddress>"}}]}},{"name":"target","value":{"kind":"struct","fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"2"}},{"name":"typ","value":{"kind":"string","value":"SharedImmutable<AztecAddress>"}}]}},{"name":"token_out","value":{"kind":"struct","fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"3"}},{"name":"typ","value":{"kind":"string","value":"SharedImmutable<AztecAddress>"}}]}},{"name":"token_in","value":{"kind":"struct","fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"4"}},{"name":"typ","value":{"kind":"string","value":"SharedImmutable<AztecAddress>"}}]}},{"name":"current_round","value":{"kind":"struct","fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"5"}},{"name":"typ","value":{"kind":"string","value":"PublicMutable<Field>"}}]}},{"name":"batch_relayer","value":{"kind":"struct","fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"6"}},{"name":"typ","value":{"kind":"string","value":"PublicMutable<BatchRelayer>"}}]}},{"name":"rounds","value":{"kind":"struct","fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"7"}},{"name":"typ","value":{"kind":"string","value":"Map<Field, PublicMutable<Round>>"}}]}},{"name":"deposit_notes","value":{"kind":"struct","fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"8"}},{"name":"typ","value":{"kind":"string","value":"Map<AztecAddress, PrivateMutable<DepositNote>>"}}]}}]}],"notes":[{"kind":"tuple","fields":[{"kind":"integer","sign":false,"value":"6810111211111510511678111116101"},{"kind":"string","value":"DepositNote"}]}]}},"file_map":{"2":{"source":"// docs:start:eq-trait\ntrait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\nimpl Eq for Field { fn eq(self, other: Field) -> bool { self == other } }\n\nimpl Eq for u64 { fn eq(self, other: u64) -> bool { self == other } }\nimpl Eq for u32 { fn eq(self, other: u32) -> bool { self == other } }\nimpl Eq for u8 { fn eq(self, other: u8) -> bool { self == other } }\nimpl Eq for u1 { fn eq(self, other: u1) -> bool { self == other } }\n\nimpl Eq for i8 { fn eq(self, other: i8) -> bool { self == other } }\nimpl Eq for i32 { fn eq(self, other: i32) -> bool { self == other } }\nimpl Eq for i64 { fn eq(self, other: i64) -> bool { self == other } }\n\nimpl Eq for () { fn eq(_self: Self, _other: ()) -> bool { true } }\nimpl Eq for bool { fn eq(self, other: bool) -> bool { self == other } }\n\nimpl<T, N> Eq for [T; N] where T: Eq {\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0 .. self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T] where T: Eq {\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0 .. self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<N> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B) where A: Eq, B: Eq {\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C) where A: Eq, B: Eq, C: Eq {\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D) where A: Eq, B: Eq, C: Eq, D: Eq {\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E) where A: Eq, B: Eq, C: Eq, D: Eq, E: Eq {\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3) & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\nstruct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n// docs:start:ord-trait\ntrait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else {\n            if other {\n                Ordering::less()\n            } else {\n                Ordering::equal()\n            }\n        }\n    }\n}\n\nimpl<T, N> Ord for [T; N] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0 .. self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0 .. self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B) where A: Ord, B: Ord {\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C) where A: Ord, B: Ord, C: Ord {\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D) where A: Ord, B: Ord, C: Ord, D: Ord {\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E) where A: Ord, B: Ord, C: Ord, D: Ord, E: Ord {\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n","path":"std/cmp.nr"},"3":{"source":"struct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: u64,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new() -> Self {\n        let zeroed = crate::unsafe::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: u64) -> T {\n        assert(index as u64 < self.len);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: u64) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen as u64, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn len(self) -> u64 {\n        self.len\n    }\n\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u64 {\n        MaxLen\n    }\n\n    // This is a intermediate method, while we don't have an\n    // .extend method\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    pub fn extend_from_array<Len>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    pub fn extend_from_bounded_vec<Len>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        }\n        self.len = new_len;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::unsafe::zeroed();\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if !exceeded_len {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n","path":"std/collections/bounded_vec.nr"},"14":{"source":"mod affine {\n    // Affine coordinate representation of Twisted Edwards curves\n    // Points are represented by two-dimensional Cartesian coordinates.\n    // Group operations are implemented in terms of those in CurveGroup (in this case, extended Twisted Edwards) coordinates\n    // for reasons of efficiency.\n    // See <https://eprint.iacr.org/2008/522.pdf> for details.\n    use crate::ec::tecurve::curvegroup;\n    use crate::ec::montcurve::affine::Curve as MCurve;\n    use crate::ec::montcurve::affine::Point as MPoint;\n    use crate::ec::swcurve::affine::Curve as SWCurve;\n    use crate::ec::swcurve::affine::Point as SWPoint;\n    use crate::cmp::Eq;\n\n    // Curve specification\n    struct Curve { // Twisted Edwards curve\n        // Coefficients in defining equation ax^2 + y^2 = 1 + dx^2y^2\n        a: Field,\n        d: Field,\n        // Generator as point in Cartesian coordinates\n        gen: Point\n    }\n    // Point in Cartesian coordinates\n    struct Point {\n        x: Field,\n        y: Field\n    }\n\n    impl Point {\n        // Point constructor\n        pub fn new(x: Field, y: Field) -> Self {\n            Self { x, y }\n        }\n\n        // Check if zero\n        pub fn is_zero(self) -> bool {\n            self.eq(Point::zero())\n        }\n\n        // Conversion to CurveGroup coordinates\n        fn into_group(self) -> curvegroup::Point {\n            let Self {x, y} = self;\n\n            curvegroup::Point::new(x, y, x * y, 1)\n        }\n\n        // Additive identity\n        pub fn zero() -> Self {\n            Point::new(0, 1)\n        }\n\n        // Negation\n        fn negate(self) -> Self {\n            let Self {x, y} = self;\n            Point::new(0 - x, y)\n        }\n\n        // Map into prime-order subgroup of equivalent Montgomery curve\n        fn into_montcurve(self) -> MPoint {\n            if self.is_zero() {\n                MPoint::zero()\n            } else {\n                let Self {x, y} = self;\n                let x0 = (1 + y) / (1 - y);\n                let y0 = (1 + y) / (x * (1 - y));\n\n                MPoint::new(x0, y0)\n            }\n        }\n    }\n\n    impl Eq for Point {\n        fn eq(self, p: Self) -> bool {\n             let Self {x: x1, y: y1} = self;\n            let Self {x: x2, y: y2} = p;\n\n            (x1 == x2) & (y1 == y2)\n        }\n    }\n\n    impl Curve {\n        // Curve constructor\n        pub fn new(a: Field, d: Field, gen: Point) -> Curve {\n            // Check curve coefficients\n            assert(a * d * (a - d) != 0);\n\n            let curve = Curve { a, d, gen };\n\n            // gen should be on the curve\n            assert(curve.contains(curve.gen));\n\n            curve\n        }\n\n        // Conversion to CurveGroup coordinates\n        fn into_group(self) -> curvegroup::Curve {\n            let Curve{a, d, gen} = self;\n\n            curvegroup::Curve { a, d, gen: gen.into_group() }\n        }\n\n        // Membership check\n        pub fn contains(self, p: Point) -> bool {\n            let Point {x, y} = p;\n            self.a * x * x + y * y == 1 + self.d * x * x * y * y\n        }\n\n        // Point addition, implemented in terms of mixed addition for reasons of efficiency\n        pub fn add(self, p1: Point, p2: Point) -> Point {\n            self.mixed_add(p1, p2.into_group()).into_affine()\n        }\n\n        // Mixed point addition, i.e. first argument in affine, second in CurveGroup coordinates.\n        fn mixed_add(self, p1: Point, p2: curvegroup::Point) -> curvegroup::Point {\n            let Point{x: x1, y: y1} = p1;\n            let curvegroup::Point{x: x2, y: y2, t: t2, z: z2} = p2;\n\n            let a = x1 * x2;\n            let b = y1 * y2;\n            let c = self.d * x1 * y1 * t2;\n            let e = (x1 + y1) * (x2 + y2) - a - b;\n            let f = z2 - c;\n            let g = z2 + c;\n            let h = b - self.a * a;\n\n            let x = e * f;\n            let y = g * h;\n            let t = e * h;\n            let z = f * g;\n\n            curvegroup::Point::new(x, y, t, z)\n        }\n\n        // Scalar multiplication with scalar represented by a bit array (little-endian convention).\n        // If k is the natural number represented by `bits`, then this computes p + ... + p k times.\n        fn bit_mul<N>(self, bits: [u1; N], p: Point) -> Point {\n            self.into_group().bit_mul(bits, p.into_group()).into_affine()\n        }\n\n        // Scalar multiplication (p + ... + p n times)\n        fn mul(self, n: Field, p: Point) -> Point {\n            self.into_group().mul(n, p.into_group()).into_affine()\n        }\n\n        // Multi-scalar multiplication (n[0]*p[0] + ... + n[N]*p[N], where * denotes scalar multiplication)\n        fn msm<N>(self, n: [Field; N], p: [Point; N]) -> Point {\n            let mut out = Point::zero();\n\n            for i in 0..N {\n                out = self.add(out, self.mul(n[i], p[i]));\n            }\n\n            out\n        }\n\n        // Point subtraction\n        fn subtract(self, p1: Point, p2: Point) -> Point {\n            self.add(p1, p2.negate())\n        }\n\n        // Conversion to equivalent Montgomery curve\n        pub fn into_montcurve(self) -> MCurve {\n            let j = 2 * (self.a + self.d) / (self.a - self.d);\n            let k = 4 / (self.a - self.d);\n            let gen_montcurve = self.gen.into_montcurve();\n\n            MCurve::new(j, k, gen_montcurve)\n        }\n\n        // Conversion to equivalent Short Weierstraß curve\n        pub fn into_swcurve(self) -> SWCurve {\n            self.into_montcurve().into_swcurve()\n        }\n\n        // Point mapping into equivalent Short Weierstraß curve\n        pub fn map_into_swcurve(self, p: Point) -> SWPoint {\n            self.into_montcurve().map_into_swcurve(p.into_montcurve())\n        }\n\n        // Point mapping from equivalent Short Weierstraß curve\n        fn map_from_swcurve(self, p: SWPoint) -> Point {\n            self.into_montcurve().map_from_swcurve(p).into_tecurve()\n        }\n\n        // Elligator 2 map-to-curve method (via rational map)\n        fn elligator2_map(self, u: Field) -> Point {\n            self.into_montcurve().elligator2_map(u).into_tecurve()\n        }\n\n        // Simplified SWU map-to-curve method (via rational map)\n        fn swu_map(self, z: Field, u: Field) -> Point {\n            self.into_montcurve().swu_map(z, u).into_tecurve()\n        }\n    }\n}\nmod curvegroup {\n    // CurveGroup coordinate representation of Twisted Edwards curves\n    // Points are represented by four-dimensional projective coordinates, viz. extended Twisted Edwards coordinates.\n    // See §3 of <https://eprint.iacr.org/2008/522.pdf> for details.\n    use crate::ec::tecurve::affine;\n    use crate::ec::montcurve::curvegroup::Curve as MCurve;\n    use crate::ec::montcurve::curvegroup::Point as MPoint;\n    use crate::ec::swcurve::curvegroup::Curve as SWCurve;\n    use crate::ec::swcurve::curvegroup::Point as SWPoint;\n    use crate::cmp::Eq;\n\n    // Curve specification\n    struct Curve { // Twisted Edwards curve\n        // Coefficients in defining equation a(x^2 + y^2)z^2 = z^4 + dx^2y^2\n        a: Field,\n        d: Field,\n        // Generator as point in projective coordinates\n        gen: Point\n    }\n    // Point in extended twisted Edwards coordinates\n    struct Point {\n        x: Field,\n        y: Field,\n        t: Field,\n        z: Field\n    }\n\n    impl Point {\n        // Point constructor\n        pub fn new(x: Field, y: Field, t: Field, z: Field) -> Self {\n            Self { x, y, t, z }\n        }\n\n        // Check if zero\n        pub fn is_zero(self) -> bool {\n            let Self {x, y, t, z} = self;\n            (x == 0) & (y == z) & (y != 0) & (t == 0)\n        }\n\n        // Conversion to affine coordinates\n        pub fn into_affine(self) -> affine::Point {\n            let Self {x, y, t: _t, z} = self;\n\n            affine::Point::new(x / z, y / z)\n        }\n\n        // Additive identity\n        pub fn zero() -> Self {\n            Point::new(0, 1, 0, 1)\n        }\n\n        // Negation\n        fn negate(self) -> Self {\n            let Self {x, y, t, z} = self;\n\n            Point::new(0 - x, y, 0 - t, z)\n        }\n\n        // Map into prime-order subgroup of equivalent Montgomery curve\n        fn into_montcurve(self) -> MPoint {\n            self.into_affine().into_montcurve().into_group()\n        }\n    }\n\n    impl Eq for Point {\n        fn eq(self, p: Self) -> bool {\n            let Self {x: x1, y: y1, t: _t1, z: z1} = self;\n            let Self {x: x2, y: y2, t: _t2, z:z2} = p;\n\n            (x1*z2 == x2*z1) & (y1*z2 == y2*z1)\n        }\n    }\n\n    impl Curve {\n        // Curve constructor\n        pub fn new(a: Field, d: Field, gen: Point) -> Curve {\n            // Check curve coefficients\n            assert(a * d * (a - d) != 0);\n\n            let curve = Curve { a, d, gen };\n\n            // gen should be on the curve\n            assert(curve.contains(curve.gen));\n\n            curve\n        }\n\n        // Conversion to affine coordinates\n        pub fn into_affine(self) -> affine::Curve {\n            let Curve{a, d, gen} = self;\n\n            affine::Curve { a, d, gen: gen.into_affine() }\n        }\n\n        // Membership check\n        pub fn contains(self, p: Point) -> bool {\n            let Point {x, y, t, z} = p;\n\n            (z != 0)\n                & (z * t == x * y)\n                & (z * z * (self.a * x * x + y * y) == z * z * z * z + self.d * x * x * y * y)\n        }\n\n        // Point addition\n        pub fn add(self, p1: Point, p2: Point) -> Point {\n            let Point{x: x1, y: y1, t: t1, z: z1} = p1;\n            let Point{x: x2, y: y2, t: t2, z: z2} = p2;\n\n            let a = x1 * x2;\n            let b = y1 * y2;\n            let c = self.d * t1 * t2;\n            let d = z1 * z2;\n            let e = (x1 + y1) * (x2 + y2) - a - b;\n            let f = d - c;\n            let g = d + c;\n            let h = b - self.a * a;\n\n            let x = e * f;\n            let y = g * h;\n            let t = e * h;\n            let z = f * g;\n\n            Point::new(x, y, t, z)\n        }\n\n        // Point doubling, cf. §3.3\n        pub fn double(self, p: Point) -> Point {\n            let Point{x, y, t: _t, z} = p;\n\n            let a = x * x;\n            let b = y * y;\n            let c = 2 * z * z;\n            let d = self.a * a;\n            let e = (x + y) * (x + y) - a - b;\n            let g = d + b;\n            let f = g - c;\n            let h = d - b;\n\n            let x0 = e * f;\n            let y0 = g * h;\n            let t0 = e * h;\n            let z0 = f * g;\n\n            Point::new(x0, y0, t0, z0)\n        }\n\n        // Scalar multiplication with scalar represented by a bit array (little-endian convention).\n        // If k is the natural number represented by `bits`, then this computes p + ... + p k times.\n        fn bit_mul<N>(self, bits: [u1; N], p: Point) -> Point {\n            let mut out = Point::zero();\n\n            for i in 0..N {\n                out = self.add(\n                    self.add(out, out),\n                    if(bits[N - i - 1] == 0) {Point::zero()} else {p});\n            }\n\n            out\n        }\n\n        // Scalar multiplication (p + ... + p n times)\n        pub fn mul(self, n: Field, p: Point) -> Point {\n            let N_BITS = crate::field::modulus_num_bits();\n\n            // TODO: temporary workaround until issue 1354 is solved\n            let mut n_as_bits: [u1; 254] = [0; 254];\n            let tmp = n.to_le_bits(N_BITS as u32);\n            for i in 0..254 {\n                n_as_bits[i] = tmp[i];\n            }\n\n            self.bit_mul(n_as_bits, p)\n        }\n\n        // Multi-scalar multiplication (n[0]*p[0] + ... + n[N]*p[N], where * denotes scalar multiplication)\n        fn msm<N>(self, n: [Field; N], p: [Point; N]) -> Point {\n            let mut out = Point::zero();\n\n            for i in 0..N {\n                out = self.add(out, self.mul(n[i], p[i]));\n            }\n\n            out\n        }\n\n        // Point subtraction\n        fn subtract(self, p1: Point, p2: Point) -> Point {\n            self.add(p1, p2.negate())\n        }\n\n        // Conversion to equivalent Montgomery curve\n        fn into_montcurve(self) -> MCurve {\n            self.into_affine().into_montcurve().into_group()\n        }\n\n        // Conversion to equivalent Short Weierstraß curve\n        fn into_swcurve(self) -> SWCurve {\n            self.into_montcurve().into_swcurve()\n        }\n\n        // Point mapping into equivalent short Weierstraß curve\n        pub fn map_into_swcurve(self, p: Point) -> SWPoint {\n            self.into_montcurve().map_into_swcurve(p.into_montcurve())\n        }\n\n        // Point mapping from equivalent short Weierstraß curve\n        fn map_from_swcurve(self, p: SWPoint) -> Point {\n            self.into_montcurve().map_from_swcurve(p).into_tecurve()\n        }\n\n        // Elligator 2 map-to-curve method (via rational maps)\n        fn elligator2_map(self, u: Field) -> Point {\n            self.into_montcurve().elligator2_map(u).into_tecurve()\n        }\n\n        // Simplified SWU map-to-curve method (via rational map)\n        fn swu_map(self, z: Field, u: Field) -> Point {\n            self.into_montcurve().swu_map(z, u).into_tecurve()\n        }\n    }\n}\n","path":"std/ec/tecurve.nr"},"19":{"source":"// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\nglobal TWO_POW_128: Field = 0x100000000000000000000000000000000;\n\n/// A hint for decomposing a single field into two 16 byte fields.\nunconstrained fn decompose_unsafe(x: Field) -> (Field, Field) {\n    let x_bytes = x.to_le_bytes(32);\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let mut offset = 1;\n    for i in 0..16 {\n        low += (x_bytes[i] as Field) * offset;\n        high += (x_bytes[i + 16] as Field) * offset;\n        offset *= 256;\n    }\n\n    (low, high)\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    let borrow = lte_unsafe(alo, blo, 16);\n\n    let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n    let rhi = ahi - bhi - (borrow as Field);\n\n    rlo.assert_max_bit_size(128);\n    rhi.assert_max_bit_size(128);\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    // Take hints of the decomposition\n    let (xlo, xhi) = decompose_unsafe(x);\n\n    // Range check the limbs\n    xlo.assert_max_bit_size(128);\n    xhi.assert_max_bit_size(128);\n\n    // Check that the decomposition is correct\n    assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n    // Assert that the decomposition of P is greater than the decomposition of x\n    assert_gt_limbs((PLO, PHI), (xlo, xhi));\n    (xlo, xhi)\n}\n\nunconstrained fn lt_unsafe(x: Field, y: Field, num_bytes: u32) -> bool {\n    let x_bytes = x.__to_le_radix(256, num_bytes);\n    let y_bytes = y.__to_le_radix(256, num_bytes);\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i];\n            let y_byte = y_bytes[num_bytes - 1 - i];\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nunconstrained fn lte_unsafe(x: Field, y: Field, num_bytes: u32) -> bool {\n    lt_unsafe(x, y, num_bytes) | (x == y)\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    // Decompose a and b\n    let a_limbs = decompose(a);\n    let b_limbs = decompose(b);\n\n    // Assert that a_limbs is greater than b_limbs\n    assert_gt_limbs(a_limbs, b_limbs)\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if a == b {\n        false\n    } else if lt_unsafe(a, b, 32) {\n        assert_gt(b, a);\n        false\n    } else {\n        assert_gt(a, b);\n        true\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{decompose_unsafe, decompose, lt_unsafe, assert_gt, gt, lt, TWO_POW_128, lte_unsafe, PLO, PHI};\n\n    #[test]\n    fn check_decompose_unsafe() {\n        assert_eq(decompose_unsafe(TWO_POW_128), (0, 1));\n        assert_eq(decompose_unsafe(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose_unsafe(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    fn check_lt_unsafe() {\n        assert(lt_unsafe(0, 1, 16));\n        assert(lt_unsafe(0, 0x100, 16));\n        assert(lt_unsafe(0x100, TWO_POW_128 - 1, 16));\n        assert(!lt_unsafe(0, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_lte_unsafe() {\n        assert(lte_unsafe(0, 1, 16));\n        assert(lte_unsafe(0, 0x100, 16));\n        assert(lte_unsafe(0x100, TWO_POW_128 - 1, 16));\n        assert(!lte_unsafe(0, TWO_POW_128, 16));\n\n        assert(lte_unsafe(0, 0, 16));\n        assert(lte_unsafe(0x100, 0x100, 16));\n        assert(lte_unsafe(TWO_POW_128 - 1, TWO_POW_128 - 1, 16));\n        assert(lte_unsafe(TWO_POW_128, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n","path":"std/field/bn254.nr"},"20":{"source":"mod bn254;\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    pub fn to_le_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_le_bits(bit_size)\n    }\n\n    pub fn to_be_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_be_bits(bit_size)\n    }\n\n    #[builtin(to_le_bits)]\n    fn __to_le_bits(self, _bit_size: u32) -> [u1] {}\n\n    #[builtin(to_be_bits)]\n    fn __to_be_bits(self, bit_size: u32) -> [u1] {}\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    pub fn assert_max_bit_size(self: Self, bit_size: u32) {\n        crate::assert_constant(bit_size);\n        assert(bit_size < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(bit_size);\n    }\n\n    pub fn to_le_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_le_radix(256, byte_size)\n    }\n\n    pub fn to_be_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_be_radix(256, byte_size)\n    }\n\n    pub fn to_le_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_le_radix(radix, result_len)\n    }\n\n    pub fn to_be_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_be_radix(radix, result_len)\n    }\n\n    // decompose `_self` into a `_result_len` vector over the `_radix` basis\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix(self, radix: u32, result_len: u32) -> [u8] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix(self, radix: u32, result_len: u32) -> [u8] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    let num_bytes = (modulus_num_bits() as u32 + 7) / 8;\n    let x_bytes = x.to_le_bytes(num_bytes);\n    let y_bytes = y.to_le_bytes(num_bytes);\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i] as u8;\n            let y_byte = y_bytes[num_bytes - 1 - i] as u8;\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\n","path":"std/field.nr"},"30":{"source":"mod poseidon;\nmod mimc;\nmod poseidon2;\nmod pedersen;\n\nuse crate::default::Default;\nuse crate::uint128::U128;\n\n#[foreign(sha256)]\n// docs:start:sha256\npub fn sha256<N>(input: [u8; N]) -> [u8; 32]\n// docs:end:sha256\n{}\n\n#[foreign(sha256)]\n// docs:start:sha256_slice\npub fn sha256_slice(input: [u8]) -> [u8; 32]\n// docs:end:sha256_slice\n{}\n\n#[foreign(blake2s)]\n// docs:start:blake2s\npub fn blake2s<N>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake2s\n{}\n\n#[foreign(blake2s)]\n// docs:start:blake2s_slice\npub fn blake2s_slice(input: [u8]) -> [u8; 32]\n// docs:end:blake2s_slice\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3\npub fn blake3<N>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake3\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3_slice\npub fn blake3_slice(input: [u8]) -> [u8; 32]\n// docs:end:blake3_slice\n{}\n\n// docs:start:pedersen_commitment\nstruct PedersenPoint {\n   x : Field,\n   y : Field,\n}\n\npub fn pedersen_commitment<N>(input: [Field; N]) -> PedersenPoint {\n    // docs:end:pedersen_commitment\n    pedersen_commitment_with_separator(input, 0)\n}\n\n// docs:start:pedersen_commitment_slice\npub fn pedersen_commitment_slice(input: [Field]) -> PedersenPoint {\n    pedersen_commitment_with_separator_slice(input, 0)\n}\n// docs:end:pedersen_commitment_slice\n\n#[foreign(pedersen_commitment)]\npub fn __pedersen_commitment_with_separator<N>(input: [Field; N], separator: u32) -> [Field; 2] {}\n\n#[foreign(pedersen_commitment)]\npub fn __pedersen_commitment_with_separator_slice(input: [Field], separator: u32) -> [Field; 2] {}\n\npub fn pedersen_commitment_with_separator<N>(input: [Field; N], separator: u32) -> PedersenPoint {\n    let values = __pedersen_commitment_with_separator(input, separator);\n    PedersenPoint { x: values[0], y: values[1] }\n}\n\npub fn pedersen_commitment_with_separator_slice(input: [Field], separator: u32) -> PedersenPoint {\n    let values = __pedersen_commitment_with_separator_slice(input, separator);\n    PedersenPoint { x: values[0], y: values[1] }\n}\n\n// docs:start:pedersen_hash\npub fn pedersen_hash<N>(input: [Field; N]) -> Field\n// docs:end:pedersen_hash\n{\n    pedersen_hash_with_separator(input, 0)\n}\n\n// docs:start:pedersen_hash_slice\npub fn pedersen_hash_slice(input: [Field]) -> Field\n// docs:end:pedersen_hash_slice\n{\n    pedersen_hash_with_separator_slice(input, 0)\n}\n\n#[foreign(pedersen_hash)]\npub fn pedersen_hash_with_separator<N>(input: [Field; N], separator: u32) -> Field {}\n\n#[foreign(pedersen_hash)]\npub fn pedersen_hash_with_separator_slice(input: [Field], separator: u32) -> Field {}\n\npub fn hash_to_field(inputs: [Field]) -> Field {\n    let mut inputs_as_bytes = &[];\n\n    for input in inputs {\n        let input_bytes = input.to_le_bytes(32);\n        for i in 0..32 {\n            inputs_as_bytes = inputs_as_bytes.push_back(input_bytes[i]);\n        }\n    }\n\n    let hashed_input = blake2s_slice(inputs_as_bytes);\n    crate::field::bytes32_to_field(hashed_input)\n}\n\n#[foreign(keccak256)]\n// docs:start:keccak256\npub fn keccak256<N>(input: [u8; N], message_size: u32) -> [u8; 32]\n// docs:end:keccak256\n{}\n\n#[foreign(keccak256)]\n// docs:start:keccak256_slice\npub fn keccak256_slice(input: [u8], message_size: u32) -> [u8; 32]\n// docs:end:keccak256_slice\n{}\n\n#[foreign(poseidon2_permutation)]\npub fn poseidon2_permutation<N>(_input: [Field; N], _state_length: u32) -> [Field; N] {}\n\n#[foreign(sha256_compression)]\npub fn sha256_compression(_input: [u32; 16], _state: [u32; 8]) -> [u32; 8] {}\n\n// Generic hashing support. \n// Partially ported and impacted by rust.\n\n// Hash trait shall be implemented per type.\ntrait Hash{\n    fn hash<H>(self, state: &mut H) where H: Hasher;\n}\n\n// Hasher trait shall be implemented by algorithms to provide hash-agnostic means.\n// TODO: consider making the types generic here ([u8], [Field], etc.)\ntrait Hasher{\n    fn finish(self) -> Field;\n    \n    fn write(&mut self, input: [Field]);\n}\n\n// BuildHasher is a factory trait, responsible for production of specific Hasher.\ntrait BuildHasher<H> where H: Hasher{\n    fn build_hasher(self) -> H;\n}\n\nstruct BuildHasherDefault<H>;\n\nimpl<H> BuildHasher<H> for BuildHasherDefault<H>\nwhere \n    H: Hasher + Default\n{\n    fn build_hasher(_self: Self) -> H{\n        H::default()\n    }\n}\n\nimpl<H> Default for BuildHasherDefault<H>\nwhere \n    H: Hasher + Default\n{\n    fn default() -> Self{\n        BuildHasherDefault{}\n    }    \n}\n\nimpl Hash for Field {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self]);\n    }\n}\n\nimpl Hash for u8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for u32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for u64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for i8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for i32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for i64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for bool {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self as Field]);\n    }\n}\n\nimpl Hash for () {\n    fn hash<H>(_self: Self, _state: &mut H) where H: Hasher {}\n}\n\nimpl Hash for U128 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, &[self.lo as Field, self.hi as Field]);\n    }\n}\n\nimpl<T, N> Hash for [T; N] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<T> Hash for [T] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.len().hash(state);\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<A, B> Hash for (A, B) where A: Hash, B: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n    }\n}\n\nimpl<A, B, C> Hash for (A, B, C) where A: Hash, B: Hash, C: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n    }\n}\n\nimpl<A, B, C, D> Hash for (A, B, C, D) where A: Hash, B: Hash, C: Hash, D: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n    }\n}\n\nimpl<A, B, C, D, E> Hash for (A, B, C, D, E) where A: Hash, B: Hash, C: Hash, D: Hash, E: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n        self.4.hash(state);\n    }\n}\n","path":"std/hash.nr"},"33":{"source":"// Regular merkle tree means a append-only merkle tree (Explain why this is the only way to have privacy and alternatives if you don't want it)\n// Currently we assume that it is a binary tree, so depth k implies a width of 2^k\n// XXX: In the future we can add an arity parameter\n// Returns the merkle root of the tree from the provided leaf, its hashpath, using a pedersen hash function.\npub fn compute_merkle_root<N>(leaf: Field, index: Field, hash_path: [Field; N]) -> Field {\n    let n = hash_path.len();\n    let index_bits = index.to_le_bits(n as u32);\n    let mut current = leaf;\n    for i in 0..n {\n        let path_bit = index_bits[i] as bool;\n        let (hash_left, hash_right) = if path_bit {\n            (hash_path[i], current)\n        } else {\n            (current, hash_path[i])\n        };\n        current = crate::hash::pedersen_hash([hash_left, hash_right]);\n    }\n    current\n}\n","path":"std/merkle.nr"},"35":{"source":"use crate::hash::{Hash, Hasher};\nuse crate::cmp::{Ordering, Ord, Eq};\nuse crate::default::Default;\n\nstruct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some { self._value } else { default }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// Asserts `self.is_some()` with a provided custom message and returns the contained `Some` value\n    fn expect<N, MessageTypes>(self, message: fmtstr<N, MessageTypes>) -> T {\n        assert(self.is_some(), message);\n        self._value\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some { self } else { other }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some { self } else { default() }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some { Option::none() } else { self }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n\nimpl<T> Default for Option<T> {\n    fn default() -> Self {\n        Option::none()\n    }\n}\n\nimpl<T> Eq for Option<T> where T: Eq {\n    fn eq(self, other: Self) -> bool {\n        if self._is_some == other._is_some {\n            if self._is_some {\n                self._value == other._value\n            } else {\n                true\n            }\n        } else {\n            false\n        }\n    }\n}\n\nimpl<T> Hash for Option<T> where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self._is_some.hash(state);\n        if self._is_some {\n            self._value.hash(state);\n        }\n    }\n}\n\n// For this impl we're declaring Option::none < Option::some\nimpl<T> Ord for Option<T> where T: Ord {\n    fn cmp(self, other: Self) -> Ordering {\n        if self._is_some {\n            if other._is_some {\n                self._value.cmp(other._value)\n            } else {\n                Ordering::greater()\n            }\n        } else {\n            if other._is_some {\n                Ordering::less()\n            } else {\n                Ordering::equal()\n            }\n        }\n    }\n}\n","path":"std/option.nr"},"44":{"source":"use crate::ops::{Add, Sub, Mul, Div, Rem, BitOr, BitAnd, BitXor, Shl, Shr};\nuse crate::cmp::{Eq, Ord, Ordering};\n\nglobal pow64 : Field = 18446744073709551616; //2^64;\n\nstruct U128 {\n    lo: Field,\n    hi: Field,\n}\n\nimpl U128 {\n\n    pub fn from_u64s_le(lo: u64, hi: u64) -> U128 {\n        // in order to handle multiplication, we need to represent the product of two u64 without overflow\n        assert(crate::field::modulus_num_bits() as u32 > 128);\n        U128 { lo: lo as Field, hi: hi as Field }\n    }\n\n    pub fn from_u64s_be(hi: u64, lo: u64) -> U128 {\n        U128::from_u64s_le(lo, hi)\n    }\n\n    pub fn from_le_bytes(bytes: [u8; 16]) -> U128 {\n        let mut lo = 0;\n        let mut base = 1;\n        for i in 0..8 {\n            lo += (bytes[i] as Field)*base;\n            base *= 256;\n        }\n        let mut hi = 0;\n        base = 1;\n        for i in 8..16 {\n            hi += (bytes[i] as Field)*base;\n            base *= 256;\n        }\n        U128 { lo, hi }\n    }\n\n    pub fn to_be_bytes(self: Self) -> [u8; 16] {\n        let lo = self.lo.to_be_bytes(8);\n        let hi = self.hi.to_be_bytes(8);\n        let mut bytes = [0; 16];\n        for i in 0..8 {\n            bytes[i] = hi[i];\n            bytes[i+8] = lo[i];\n        }\n        bytes\n    }\n\n    pub fn to_le_bytes(self: Self) -> [u8; 16] {\n        let lo = self.lo.to_le_bytes(8);\n        let hi = self.hi.to_le_bytes(8);\n        let mut bytes = [0; 16];\n        for i in 0..8 {\n            bytes[i] = lo[i];\n            bytes[i+8] = hi[i];\n        }\n        bytes\n    }\n\n    pub fn from_hex<N>(hex: str<N>) -> U128 {\n        let N = N as u32;\n        let bytes = hex.as_bytes();\n        // string must starts with \"0x\"\n        assert((bytes[0] == 48) & (bytes[1] == 120), \"Invalid hexadecimal string\");\n        assert(N < 35, \"Input does not fit into a U128\");\n\n        let mut lo = 0;\n        let mut hi = 0;\n        let mut base = 1;\n        if N <= 18 {\n            for i in 0..N - 2 {\n                lo += U128::decode_ascii(bytes[N-i-1])*base;\n                base = base*16;\n            }\n        } else {\n            for i in 0..16 {\n                lo += U128::decode_ascii(bytes[N-i-1])*base;\n                base = base*16;\n            }\n            base = 1;\n            for i in 17..N - 1 {\n                hi += U128::decode_ascii(bytes[N-i])*base;\n                base = base*16;\n            }\n        }\n        U128 { lo: lo as Field, hi: hi as Field }\n    }\n\n    fn decode_ascii(ascii: u8) -> Field {\n        if ascii < 58 {\n            ascii - 48\n        } else if ascii < 71 {\n            ascii - 55\n        } else {\n            ascii - 87\n        } as Field\n    }\n\n    unconstrained fn unconstrained_div(self: Self, b: U128) -> (U128, U128) {\n        if self < b {\n            (U128::from_u64s_le(0, 0), self)\n        } else {\n            //TODO check if this can overflow?\n            let (q,r) = self.unconstrained_div(b * U128::from_u64s_le(2, 0));\n            let q_mul_2 = q * U128::from_u64s_le(2, 0);\n            if r < b {\n                (q_mul_2, r)\n            } else {\n                (q_mul_2 + U128::from_u64s_le(1, 0), r - b)\n            }\n        }\n    }\n\n    pub fn from_integer<T>(i: T) -> U128 {\n        let f = crate::as_field(i);\n        // Reject values which would overflow a u128\n        f.assert_max_bit_size(128);\n        let lo = f as u64 as Field;\n        let hi = (f - lo) / pow64;\n        U128 { lo, hi }\n    }\n\n    pub fn to_integer<T>(self) -> T {\n        crate::from_field(self.lo + self.hi * pow64)\n    }\n\n    fn wrapping_mul(self: Self, b: U128) -> U128 {\n        let low = self.lo * b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = if crate::field::modulus_num_bits() as u32 > 196 {\n            (self.lo + self.hi) * (b.lo + b.hi) - low + carry\n        } else {\n            self.lo * b.hi + self.hi * b.lo + carry\n        };\n        let hi = high as u64 as Field;\n        U128 { lo, hi }\n    }\n}\n\nimpl Add for U128 {\n    fn add(self: Self, b: U128) -> U128 {\n        let low = self.lo + b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;  \n        let high = self.hi + b.hi + carry;\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to add with overflow\");\n        U128 {\n            lo,\n            hi,\n        }\n    }\n}\n\nimpl Sub for U128 {\n    fn sub(self: Self, b: U128) -> U128 {\n        let low = pow64 + self.lo - b.lo;\n        let lo = low as u64 as Field;\n        let borrow = (low == lo) as Field;\n        let high = self.hi - b.hi - borrow;\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to subtract with underflow\");\n        U128 {\n            lo,\n            hi,\n        }\n    }\n}\n\nimpl Mul for U128 {\n    fn mul(self: Self, b: U128) -> U128 {\n        assert(self.hi*b.hi == 0, \"attempt to multiply with overflow\");\n        let low = self.lo*b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = if crate::field::modulus_num_bits() as u32 > 196 {\n            (self.lo+self.hi)*(b.lo+b.hi) - low + carry\n        } else {\n            self.lo*b.hi + self.hi*b.lo + carry\n        };\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to multiply with overflow\");\n        U128 {\n            lo,\n            hi,\n        }\n    }\n}\n\nimpl Div for U128 {\n    fn div(self: Self, b: U128) -> U128 {\n        let (q,r) = self.unconstrained_div(b);\n        let a = b * q + r;\n        assert_eq(self, a);\n        assert(r < b);\n        q\n    }\n}\n\nimpl Rem for U128 {\n    fn rem(self: Self, b: U128) -> U128 {\n        let (q,r) = self.unconstrained_div(b);\n        let a = b * q + r;\n        assert_eq(self, a);\n        assert(r < b);\n        r\n    }\n}\n\nimpl Eq for U128 {\n    fn eq(self: Self, b: U128) -> bool {\n        (self.lo == b.lo) & (self.hi == b.hi)\n    }\n}\n\nimpl Ord for U128 {\n    fn cmp(self, other: Self) -> Ordering {\n        let hi_ordering = (self.hi as u64).cmp((other.hi as u64));\n        let lo_ordering = (self.lo as u64).cmp((other.lo as u64));\n        \n        if hi_ordering == Ordering::equal() {\n            lo_ordering\n        } else {\n            hi_ordering\n        }\n    }\n}\n\nimpl BitOr for U128 { \n    fn bitor(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) | (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) | (other.hi as u64))as Field\n        }\n    }\n}\n\nimpl BitAnd for U128 {\n    fn bitand(self, other: U128) -> U128 { \n        U128 {\n            lo: ((self.lo as u64) & (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) & (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl BitXor for U128 {\n    fn bitxor(self, other: U128) -> U128 { \n        U128 {\n            lo: ((self.lo as u64) ^ (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) ^ (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl Shl for U128 { \n    fn shl(self, other: U128) -> U128 { \n        assert(other < U128::from_u64s_le(128,0), \"attempt to shift left with overflow\");\n        let exp_bits = other.lo.to_be_bits(7);\n\n        let mut r: Field = 2;\n        let mut y: Field = 1;\n        for i in 1..8 {\n            y = (exp_bits[7-i] as Field) * (r * y) + (1 - exp_bits[7-i] as Field) * y;\n            r *= r;\n        }\n        self.wrapping_mul(U128::from_integer(y))\n    } \n}\n\nimpl Shr for U128 { \n    fn shr(self, other: U128) -> U128 { \n        assert(other < U128::from_u64s_le(128,0), \"attempt to shift right with overflow\");\n        let exp_bits = other.lo.to_be_bits(7);\n\n        let mut r: Field = 2;\n        let mut y: Field = 1;\n        for i in 1..8 {\n            y = (exp_bits[7-i] as Field) * (r * y) + (1 - exp_bits[7-i] as Field) * y;\n            r *= r;\n        }\n        self / U128::from_integer(y)\n    } \n}\n","path":"std/uint128.nr"},"47":{"source":"use dep::aztec::prelude::{FunctionSelector, AztecAddress, EthAddress, PrivateContext};\nuse dep::aztec::context::{PublicContext, gas::GasOpts};\n\nstruct Token {\n  address: AztecAddress,\n}\n\nimpl Token {\n    pub fn at(address: AztecAddress) -> Self {\n        Self { address }\n    }\n\n    pub fn transfer_public(\n        self: Self,\n        context: &mut PublicContext,\n        from: AztecAddress,\n        to: AztecAddress,\n        amount: Field,\n        nonce: Field\n    ) {\n        context.call_public_function(\n            self.address,\n            FunctionSelector::from_signature(\"transfer_public((Field),(Field),Field,Field)\"),\n            [from.to_field(), to.to_field(), amount, nonce],\n            GasOpts::default()\n        ).assert_empty();\n    }\n\n    pub fn shield(\n        self: Self,\n        context: &mut PublicContext,\n        from: AztecAddress,\n        amount: Field,\n        secret_hash: Field,\n        nonce: Field\n    ) {\n        context.call_public_function(\n            self.address,\n            FunctionSelector::from_signature(\"shield((Field),Field,Field,Field)\"),\n            [from.to_field(), amount, secret_hash, nonce],\n            GasOpts::default()\n        ).assert_empty();\n    }\n    \n    pub fn unshield(\n        self: Self,\n        context: &mut PrivateContext,\n        from: AztecAddress,\n        to: AztecAddress,\n        amount: Field,\n        nonce: Field\n    ) {\n        let _ = context.call_private_function(\n            self.address,\n            FunctionSelector::from_signature(\"unshield((Field),(Field),Field,Field)\"),\n            [from.to_field(), to.to_field(), amount, nonce]\n        );\n    }\n\n    pub fn transfer(\n        self: Self,\n        context: &mut PrivateContext,\n        from: AztecAddress,\n        to: AztecAddress,\n        amount: Field,\n        nonce: Field\n    ) {\n        let _ret = context.call_private_function(\n            self.address,\n            FunctionSelector::from_signature(\"transfer((Field),(Field),Field,Field)\"),\n            [from.to_field(), to.to_field(), amount, nonce]\n        );\n    }\n\n    // pub fn balance_of_public(\n    //     self: Self,\n    //     context: &mut PublicContext,\n    //     owner: AztecAddress\n    // ) -> Field {\n    //     let _ret = context.call_public_function(\n    //         self.address,\n    //         FunctionSelector::from_signature(\"balance_of_public((Field))\"),\n    //         [owner.to_field()],\n    //          GasOpts::default()\n    //     );\n    //     _ret[0]\n    // }\n}\n\nstruct Uniswap {\n  address: AztecAddress,\n}\n\nimpl Uniswap {\n    pub fn at(address: AztecAddress) -> Self {\n        Self { address }\n    }\n\n    pub fn swap_public(\n        self: Self,\n        context: &mut PublicContext,\n        sender: AztecAddress,\n        input_asset_bridge: AztecAddress,\n        input_amount: Field,\n        output_asset_bridge: AztecAddress,\n        nonce_for_transfer_approval: Field,\n        uniswap_fee_tier: Field,\n        minimum_output_amount: Field,\n        recipient: AztecAddress,\n        secret_hash_for_L1_to_l2_message: Field,\n        caller_on_L1: EthAddress,\n        nonce_for_swap_approval: Field\n    ) {\n        let _ = context.call_public_function(\n            self.address,\n            FunctionSelector::from_signature(\"swap_public((Field),(Field),Field,(Field),Field,Field,Field,(Field),Field,(Field),Field)\"),\n            [\n                sender.to_field(), \n                input_asset_bridge.to_field(), \n                input_amount, \n                output_asset_bridge.to_field(), \n                nonce_for_transfer_approval,\n                uniswap_fee_tier,\n                minimum_output_amount,\n                recipient.to_field(),\n                secret_hash_for_L1_to_l2_message,\n                caller_on_L1.to_field(),\n                nonce_for_swap_approval\n            ],\n             GasOpts::default()\n        );\n    }\n\n    // pub fn swap_public(\n    //     self: Self,\n    //     context: &mut PrivateContext,\n    //     sender: AztecAddress,\n    //     input_asset_bridge: AztecAddress,\n    //     input_amount: Field,\n    //     output_asset_bridge: AztecAddress,\n    //     nonce_for_transfer_approval: Field,\n    //     uniswap_fee_tier: Field,\n    //     minimum_output_amount: Field,\n    //     recipient: AztecAddress,\n    //     secret_hash_for_L1_to_l2_message: Field,\n    //     caller_on_L1: EthAddress,\n    //     nonce_for_swap_approval: Field\n    // ) {\n    //     let _ = context.call_public_function(\n    //         self.address,\n    //         FunctionSelector::from_signature(\"swap_public((Field),(Field),Field,(Field),Field,Field,Field,(Field),Field,(Field),Field)\"),\n    //         [\n    //             sender.to_field(), \n    //             input_asset_bridge.to_field(), \n    //             input_amount, \n    //             output_asset_bridge.to_field(), \n    //             nonce_for_transfer_approval,\n    //             uniswap_fee_tier,\n    //             minimum_output_amount,\n    //             recipient.to_field(),\n    //             secret_hash_for_L1_to_l2_message,\n    //             caller_on_L1.to_field(),\n    //             nonce_for_swap_approval\n    //         ],\n    //          GasOpts::default()\n    //     );\n    // }\n\n    // pub fn claim_public(\n\n    // ) {\n    //     let _ = context.call_public_function(\n    //         self.address,\n    //         FunctionSelector::from_signature(\"claim_public((Field),(Field),Field,(Field),Field,Field,Field,(Field),Field,(Field),Field)\"),\n    //         [\n    //             sender.to_field(), \n    //             input_asset_bridge.to_field(), \n    //             input_amount, \n    //             output_asset_bridge.to_field(), \n    //             nonce_for_transfer_approval,\n    //             uniswap_fee_tier,\n    //             minimum_output_amount,\n    //             recipient.to_field(),\n    //             secret_hash_for_L1_to_l2_message,\n    //             caller_on_L1.to_field(),\n    //             nonce_for_swap_approval\n    //         ],\n    //          GasOpts::default()\n    //     );  \n    // }\n}\n// docs:end:interfaces\n","path":"/Users/jack-sw/Codes/abstract/dex-build/token-bridge-uniswap/packages/aztec-contracts/batcher_contract/src/types/interfaces.nr"},"48":{"source":"use dep::aztec::protocol_types::{address::AztecAddress, traits::{Serialize, Deserialize}};\nuse crate::types::affine_point::AffinePoint;\n\nglobal RELAYER_SERIALIZED_LEN: Field = 8; // 7\n\nstruct BatchRelayer {\n    relayer: AztecAddress, \n    bonding_token: AztecAddress, \n    bonding_amount: Field, // say 50-100k dai\n    he_pub_key: AffinePoint,\n    sk_hash: Field,\n    last_timestamp: Field,\n    interval: Field,\n}\n\nimpl BatchRelayer {\n    fn new(\n        relayer: AztecAddress, \n        bonding_token: AztecAddress,\n        bonding_amount: Field,\n        he_pub_key: AffinePoint,\n        sk_hash: Field, \n        last_timestamp: Field,\n        interval: Field,\n    ) -> Self {\n        BatchRelayer {\n            relayer,\n            bonding_token,\n            bonding_amount,\n            he_pub_key,\n            sk_hash,\n            last_timestamp,\n            interval\n        }\n    }\n}\n\nimpl Deserialize<RELAYER_SERIALIZED_LEN> for BatchRelayer {\n    fn deserialize(fields: [Field; RELAYER_SERIALIZED_LEN]) -> Self {\n        let mut affine_points: [Field; 2] = [0;2];\n        affine_points[0] = fields[3];\n        affine_points[1] = fields[4];\n\n        BatchRelayer { \n            relayer: AztecAddress::from_field(fields[0]),\n            bonding_token: AztecAddress::from_field(fields[1]),\n            bonding_amount: fields[2],\n            he_pub_key:  AffinePoint::deserialize(affine_points),\n            sk_hash: fields[5],\n            last_timestamp: fields[6],\n            interval: fields[7],\n         }\n    }\n}\n\nimpl Serialize<RELAYER_SERIALIZED_LEN> for BatchRelayer {\n    fn serialize(self) -> [Field; RELAYER_SERIALIZED_LEN] {\n        let pubkey_affine_points = self.he_pub_key.serialize();\n\n        [\n            self.relayer.to_field(), \n            self.bonding_token.to_field(),\n            self.bonding_amount,\n            pubkey_affine_points[0],\n            pubkey_affine_points[1],\n            self.sk_hash,\n            self.last_timestamp,\n            self.interval,\n        ]\n    }\n}\n","path":"/Users/jack-sw/Codes/abstract/dex-build/token-bridge-uniswap/packages/aztec-contracts/batcher_contract/src/types/relayer.nr"},"49":{"source":"use dep::aztec::protocol_types::traits::{Serialize, Deserialize};\nuse dep::std::ec::tecurve::affine::Point;\nuse dep::noir_elgamal;\n\n// (x,y)\nglobal AFFINE_POINT_SERIALIZED_LEN = 2;\n\n/// @notice A struct composing over the Point struct\n/// @member point<Point> An element representing a point on the Baby Jubjub curve.\nstruct AffinePoint {\n    point: Point\n}\n\nimpl AffinePoint {\n    /// @notice Creates a new AffinePoint starting from a Point\n    /// @param point The point to be wrapped and extended\n    pub fn new(point: Point) -> Self {\n        Self {\n            point\n        }\n    }\n\n    /// @notice Adds two AffinePoints together (in the Baby Jubjub curve)\n    /// @param other The other AffinePoint to be added\n    fn add(self, other: Self) -> Self {\n        let bjj_affine = noir_elgamal::get_affine_curve();\n\n        Self {\n            point: bjj_affine.add(self.point, other.point)\n        }\n    }\n\n    /// @notice Checks whether two AffinePoints are equal (in the Baby Jubjub curve)\n    /// @param other The other AffinePoint to be compared\n    fn eq(self, other: Self) -> bool {\n        self.point.eq(other.point)\n    }\n}\n\n/// @notice Deserializes an array of Field elements into an AffinePoint\n/// @param serialized The array of Field elements to be deserialized\nimpl Deserialize<AFFINE_POINT_SERIALIZED_LEN> for AffinePoint {\n    fn deserialize(fields: [Field; AFFINE_POINT_SERIALIZED_LEN]) -> Self {\n        Self {\n            point: Point {\n                x: fields[0],\n                y: fields[1]\n            }\n        }\n    }\n}\n\n\n/// @notice Serializes an AffinePoint into an array of Field elements\n/// @param value The AffinePoint to be serialized\nimpl Serialize<AFFINE_POINT_SERIALIZED_LEN> for AffinePoint {\n    fn serialize(self) -> [Field; AFFINE_POINT_SERIALIZED_LEN] {\n         [self.point.x, self.point.y]\n    }\n}\n","path":"/Users/jack-sw/Codes/abstract/dex-build/token-bridge-uniswap/packages/aztec-contracts/batcher_contract/src/types/affine_point.nr"},"50":{"source":"use dep::aztec::protocol_types::{address::AztecAddress, traits::{Serialize, Deserialize}};\nuse crate::types::elgamal_affine_points::ElgamalAffinePoints;\n\nglobal ROUND_SERIALIZED_LEN: Field = 8;\n\nstruct Round {\n    token_in_amount: Field,\n    token_out_amount_cancelled: Field,\n    token_out_amount: Field,\n    // encrypted_token_out_amount: [Field; 2], // [c1, c2]\n    encrypted_token_out_amount: ElgamalAffinePoints,\n    executed: bool,\n    // minimum batch count\n}\n\nimpl Round {\n    fn get_encrypted_amount(self) -> [Field;4] {\n        let elgamal_affine_points = self.encrypted_token_out_amount.serialize();\n        [\n            elgamal_affine_points[0],\n            elgamal_affine_points[1],\n            elgamal_affine_points[2],\n            elgamal_affine_points[3]\n        ]\n    }\n}\n\n\nimpl Deserialize<ROUND_SERIALIZED_LEN> for Round {\n    fn deserialize(fields: [Field; ROUND_SERIALIZED_LEN]) -> Self {\n       let mut elgamal_affine_points: [Field;4] = [0;4];\n        elgamal_affine_points[0] = fields[3];\n        elgamal_affine_points[1] = fields[4];\n        elgamal_affine_points[2] = fields[5];\n        elgamal_affine_points[3] = fields[6];\n\n        Round { \n            token_in_amount: fields[0],\n            token_out_amount_cancelled: fields[1],\n            token_out_amount: fields[2],\n            encrypted_token_out_amount: ElgamalAffinePoints::deserialize(elgamal_affine_points),\n            executed: fields[5] as bool\n         }\n    }\n}\n\nimpl Serialize<ROUND_SERIALIZED_LEN> for Round {\n    fn serialize(self) -> [Field; ROUND_SERIALIZED_LEN] {\n        let elgamal_affine_points = self.encrypted_token_out_amount.serialize();\n\n        [\n            self.token_in_amount,\n            self.token_out_amount_cancelled,\n            self.token_out_amount,\n            elgamal_affine_points[0],\n            elgamal_affine_points[1],\n            elgamal_affine_points[2],\n            elgamal_affine_points[3],\n            self.executed as Field,\n        ]\n    }\n}\n\n","path":"/Users/jack-sw/Codes/abstract/dex-build/token-bridge-uniswap/packages/aztec-contracts/batcher_contract/src/types/round.nr"},"51":{"source":"use dep::aztec::protocol_types::traits::{Serialize, Deserialize};\nuse dep::std::ec::tecurve::affine::Point;\nuse crate::types::affine_point::AffinePoint;\n\n// ( (x,y), (x,y) )\nglobal ELGAMAL_AFFINE_POINTS_SERIALIZED_LEN = 4;\n\n/// @notice A struct representing the resulting ElGamal-encrypted points on the Baby Jubjub curve after performing encryption\n///         on a value\n/// @member C1 The point yielded by multiplying the base point of the Baby Jubjub curve by a provided randomness.\n/// @member C2 The point yielded by adding the resulting plain_embedded (plaintext * base point) to the shared_secret (randomness * public key)\nstruct ElgamalAffinePoints {\n    C1: AffinePoint,\n    C2: AffinePoint\n}\n\nimpl ElgamalAffinePoints {\n    /// @notice Creates a new ElgamalAffinePoints starting from the given C1 and C2 points.\n    /// @param point_C1 The C1 point to use\n    /// @param point_C2 The C2 point to use\n    pub fn new(point_C1: AffinePoint, point_C2: AffinePoint) -> Self {\n        Self {\n            C1: point_C1,\n            C2: point_C2\n        }\n    }\n\n    /// @notice Adds two ElgamalAffinePoints together\n    /// @param second The second ElgamalAffinePoints to add\n    fn add(self, second: ElgamalAffinePoints) -> Self {\n        Self {\n            C1: self.C1.add(second.C1),\n            C2: self.C2.add(second.C2)\n        }\n    }\n\n    // TODO: implement as trait when they are supported\n    /// @notice Checks whether two ElgamalAffinePoints are equal (in the Baby Jubjub curve)\n    /// @param second The second ElgamalAffinePoints to check\n    fn eq(self, second: ElgamalAffinePoints) -> bool {\n        self.C1.eq(second.C1) * self.C2.eq(second.C2)\n    }\n}\n\n/// @notice Deserializes an array of Field elements into an AffinePoint\n/// @param serialized The array of Field elements to be deserialized\nimpl Deserialize<ELGAMAL_AFFINE_POINTS_SERIALIZED_LEN> for ElgamalAffinePoints {\n    fn deserialize(fields: [Field; ELGAMAL_AFFINE_POINTS_SERIALIZED_LEN]) -> Self {\n        Self {\n            C1: AffinePoint::new(\n                Point{\n                    x: fields[0],\n                    y: fields[1]\n                }\n            ),\n            C2: AffinePoint::new(\n                Point{\n                    x: fields[2],\n                    y: fields[3]\n                }\n            )\n        }\n    }\n}\n\n\n/// @notice Serializes an AffinePoint into an array of Field elements\n/// @param value The AffinePoint to be serialized\nimpl Serialize<ELGAMAL_AFFINE_POINTS_SERIALIZED_LEN> for ElgamalAffinePoints {\n    fn serialize(self) -> [Field; ELGAMAL_AFFINE_POINTS_SERIALIZED_LEN] {\n         [self.C1.point.x, self.C1.point.y, self.C2.point.x, self.C2.point.y]\n    }\n}\n","path":"/Users/jack-sw/Codes/abstract/dex-build/token-bridge-uniswap/packages/aztec-contracts/batcher_contract/src/types/elgamal_affine_points.nr"},"54":{"source":"use dep::aztec::prelude::{AztecAddress, NoteInterface, NoteHeader, PrivateContext, emit_encrypted_log};\nuse dep::aztec::{\n    note::{utils::compute_note_hash_for_consumption},\n    oracle::{nullifier_key::get_nullifier_secret_key, get_public_key::get_public_key},\n    hash::pedersen_hash, protocol_types::traits::Empty\n};\n\nglobal DEPOSIT_NOTE_LEN: Field = 3;\n\n#[aztec(note)]\nstruct DepositNote {\n    round: Field,\n    amount_out: Field,\n    owner: AztecAddress,\n}\n\nimpl DepositNote {\n    pub fn new(\n        round: Field,\n        amount_out: Field,\n        owner: AztecAddress\n    ) -> Self {\n        DepositNote { \n            round,\n            amount_out, \n            owner,\n            header: NoteHeader::empty()\n        }\n    }\n\n    pub fn empty() -> Self {\n        DepositNote::new(\n            0,\n            0,\n            AztecAddress::from_field(0),\n        )\n    }\n}\n\nimpl NoteInterface<DEPOSIT_NOTE_LEN> for DepositNote {\n    fn compute_nullifier(self, context: &mut PrivateContext) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_consumption(self);\n        let secret = context.request_nullifier_secret_key(self.owner);\n        pedersen_hash([\n            note_hash_for_nullify,\n            secret.high,\n            secret.low,\n        ],0)\n    }\n\n    fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_consumption(self);\n        let secret = get_nullifier_secret_key(self.owner);\n        pedersen_hash([\n            note_hash_for_nullify,\n            secret.high,\n            secret.low,\n        ],0)\n    }\n\n    // Broadcasts the note as an encrypted log on L1.\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            Self::get_note_type_id(),\n            encryption_pub_key,\n            self.serialize_content(),\n        );\n    }\n}\n","path":"/Users/jack-sw/Codes/abstract/dex-build/token-bridge-uniswap/packages/aztec-contracts/batcher_contract/src/deposit_note.nr"},"55":{"source":"mod deposit_note;\nmod types;\n\n// aztec-cli codegen ./target/ -o ../../test/artifacts --ts\n\ncontract BatcherVault {\n    use dep::aztec::prelude::{\n        AztecAddress, EthAddress, FunctionSelector, NoteHeader, NoteGetterOptions, NoteViewerOptions,\n        Map, PublicMutable, PublicImmutable, PrivateMutable, SharedImmutable\n    };\n    use dep::aztec::{note::note_getter_options::Comparator, \n        context::{Context, PrivateContext, PublicContext, gas::GasOpts}\n    };\n\n    use dep::noir_elgamal;\n    use dep::std::ec::tecurve::affine::Point;\n\n    // note\n    use crate::deposit_note::{DepositNote, DEPOSIT_NOTE_LEN};\n\n    // types\n    use crate::types::{\n        interfaces::{Token, Uniswap},\n        relayer::{BatchRelayer, RELAYER_SERIALIZED_LEN},\n        round::{Round, ROUND_SERIALIZED_LEN},\n        affine_point::{AffinePoint, AFFINE_POINT_SERIALIZED_LEN},\n        elgamal_affine_points::{ElgamalAffinePoints, ELGAMAL_AFFINE_POINTS_SERIALIZED_LEN}\n    };\n\n    #[aztec(storage)]\n    struct Storage {\n        admin: PublicImmutable<AztecAddress>, // admin\n        target: SharedImmutable<AztecAddress>, // amm or uniswap connect\n        token_out: SharedImmutable<AztecAddress>, // token sold e.g. dai\n        token_in: SharedImmutable<AztecAddress>, // token purchased e.g. eth\n        current_round: PublicMutable<Field>,\n        batch_relayer: PublicMutable<BatchRelayer>,\n        rounds: Map<Field, PublicMutable<Round>>,\n        deposit_notes: Map<AztecAddress, PrivateMutable<DepositNote>>, \n        \n    }\n\n    impl Storage {\n      fn init(context: Context) -> Self {\n        Storage {\n            admin: PublicImmutable::new(context, 1),\n            target: SharedImmutable::new(context, 2),\n            token_out: SharedImmutable::new(context, 3),\n            token_in: SharedImmutable::new(context, 4),\n            current_round: PublicMutable::new(context, 5),\n            batch_relayer: PublicMutable::new(context, 6),\n            rounds: Map::new(context, 7, |context, slot| {\n                    PublicMutable::new(context, slot)\n                },\n            ),\n            deposit_notes: Map::new(context, 8,|context, slot| {\n                    PrivateMutable::new(context, slot)\n               },\n            ),\n        }\n      }\n    }\n\n    #[aztec(private)]\n    #[aztec(initializer)]\n    fn constructor(\n        admin: AztecAddress, \n        target:AztecAddress, \n        token_in:AztecAddress, \n        token_out:AztecAddress, \n        // relayer: AztecAddress,\n        // bonding_token: AztecAddress, \n        // bonding_amount: Field,\n        // he_pub_key: [Field;2],\n        // sk_hash: Field,\n        // interval: Field,\n        // he_secret_key: Field,\n        // rand: Field\n    ) {\n\n        // validate that hash(new_he_secret_key) == sk_hash\n        // let computed_sk_hash = dep::std::hash::pedersen_hash([he_secret_key]);\n        // assert(sk_hash == computed_sk_hash, \"invalid sk_hash\");\n\n        // TODO: Check he_secret_key corresponds to he_pub_key in bbj\n        // https://github.com/jat9292/babyjubjub-utils/blob/f93b474f35a302543b9f703b00c4e0628b5b88a7/index.js#L87\n\n        context.call_public_function(\n            context.this_address(),\n            // FunctionSelector::from_signature(\"_initialize((Field),(Field),(Field),(Field),(Field),(Field),Field,Field,Field,Field,Field,Field)\"), \n            FunctionSelector::from_signature(\"_initialize((Field),(Field),(Field),(Field))\"), \n            [\n                admin.to_field(),\n                target.to_field(),\n                token_in.to_field(),\n                token_out.to_field(),\n                // relayer.to_field(), \n                // bonding_token.to_field(), \n                // bonding_amount,\n                // he_pub_key[0],\n                // he_pub_key[1],\n                // sk_hash,\n                // interval,\n                // rand\n            ]\n        );\n    }\n\n    #[aztec(public)]\n    #[aztec(internal)]\n    #[aztec(noinitcheck)]\n    fn _initialize(\n        admin: AztecAddress, \n        target:AztecAddress, \n        token_in:AztecAddress, \n        token_out:AztecAddress\n        // relayer: AztecAddress,\n        // bonding_token: AztecAddress, \n        // bonding_amount: Field,\n        // he_pub_key_x: Field,\n        // he_pub_key_y: Field,\n        // sk_hash: Field,\n        //  interval: Field,\n        // rand: Field\n    ) {\n        // should put asserts to validate params\n        storage.admin.initialize(admin);\n        storage.target.initialize(target);\n        storage.token_in.initialize(token_in);\n        storage.token_out.initialize(token_out);\n        storage.current_round.write(1);\n\n        // let he_pub_key_affine = AffinePoint::new(Point::new(he_pub_key_x, he_pub_key_y));\n\n        // assert(noir_elgamal::is_valid_subgroup(he_pub_key_affine.point), \"Invalid public key\");\n\n        // // initialize BatchRelayer\n        // let batch_relayer = BatchRelayer::new(\n        //     relayer,\n        //     bonding_token,\n        //     bonding_amount,\n        //     // he_pub_key\n        //     he_pub_key_affine,\n        //     sk_hash,\n        //     0, // TODO:  context.timestamp(),\n        //     // interval\n        //     1,\n        // );\n        // storage.batch_relayer.write(batch_relayer);\n\n        // intiialize Round with zero values for encrypted_token_out_amount\n        // let (c1, c2) = noir_elgamal::exp_elgamal_encrypt(he_pub_key_affine.point, 0 as u32, rand);\n        // let initial_encrypted_amount = ElgamalAffinePoints::new(\n        //     AffinePoint::new(c1),\n        //     AffinePoint::new(c2)\n        // );\n\n        // let mut round = storage.rounds.at(1).read();\n        // round.encrypted_token_out_amount = initial_encrypted_amount;\n        // storage.rounds.at(1).write(round);\n    }\n\n    // have separate init func for initializing relayer states\n    // due to  (JSON-RPC PROPAGATED) Array size exceeds target length for deployment\n    // should only be called by relayer if admin & relayer are separate \n    #[aztec(private)]\n    fn init_relayer(\n        relayer: AztecAddress,\n        bonding_token: AztecAddress, \n        bonding_amount: Field,\n        he_pub_key: [Field;2],\n        sk_hash: Field,\n        interval: Field,\n        he_secret_key: Field,\n        rand: Field\n    ) {\n        let computed_sk_hash = dep::std::hash::pedersen_hash([he_secret_key]);\n        assert(sk_hash == computed_sk_hash, \"invalid sk_hash\");\n     \n        // TODO: Check he_secret_key corresponds to he_pub_key in bbj\n        // https://github.com/jat9292/babyjubjub-utils/blob/f93b474f35a302543b9f703b00c4e0628b5b88a7/index.js#L87\n\n        context.call_public_function(\n            context.this_address(),\n            FunctionSelector::from_signature(\"_init_relayer((Field),(Field),Field,Field,Field,Field,Field,Field)\"), \n            [\n                relayer.to_field(),\n                bonding_token.to_field(), \n                bonding_amount,\n                he_pub_key[0],\n                he_pub_key[1],\n                sk_hash,\n                interval,\n                rand\n            ]\n        );\n\n    }\n\n    #[aztec(public)]\n    fn _init_relayer(\n        relayer: AztecAddress,\n        bonding_token: AztecAddress, \n        bonding_amount: Field,\n        he_pub_key_x: Field,\n        he_pub_key_y: Field,\n        sk_hash: Field,\n        interval: Field,\n        rand: Field\n    ) {\n        // should validate if caller is admin or can be called only once \n        let point = Point::new(he_pub_key_x, he_pub_key_y);\n        let he_pub_key_affine = AffinePoint::new(point);\n        assert(noir_elgamal::is_valid_subgroup(he_pub_key_affine.point), \"Invalid public key\");\n\n        // initialize BatchRelayer\n        let batch_relayer = BatchRelayer::new(\n            relayer,\n            bonding_token,\n            bonding_amount,\n            he_pub_key_affine,\n            sk_hash,\n            0, // TODO:  context.timestamp(),\n            interval\n        );\n        storage.batch_relayer.write(batch_relayer);\n\n        // intiialize Round with zero values for encrypted_token_out_amount\n        let (c1, c2) = noir_elgamal::exp_elgamal_encrypt(he_pub_key_affine.point, 0 as u32, rand);\n        let initial_encrypted_amount = ElgamalAffinePoints::new(\n            AffinePoint::new(c1),\n            AffinePoint::new(c2)\n        );\n\n        let mut round = storage.rounds.at(1).read();\n        round.encrypted_token_out_amount = initial_encrypted_amount;\n        storage.rounds.at(1).write(round);\n\n        // TODO: maybe perform stake too here\n    }\n\n    /************************************************************************\n     * Admin's Operations\n     ************************************************************************/\n\n     // TODO:\n     // set_relayer(): set a new relayer\n     // set_relayer_params: set new relayer params, e.g. bonding_token, bonding_amount, etc...\n\n\n    /************************************************************************\n     * Users' Operations : Deposit, Withdraw, and Claim\n     ************************************************************************/\n\n    // TODO: some checks if relayer has already made a deposit before users depositing\n    // todo: init round after incrementing round \n    #[aztec(private)]\n    fn deposit_to_batch(\n        current_round: Field,\n        amount_out: Field, \n        relayer_he_pubkey: AffinePoint,\n        rand: Field,\n        nonce: Field\n    ) {\n        // TODO: validate current_round\n        let sender = context.msg_sender();\n        let mut deposit_note = DepositNote::empty();\n\n        deposit_note = DepositNote::new(current_round, amount_out, sender);\n        storage.deposit_notes.at(sender).initialize(\n            &mut deposit_note,\n            true\n        );\n\n        let asset = storage.token_out.read_private();\n        Token::at(asset).transfer(\n            &mut context,\n            sender,\n            context.this_address(),\n            amount_out,\n            nonce\n        );\n\n        // TODO: validate relayer pubkey here\n        let (c1, c2) = noir_elgamal::exp_elgamal_encrypt(\n            relayer_he_pubkey.point, \n            amount_out as u32, \n            rand\n        );\n\n        let serialized_calldata = [\n            c1.x,\n            c1.y,\n            c2.x,\n            c2.y\n        ];\n\n        context.call_public_function(\n            context.this_address(),\n            FunctionSelector::from_signature(\"_add_token_out_amount([Field;2],[Field;2])\"),\n            serialized_calldata\n        );\n    }\n\n    // TODO: this func or another func should let users withdraw in the case of relayer failure\n    // partial removal be a bit tricker but complete cancelling might be quite easy to implement\n    #[aztec(private)]\n    fn cancel_batch_and_claim(\n        current_round: Field, \n        secret_hash:Field\n    ) {\n        \n        let deposit_note = storage.deposit_notes.at(context.msg_sender()).get_note(false);\n\n        // transfer cancelled amount to the sender\n        let asset = storage.token_out.read_private();\n        Token::at(asset).transfer(\n            &mut context, \n            context.this_address(), \n            context.msg_sender(),\n            deposit_note.amount_out,\n            0\n        );\n\n        // report cancelled amount\n        context.call_public_function(\n            context.this_address(),\n            FunctionSelector::from_signature(\"_sub_token_out_amount((Field),Field)\"),\n            [deposit_note.amount_out, current_round]\n        ); \n\n        // make note empty\n        let mut empty_deposit_note = DepositNote::empty();\n        storage.deposit_notes.at(context.msg_sender()).replace(&mut empty_deposit_note, true);\n    }\n\n    // from user\n    #[aztec(private)]\n    fn claim_token_in(round: Field, total_token_in:Field, total_token_out: Field) {\n\n        // get msg_sender's note\n        let mut deposit_note = storage.deposit_notes.at(context.msg_sender()).get_note(false);\n\n        context.call_public_function(\n            context.this_address(),\n            FunctionSelector::from_signature(\"_validate_claim_params(Field[])\"), \n            [deposit_note.round, total_token_in, total_token_out]\n        ); \n\n        // calculate total token_in purchased at a specificed round\n        let token_in_amount = (total_token_in * deposit_note.amount_out / total_token_out);\n\n        // individual users can execute private transfer from this address to them with no permission..?\n        let _callStackItem = context.call_private_function(\n            storage.token_out.read_private(),\n            FunctionSelector::from_signature(\"transfer((Field),(Field),Field,Field)\"),\n            [context.this_address().to_field(), context.msg_sender().to_field(), token_in_amount, 0]\n        );\n\n        // TODO: note should be destroyed\n    }\n\n    /************************************************************************\n     * Relayer's Public Operations\n     ************************************************************************/\n\n    // from relayer or amind controlled by L1 contract with timestamp checkers\n    // minimum_output_amount should be calculated based on target twap\n    #[aztec(private)]\n    fn execute_batch(\n        encrypted_amount: [Field;2],\n        secret_key: Field,\n        token_out_amount_cancelled: Field,\n        tokne_in: AztecAddress,\n        token_out: AztecAddress,\n        nonce_for_transfer_approval: Field,\n        nonce_for_swap_approval: Field\n    ) -> pub Field {\n        // caller should be an authorized relayer \n        // assert(context.msg_sender() == storage.batch_relayer.relayer, \"caller must be relayer\");\n\n        // let amount_out = he_add::decrypt(encrypted_amount[0], encrypted_amount[1], secret_key);\n         let amount_out = 0;\n\n        let amount_out_minus_cancelled = amount_out - token_out_amount_cancelled;\n        amount_out\n        // context.call_public_function(\n        //     context.this_address(),\n        //     FunctionSelector::from_signature(\"validate_execute_batch((Field),Field,Field,Field,Field)\"), \n        //     [\n        //         context.msg_sender().to_field(),\n        //         encrypted_amount[0], \n        //         encrypted_amount[1], \n        //         amount_out_minus_cancelled, \n        //         token_out_amount_cancelled\n        //     ]\n        // );  \n\n        // TODO: unshield / redeem if necessary\n\n        \n        // let target = storage.target.read_public();\n        // Uniswap::at(target).swap_public(\n        //     &mut context,\n        //     context.this_address(),\n        //     input_asset_bridge,\n        //     input_amount.to_field(),\n        //     output_asset_bridge,\n        //     nonce_for_transfer_approval,\n        //     uniswap_fee_tier,\n        //     minimum_output_amount,\n        //     context.this_address(),\n        //     secret_hash_for_L1_to_l2_message,\n        //     caller_on_L1,\n        //     nonce_for_swap_approval\n        // );\n    }\n\n    // TODO: this func can have conditions to be executed \n    // 1: total deposit count: how many deposits are made so far\n    // 2: time: how long did it take since last batch execute\n    #[aztec(public)]\n    #[aztec(internal)]\n    fn validate_execute_batch(\n        sender:AztecAddress, \n        c1:Field, \n        c2:Field, \n        amount_out:Field,\n        amount_out_sub_cancelled:Field\n    ) {\n        let relayer = storage.batch_relayer.read();\n        let current_time = relayer.last_timestamp + relayer.interval;\n        assert(current_time as u64 >= context.timestamp() as u64, \"time hasn't elapsed enough to update round\");\n        assert(sender == relayer.relayer, \"caller must be relayer\");\n\n        let current_round = storage.current_round.read();\n        let mut round = storage.rounds.at(current_round).read();\n        assert(!round.executed, \"already executed\");\n        assert(round.token_out_amount_cancelled == amount_out_sub_cancelled, \"invalid_cancelled_amount_out\");\n\n        // assert(\n        //     (round.encrypted_token_out_amount[0] == c1)\n        //     & (round.encrypted_token_out_amount[1] == c2), \n        //     \"invalid encrypted amount\"\n        // );\n\n        round.token_out_amount = amount_out;\n        round.executed = true;\n        storage.rounds.at(current_round).write(round); \n\n\n    }\n\n    // here anyone can update the acquired eth reward of the latest round after eth purchase\n    // but this should only occur once each round, so...\n    #[aztec(public)]\n    fn finalize_execute(\n        secret_hash_for_redeeming_minted_notes: Field, // secret hash used to redeem minted notes at a later time. This enables anyone to call this function and mint tokens to a user on their behalf\n        amount: Field,\n        secret_for_L1_to_L2_message_consumption: Field \n    ) {\n       // assert caller == relayer\n\n        let current_round = storage.current_round.read();\n        let mut round = storage.rounds.at(current_round).read();\n        assert(round.executed, \"batch tx hasn't been executed\");\n        assert(round.token_in_amount == 0, \"already claimed\");\n\n        // store the new balance \n        round.token_in_amount = amount;\n        storage.rounds.at(current_round).write(round);\n        \n\n        // claim_private ( mint_private() )\n        // redeem_shield()\n\n        let new_round = storage.current_round.read() + 1;\n        storage.current_round.write(new_round); \n    }\n\n    // here probably there is need to implement create public auth wit\n    // so that target contract can receive(transfer) token from this cotnract.\n    #[aztec(public)] \n    fn spend_public_authwit(inner_hash: Field) -> Field {\n        // let message_hash = compute_outer_authwit_hash(\n        //     context.msg_sender(),\n        //     context.chain_id(),\n        //     context.version(),\n        //     inner_hash\n        // );\n        // let value = storage.approved_action.at(message_hash).read();\n        // if (value) {\n        //     context.push_new_nullifier(message_hash, 0);\n        //     IS_VALID_SELECTOR\n        // } else {\n        //     0\n        // }\n        0\n    }\n\n\n    /************************************************************************\n     * Functions for Relayer Dispute\n     ************************************************************************/\n\n    #[aztec(private)]\n    fn dipute_relayer(\n        he_secret_key: Field, \n        new_sk_hash: Field, \n        new_he_pub_key:Field,\n        new_he_secret_key: Field,\n        new_relayer: AztecAddress,\n        secret_hash: Field,\n        nonce:Field\n        ) {\n        let sk_hash = dep::std::hash::pedersen_hash([he_secret_key]);\n\n        context.call_public_function(\n            context.this_address(),\n            FunctionSelector::from_signature(\"check_sk_hash(Field)\"), // or (Field)[]\n            [sk_hash]\n        ); \n\n        // validate that new_sk_hash == hash(new_he_secret_key);\n        let new_computed_sk_hash = dep::std::hash::pedersen_hash([new_he_secret_key]);\n        assert(new_sk_hash == new_computed_sk_hash, \"invalid_new_sk_hash\");\n        \n        // TODO: Check new_he_secret_key corresponds to new_he_pub_key in bbj\n        // https://github.com/jat9292/babyjubjub-utils/blob/f93b474f35a302543b9f703b00c4e0628b5b88a7/index.js#L87\n\n        context.call_public_function(\n            context.this_address(),\n            FunctionSelector::from_signature(\"replace_relayer_and_slash_stake(Field,Field,(Field),Field,Field)\"),\n            [new_sk_hash, new_he_pub_key, new_relayer.to_field(), secret_hash, nonce]\n        ); \n    }\n\n    #[aztec(public)]\n    fn check_sk_hash(sk_hash: Field) {\n        assert(sk_hash == storage.batch_relayer.read().sk_hash, \"invalid sk_hash\");\n    }\n\n    // replace_relayer_and_slash_stake\n    // 1: replace current relayer with a new relayer\n    // 2: slash bond token\n    // 3: make a new stake deposit from a new layer\n    #[aztec(public)]\n    #[aztec(internal)]\n    fn replace_relayer_and_slash_stake(sk_hash: Field, new_he_pub_key: AffinePoint, new_relayer:AztecAddress, secret_hash:Field, nonce:Field) {\n        // replacement from slashed relayer to a new relayer ( disputer )\n        let mut relayer = storage.batch_relayer.read();\n        relayer.relayer = new_relayer;\n        relayer.sk_hash = sk_hash;\n        relayer.he_pub_key = new_he_pub_key;\n        storage.batch_relayer.write(relayer);\n\n        // slash by shielding staked asset to new relayer\n        Token::at(relayer.bonding_token).shield(\n            &mut context, \n            context.this_address(), \n            relayer.bonding_amount,\n            secret_hash, \n            0\n        );\n\n        // new stake deposit from new relayer\n        context.call_public_function(\n            context.this_address(),\n            FunctionSelector::from_signature(\"stake((Field),(Field),Field,Field)\"), \n            [new_relayer.to_field(), relayer.bonding_token.to_field(), relayer.bonding_amount, nonce],\n            GasOpts::default()\n        ).assert_empty();  \n    }\n\n    #[aztec(public)] \n    fn stake(relayer: AztecAddress, token:AztecAddress, amount:Field, nonce:Field) {\n        let batch_relayer = storage.batch_relayer.read();\n        assert(U128::from_field(amount) >= U128::from_field(batch_relayer.bonding_amount), \"insufficient bonding amount\");\n        // TODO: also verify caller == relayer in normal situation..?\n\n        // transfer public\n        Token::at(token).transfer_public(\n            &mut context, \n            relayer,\n            context.this_address(), \n            amount,\n            nonce\n        );\n    }\n\n    /************************************************************************\n     * Public Internal Function\n     ************************************************************************/\n\n    #[aztec(public)] \n    #[aztec(internal)]\n    fn _validate_claim_params(\n        _round: Field, \n        _total_token_in: Field,\n        _total_token_out: Field\n    ) {\n        let round = storage.rounds.at(_round).read();\n        assert(round.token_in_amount == _total_token_in, \"invalid _total_token_in\");\n        assert(round.token_out_amount == _total_token_out, \"invalid _total_token_in\");\n    }\n\n    #[aztec(public)]\n    #[aztec(internal)]\n    fn _add_token_out_amount(C1_serialized: [Field;2], C2_serialized: [Field;2]) {\n        let current_round = storage.current_round.read();\n        let mut round = storage.rounds.at(current_round).read();\n\n        let encrypted_value_to_add = ElgamalAffinePoints::new(\n            AffinePoint::deserialize(C1_serialized),\n            AffinePoint::deserialize(C2_serialized)\n        );\n\n        let current_encrypted_sum = round.encrypted_token_out_amount;\n        let new_encrypted_sum = current_encrypted_sum.add(encrypted_value_to_add);\n\n        round.encrypted_token_out_amount = new_encrypted_sum;\n        storage.rounds.at(current_round).write(round);\n    }\n\n    /// \"decrease\" (increase) `token_out_amount_cancelled` in rounds\n    #[aztec(public)]\n    #[aztec(internal)]\n    fn _sub_token_out_amount(amount: Field, _round: Field) {\n        let mut round = storage.rounds.at(_round).read();\n        round.token_out_amount_cancelled = amount;\n        storage.rounds.at(_round).write(round);\n    }\n\n    #[aztec(public)]\n    #[aztec(internal)]\n    fn _validate_round(round:Field) {\n        let current_round = storage.current_round.read();\n        assert(current_round == round, \"invalid_round\");\n    }\n\n    unconstrained fn get_admin() -> pub Field {\n        storage.admin.read().to_field()\n    }\n\n    unconstrained fn get_target_address() -> pub Field {\n        storage.target.read_public().to_field()\n    }\n\n    unconstrained fn get_token_in() -> pub Field {\n        storage.token_in.read_public().to_field()\n    }\n\n    unconstrained fn get_token_out() -> pub Field {\n        storage.token_out.read_public().to_field()\n    }\n\n    unconstrained fn get_round() -> pub Field {\n        storage.current_round.read()\n    }\n\n    unconstrained fn get_batch_relayer() -> pub BatchRelayer {\n        storage.batch_relayer.read()\n    }\n\n    unconstrained fn get_encrypted_sum(current_round:Field) -> pub [Field;4] {\n        let mut ret:[Field;4] = [0;4];\n        storage.rounds.at(current_round).read().get_encrypted_amount()\n    }\n\n    unconstrained fn get_sk_hash(he_secret_key: Field) -> pub Field {\n        dep::std::hash::pedersen_hash([he_secret_key])\n    }\n\n    #[test]\n    fn test_get_sk_hash() {\n        let sk = 2360067582289791756090345803415031600606727745697750731963540090262281758098;\n        let ret = get_sk_hash(sk);\n        dep::std::println(ret);\n    }\n    \n}\n","path":"/Users/jack-sw/Codes/abstract/dex-build/token-bridge-uniswap/packages/aztec-contracts/batcher_contract/src/main.nr"},"56":{"source":"use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse dep::protocol_types::{address::AztecAddress, grumpkin_point::GrumpkinPoint};\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    note_type_id: Field,\n    encryption_pub_key: GrumpkinPoint,\n    log: [Field; N]\n) {\n    let _ = oracle::logs::emit_encrypted_log(\n        contract_address,\n        storage_slot,\n        note_type_id,\n        encryption_pub_key,\n        log\n    );\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(context: &mut PublicContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(context: &mut PrivateContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/log.nr"},"60":{"source":"use dep::protocol_types::{\n    constants::{\n    MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, GET_NOTE_ORACLE_RETURN_LENGTH, GET_NOTES_ORACLE_RETURN_LENGTH,\n    MAX_NOTES_PER_PAGE, VIEW_NOTE_ORACLE_RETURN_LENGTH\n}\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder, Comparator, NoteStatus, PropertySelector},\n    note_interface::NoteInterface, note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_consumption\n};\nuse crate::oracle;\n\nfn extract_property_value_from_selector<N>(serialized_note: [Field; N], selector: PropertySelector) -> Field {\n    // Selectors use PropertySelectors in order to locate note properties inside the serialized note. \n    // This allows easier packing and custom (de)serialization schemas. A note property is located\n    // inside the serialized note using the index inside the array, a byte offset and a length.\n    let value = serialized_note[selector.index].to_be_bytes(32);\n    let offset = selector.offset;\n    let length = selector.length;\n    let mut value_field = 0 as Field;\n    let mut acc: Field = 1;\n    for i in 0..32 {\n        if i < length {\n            value_field += value[31 + offset - i] as Field * acc;\n            acc = acc * 256;\n        }\n    }\n    value_field\n}\n\nfn check_note_header<Note, N>(context: PrivateContext, storage_slot: Field, note: Note) where Note: NoteInterface<N> {\n    let header = note.get_header();\n    let contract_address = context.this_address();\n    assert(header.contract_address.eq(contract_address));\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(serialized_note: [Field; N], selects: BoundedVec<Option<Select>, N>) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        let value_field = extract_property_value_from_selector(serialized_note, select.property_selector);\n\n        // Values are computed ahead of time because circuits evaluate all branches\n        let is_equal = value_field == select.value.to_field();\n        let is_lt = value_field.lt(select.value.to_field());\n\n        if (select.comparator == Comparator.EQ) {\n            assert(is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.NEQ) {\n            assert(!is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.LT) {\n            assert(is_lt, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.LTE) {\n            assert(is_lt | is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.GT) {\n            assert(!is_lt & !is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.GTE) {\n            assert(!is_lt, \"Mismatch return note field.\");\n        }\n    }\n}\n\nfn check_notes_order<N>(\n    fields_0: [Field; N],\n    fields_1: [Field; N],\n    sorts: BoundedVec<Option<Sort>, N>\n) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let field_0 = extract_property_value_from_selector(fields_0, sort.property_selector);\n        let field_1 = extract_property_value_from_selector(fields_1, sort.property_selector);\n        let eq = field_0 == field_1;\n        let lt = field_0.lt(field_1);\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field\n) -> Note where Note: NoteInterface<N> {\n    let note = get_note_internal(storage_slot);\n\n    check_note_header(*context, storage_slot, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_consumption(note);\n\n    context.push_note_hash_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n    let opt_notes = get_notes_internal(storage_slot, options);\n\n    _get_notes_constrain_get_notes_internal(context, storage_slot, opt_notes, options)\n}\n\npub fn _get_notes_constrain_get_notes_internal<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    opt_notes: [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n    let mut returned_notes = [Option::none(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL];\n\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let fields = note.serialize_content();\n            check_note_header(*context, storage_slot, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_consumption(note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_note_hash_read_request(note_hash_for_read_request);\n\n            // The below code is used to collapse a sparse array into one where the values are guaranteed to be at the front of the array\n            // We write at returned_notes[num_notes] because num_notes is only advanced when we have a value in opt_notes\n            returned_notes[num_notes] = Option::some(note);\n            num_notes += 1;\n        };\n    }\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n\n    assert(num_notes != 0, \"Cannot return zero notes\");\n\n    returned_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(storage_slot: Field) -> Note where Note: NoteInterface<N> {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    oracle::notes::get_notes(\n        storage_slot,\n        0,\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        NoteStatus.ACTIVE,\n        placeholder_note,\n        placeholder_fields,\n        placeholder_note_length\n    )[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n    let (num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    let opt_notes = oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    );\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(\n    storage_slot: Field,\n    options: NoteViewerOptions<Note, N>\n) -> [Option<Note>; MAX_NOTES_PER_PAGE] where Note: NoteInterface<N> {\n    let (num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    )\n}\n\nunconstrained fn flatten_options<Note, N>(\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>\n) -> (u8, [u8; N], [u8; N], [u8; N], [Field; N], [u8; N], [u8; N], [u8; N], [u8; N], [u8; N]) {\n    let mut num_selects = 0;\n    let mut select_by_indexes = [0; N];\n    let mut select_by_offsets = [0; N];\n    let mut select_by_lengths = [0; N];\n    let mut select_values = [0; N];\n    let mut select_comparators = [0; N];\n\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by_indexes[num_selects] = select.unwrap_unchecked().property_selector.index;\n            select_by_offsets[num_selects] = select.unwrap_unchecked().property_selector.offset;\n            select_by_lengths[num_selects] = select.unwrap_unchecked().property_selector.length;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            select_comparators[num_selects] = select.unwrap_unchecked().comparator;\n            num_selects += 1;\n        };\n    }\n\n    let mut sort_by_indexes = [0; N];\n    let mut sort_by_offsets = [0; N];\n    let mut sort_by_lengths = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by_indexes[i] = sort.unwrap_unchecked().property_selector.index;\n            sort_by_offsets[i] = sort.unwrap_unchecked().property_selector.offset;\n            sort_by_lengths[i] = sort.unwrap_unchecked().property_selector.length;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    }\n\n    (\n        num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order\n    )\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/note/note_getter.nr"},"61":{"source":"use crate::context::{PrivateContext, PublicContext};\nuse crate::note::{\n    note_header::NoteHeader, note_interface::NoteInterface,\n    utils::{compute_note_hash_for_insertion, compute_note_hash_for_consumption}\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    broadcast: bool\n) where Note: NoteInterface<N> {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    // TODO: change this to note.set_header(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n    Note::set_header(note, header);\n    // As `is_transient` is true, this will compute the inner note hsah\n    let inner_note_hash = compute_note_hash_for_insertion(*note);\n\n    // TODO: Strong typing required because of https://github.com/noir-lang/noir/issues/4088\n    let serialized_note: [Field; N] = Note::serialize_content(*note);\n    assert(\n        notify_created_note(\n        storage_slot,\n        Note::get_note_type_id(),\n        serialized_note,\n        inner_note_hash\n    )\n        == 0\n    );\n\n    context.push_new_note_hash(inner_note_hash);\n\n    if broadcast {\n        Note::broadcast(*note, context, storage_slot);\n    }\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note\n) where Note: NoteInterface<N> {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    // TODO: change this to note.set_header(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n    Note::set_header(note, header);\n    let inner_note_hash = compute_note_hash_for_insertion(*note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(context: &mut PrivateContext, note: Note) where Note: NoteInterface<N> {\n    let mut nullifier = 0;\n    let mut consumed_note_hash: Field = 0;\n    nullifier = note.compute_nullifier(context);\n\n    // We also need the note hash corresponding to the \"nullifier\"\n    let header = note.get_header();\n    // `consumed_note_hash` is used to inform the kernel which pending note hash\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // note hash) in which case `consumed_note_hash` is not used since the kernel\n    // just siloes and forwards the nullifier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note hash computed in `compute_nullifier`?\n        consumed_note_hash = compute_note_hash_for_consumption(note);\n    }\n    assert(notify_nullified_note(nullifier, consumed_note_hash) == 0);\n\n    context.push_new_nullifier(nullifier, consumed_note_hash)\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/note/lifecycle.nr"},"62":{"source":"use crate::{context::PrivateContext, note::{note_header::NoteHeader, note_interface::NoteInterface}};\n\nuse dep::protocol_types::{\n    address::AztecAddress,\n    constants::{GENERATOR_INDEX__OUTER_NULLIFIER, GENERATOR_INDEX__UNIQUE_NOTE_HASH, GENERATOR_INDEX__SILOED_NOTE_HASH},\n    hash::pedersen_hash, utils::arr_copy_slice\n};\n\nfn compute_siloed_hash(contract_address: AztecAddress, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address.to_field(), inner_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__SILOED_NOTE_HASH)\n}\n\nfn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__UNIQUE_NOTE_HASH)\n}\n\nfn compute_inner_note_hash<Note, N>(note: Note) -> Field where Note: NoteInterface<N> {\n    let header = note.get_header();\n    let note_hash = note.compute_note_content_hash();\n\n    // TODO(#1205) Do we need a generator index here?\n    pedersen_hash([header.storage_slot, note_hash], 0)\n}\n\nfn compute_siloed_note_hash<Note, N>(note_with_header: Note) -> Field where Note: NoteInterface<N> {\n    let header = note_with_header.get_header();\n\n    let inner_note_hash = compute_inner_note_hash(note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\nfn compute_unique_siloed_note_hash<Note, N>(note_with_header: Note) -> Field where Note: NoteInterface<N> {\n    let header = note_with_header.get_header();\n\n    let siloed_note_hash = compute_siloed_note_hash(note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_siloed_nullifier<Note, N>(\n    note_with_header: Note,\n    context: &mut PrivateContext\n) -> Field where Note: NoteInterface<N> {\n    let header = note_with_header.get_header();\n    let inner_nullifier = note_with_header.compute_nullifier(context);\n\n    let input = [header.contract_address.to_field(), inner_nullifier];\n    pedersen_hash(input, GENERATOR_INDEX__OUTER_NULLIFIER)\n}\n\npub fn compute_note_hash_for_insertion<Note, N>(note: Note) -> Field where Note: NoteInterface<N> {\n    compute_inner_note_hash(note)\n}\n\npub fn compute_note_hash_for_consumption<Note, N>(note: Note) -> Field where Note: NoteInterface<N> {\n    let header = note.get_header();\n    // There are 3 cases for reading a note intended for consumption:\n    // 1. The note was inserted in this transaction, and is transient.\n    // 2. The note was inserted in a previous transaction, and was inserted in public\n    // 3. The note was inserted in a previous transaction, and was inserted in private\n\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the note hash\n        // tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note)\n        // IMPORTANT NOTE ON REDUNDANT SILOING BY CONTRACT ADDRESS: The note hash computed above is\n        // \"siloed\" by contract address. When a note hash is computed solely for the purpose of\n        // nullification, it is not strictly necessary to silo the note hash before computing\n        // its nullifier. In other words, it is NOT NECESSARY for protocol security that a nullifier\n        // be computed from a siloed note hash. After all, persistable note hashes and nullifiers are\n        // siloed by the kernel circuit. That being said, the siloed note hash computed above CAN be\n        // used for nullifier computation, and this achieves the (arguably unnecessary) property that\n        // nullifiers are computed from a note hash's fully-computed note hash tree leaf.\n    }\n}\n\npub fn compute_note_hash_and_nullifier<T, N, S>(\n    // docs:start:compute_note_hash_and_nullifier_args\n    deserialize_content: fn([Field; N]) -> T,\n    note_header: NoteHeader,\n    serialized_note: [Field; S] // docs:end:compute_note_hash_and_nullifier_args\n) -> [Field; 4] where T: NoteInterface<N> {\n    let mut note = deserialize_content(arr_copy_slice(serialized_note, [0; N], 0));\n    // TODO: change this to note.set_header(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n    T::set_header((&mut note), note_header);\n\n    let inner_note_hash = compute_inner_note_hash(note);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let inner_nullifier = note.compute_nullifier_without_context();\n    // docs:start:compute_note_hash_and_nullifier_returns\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n    // docs:end:compute_note_hash_and_nullifier_returns\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/note/utils.nr"},"63":{"source":"use dep::protocol_types::address::AztecAddress;\nuse dep::protocol_types::traits::{Empty, Serialize};\n\nstruct NoteHeader {\n    contract_address: AztecAddress,\n    nonce: Field,\n    storage_slot: Field,\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    // Remove this and check the nonce to see whether a note is transient or not.\n    is_transient: bool,\n}\n\nimpl Empty for NoteHeader {\n    fn empty() -> Self {\n        NoteHeader { contract_address: AztecAddress::zero(), nonce: 0, storage_slot: 0, is_transient: false }\n    }\n}\n\nimpl NoteHeader {\n    pub fn new(contract_address: AztecAddress, nonce: Field, storage_slot: Field) -> Self {\n        NoteHeader { contract_address, nonce, storage_slot, is_transient: false }\n    }\n}\n\nimpl Serialize<4> for NoteHeader {\n    fn serialize(self) -> [Field; 4] {\n        [self.contract_address.to_field(), self.nonce, self.storage_slot, self.is_transient as Field]\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/note/note_header.nr"},"73":{"source":"use crate::{\n    context::{\n    inputs::PublicContextInputs, interface::ContextInterface, interface::PublicContextInterface,\n    gas::GasOpts\n},\n    messaging::process_l1_to_l2_message,\n    oracle::{arguments, public_call::call_public_function_internal, returns},\n    hash::{hash_args_array, ArgsHasher}\n};\nuse dep::protocol_types::{\n    abis::{\n    global_variables::GlobalVariables, function_selector::FunctionSelector,\n    private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    public_call_stack_item::PublicCallStackItem,\n    public_circuit_public_inputs::PublicCircuitPublicInputs, read_request::ReadRequest,\n    side_effect::{SideEffect, SideEffectLinkedToNoteHash}\n},\n    hash::silo_nullifier, address::{AztecAddress, EthAddress},\n    constants::{\n    MAX_NEW_NOTE_HASHES_PER_CALL, MAX_NEW_L2_TO_L1_MSGS_PER_CALL, MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL,\n    MAX_NULLIFIER_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL\n},\n    contrakt::{storage_read::StorageRead, storage_update_request::StorageUpdateRequest}, header::Header,\n    messaging::l2_to_l1_message::L2ToL1Message, utils::reader::Reader, traits::{Deserialize, Empty}\n};\n\nstruct PublicContext {\n    inputs: PublicContextInputs,\n    side_effect_counter: u32,\n\n    args_hash : Field,\n    return_hash : Field,\n\n    nullifier_read_requests: BoundedVec<ReadRequest, MAX_NULLIFIER_READ_REQUESTS_PER_CALL>,\n    nullifier_non_existent_read_requests: BoundedVec<ReadRequest, MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL>,\n    contract_storage_update_requests: BoundedVec<StorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_reads: BoundedVec<StorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack_hashes: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_note_hashes: BoundedVec<SideEffect, MAX_NEW_NOTE_HASHES_PER_CALL>,\n    new_nullifiers: BoundedVec<SideEffectLinkedToNoteHash, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<L2ToL1Message, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: Field,\n    unencrypted_logs_preimages_length: Field,\n\n    // Header of a block whose state is used during public execution. Set by sequencer to be a header of a block\n    // previous to the one in which the tx is included.\n    historical_header: Header,\n    prover_address: AztecAddress,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: PublicContextInputs, args_hash: Field) -> PublicContext {\n        PublicContext {\n            inputs,\n            side_effect_counter: inputs.start_side_effect_counter,\n            args_hash,\n            return_hash: 0,\n            nullifier_read_requests: BoundedVec::new(),\n            nullifier_non_existent_read_requests: BoundedVec::new(),\n            contract_storage_update_requests: BoundedVec::new(),\n            contract_storage_reads: BoundedVec::new(),\n            public_call_stack_hashes: BoundedVec::new(),\n            new_note_hashes: BoundedVec::new(),\n            new_nullifiers: BoundedVec::new(),\n            new_l2_to_l1_msgs: BoundedVec::new(),\n            unencrypted_logs_hash: 0,\n            unencrypted_logs_preimages_length: 0,\n            historical_header: inputs.historical_header,\n            prover_address: AztecAddress::zero() // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn call_public_function_no_args<RETURNS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_public_function_no_args<RETURNS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_public_function_no_args<RETURNS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_public_function_with_packed_args<RETURNS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let side_effect_counter = self.side_effect_counter;\n        // TODO get next value from output of `call_public_function_internal`\n        self.side_effect_counter += 1;\n\n        let raw_returns = call_public_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        FunctionReturns::new(raw_returns)\n    }\n\n    pub fn set_return_hash(&mut self, returns_hasher: ArgsHasher) {\n        returns::pack_returns(returns_hasher.fields);\n        self.return_hash = returns_hasher.hash();\n    }\n\n    // Keep private or ask the AVM team if you want to change it.\n    fn push_nullifier_read_request(&mut self, nullifier: Field) {\n        let request = ReadRequest { value: nullifier, counter: self.side_effect_counter };\n        self.nullifier_read_requests.push(request);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    // Keep private or ask the AVM team if you want to change it.\n    fn push_nullifier_non_existent_read_request(&mut self, nullifier: Field) {\n        let request = ReadRequest { value: nullifier, counter: self.side_effect_counter };\n        self.nullifier_non_existent_read_requests.push(request);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn finish(self) -> PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            nullifier_read_requests: self.nullifier_read_requests.storage,\n            nullifier_non_existent_read_requests: self.nullifier_non_existent_read_requests.storage,\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_reads: self.contract_storage_reads.storage,\n            returns_hash: self.return_hash,\n            new_note_hashes: self.new_note_hashes.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack_hashes: self.public_call_stack_hashes.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            start_side_effect_counter: self.inputs.start_side_effect_counter,\n            end_side_effect_counter: self.side_effect_counter,\n            unencrypted_logs_hash,\n            unencrypted_log_preimages_length,\n            historical_header: self.inputs.historical_header,\n            prover_address: self.prover_address,\n            revert_code: 0,\n            gas_left: self.inputs.call_context.gas_left\n        };\n        pub_circuit_pub_inputs\n    }\n}\n\nimpl ContextInterface for PublicContext {\n    fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn this_portal_address(self) -> EthAddress {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    fn get_args_hash(self) -> Field {\n        self.args_hash\n    }\n\n    fn push_new_note_hash(&mut self, note_hash: Field) {\n        let side_effect = SideEffect { value: note_hash, counter: self.side_effect_counter };\n        self.new_note_hashes.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        let side_effect = SideEffectLinkedToNoteHash {\n            value: nullifier,\n            note_hash: 0, // cannot nullify pending notes in public context\n            counter: self.side_effect_counter\n        };\n        self.new_nullifiers.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n}\n\nimpl PublicContextInterface for PublicContext {\n    fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    fn timestamp(self) -> u64 {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    fn coinbase(self) -> EthAddress {\n        self.inputs.public_global_variables.coinbase\n    }\n\n    fn fee_recipient(self) -> AztecAddress {\n        self.inputs.public_global_variables.fee_recipient\n    }\n\n    fn fee_per_da_gas(self) -> Field {\n        self.inputs.public_global_variables.gas_fees.fee_per_da_gas\n    }\n\n    fn fee_per_l1_gas(self) -> Field {\n        self.inputs.public_global_variables.gas_fees.fee_per_l1_gas\n    }\n\n    fn fee_per_l2_gas(self) -> Field {\n        self.inputs.public_global_variables.gas_fees.fee_per_l2_gas\n    }\n\n    fn nullifier_exists(self, unsiloed_nullifier: Field, address: AztecAddress) -> bool {\n        // Current public can only check for settled nullifiers, so we always silo.\n        let siloed_nullifier = silo_nullifier(address, unsiloed_nullifier);\n        nullifier_exists_oracle(siloed_nullifier) == 1\n    }\n\n    fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        let message = L2ToL1Message { recipient, content };\n        self.new_l2_to_l1_msgs.push(message);\n    }\n\n    // We can consume message with a secret in public context because the message cannot be modified and therefore\n    // there is no front-running risk (e.g. somebody could front run you to claim your tokens to your address).\n    fn consume_l1_to_l2_message(&mut self, content: Field, secret: Field, sender: EthAddress) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(\n            self.historical_header.state.l1_to_l2_message_tree.root,\n            this,\n            sender,\n            self.chain_id(),\n            self.version(),\n            content,\n            secret\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, 0)\n    }\n\n    fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    fn call_public_function<ARGS_COUNT, RETURNS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT],\n        _gas: GasOpts\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    fn static_call_public_function<ARGS_COUNT, RETURNS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT],\n        _gas: GasOpts\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    fn delegate_call_public_function<ARGS_COUNT, RETURNS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n}\n\nimpl Empty for PublicContext {\n    fn empty() -> Self {\n        PublicContext {\n            inputs: PublicContextInputs::empty(),\n            side_effect_counter: 0 as u32,\n            args_hash : 0,\n            return_hash : 0,\n            nullifier_read_requests: BoundedVec::new(),\n            nullifier_non_existent_read_requests: BoundedVec::new(),\n            contract_storage_update_requests: BoundedVec::new(),\n            contract_storage_reads: BoundedVec::new(),\n            public_call_stack_hashes: BoundedVec::new(),\n            new_note_hashes: BoundedVec::new(),\n            new_nullifiers: BoundedVec::new(),\n            new_l2_to_l1_msgs: BoundedVec::new(),\n            unencrypted_logs_hash: 0,\n            unencrypted_logs_preimages_length: 0,\n            historical_header: Header::empty(),\n            prover_address: AztecAddress::zero(),\n        }\n    }\n}\n\n#[oracle(checkNullifierExists)]\nfn nullifier_exists_oracle(nullifier: Field) -> Field {}\n\nstruct FunctionReturns<N> {\n    values: [Field; N]\n}\n\nimpl<N> FunctionReturns<N> {\n    pub fn new(values: [Field; N]) -> FunctionReturns<N> {\n        FunctionReturns { values }\n    }\n\n    pub fn assert_empty(returns: FunctionReturns<0>) {\n        assert(returns.values.len() == 0);\n    }\n\n    pub fn raw(self) -> [Field; N] {\n        self.values\n    }\n\n    pub fn deserialize_into<T>(self) -> T where T: Deserialize<N> {\n        Deserialize::deserialize(self.raw())\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/context/public_context.nr"},"75":{"source":"use crate::{\n    context::{inputs::PrivateContextInputs, interface::ContextInterface},\n    key::nullifier_key::validate_nullifier_key_against_address, messaging::process_l1_to_l2_message,\n    hash::{hash_args_array, ArgsHasher},\n    oracle::{\n    arguments, returns, call_private_function::call_private_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal, context::get_portal_address,\n    header::get_header_at, nullifier_key::{get_nullifier_key_pair, NullifierKeyPair}\n}\n};\nuse dep::protocol_types::{\n    abis::{\n    gas::Gas, call_context::CallContext, function_data::FunctionData,\n    function_selector::FunctionSelector, max_block_number::MaxBlockNumber,\n    nullifier_key_validation_request::NullifierKeyValidationRequest,\n    private_call_stack_item::PrivateCallStackItem,\n    private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    public_call_stack_item::PublicCallStackItem,\n    public_circuit_public_inputs::PublicCircuitPublicInputs, read_request::ReadRequest,\n    side_effect::{SideEffect, SideEffectLinkedToNoteHash}\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    MAX_NEW_NOTE_HASHES_PER_CALL, MAX_NEW_L2_TO_L1_MSGS_PER_CALL, MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_READ_REQUESTS_PER_CALL,\n    MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL\n},\n    contrakt::{storage_read::StorageRead, storage_update_request::StorageUpdateRequest},\n    grumpkin_private_key::GrumpkinPrivateKey, header::Header,\n    messaging::l2_to_l1_message::L2ToL1Message, utils::reader::Reader,\n    traits::{is_empty, Deserialize, Empty}\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: PrivateContextInputs,\n    side_effect_counter: u32,\n\n    min_revertible_side_effect_counter: u32,\n\n    args_hash : Field,\n    return_hash : Field,\n\n    max_block_number: MaxBlockNumber,\n\n    note_hash_read_requests: BoundedVec<SideEffect, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>,\n    nullifier_read_requests: BoundedVec<ReadRequest, MAX_NULLIFIER_READ_REQUESTS_PER_CALL>,\n    nullifier_key_validation_requests: BoundedVec<NullifierKeyValidationRequest, MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL>,\n\n    new_note_hashes: BoundedVec<SideEffect, MAX_NEW_NOTE_HASHES_PER_CALL>,\n    new_nullifiers: BoundedVec<SideEffectLinkedToNoteHash, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack_hashes : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack_hashes : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<L2ToL1Message, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n\n    nullifier_key: Option<NullifierKeyPair>,\n}\n\nimpl ContextInterface for PrivateContext {\n    fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn this_portal_address(self) -> EthAddress {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    fn get_args_hash(self) -> Field {\n        self.args_hash\n    }\n\n    fn push_new_note_hash(&mut self, note_hash: Field) {\n        let side_effect = SideEffect { value: note_hash, counter: self.side_effect_counter };\n        self.new_note_hashes.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        let side_effect = SideEffectLinkedToNoteHash { value: nullifier, note_hash: nullified_commitment, counter: self.side_effect_counter };\n        self.new_nullifiers.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        let side_effect_counter = inputs.start_side_effect_counter;\n        let mut min_revertible_side_effect_counter = 0;\n        if is_empty(inputs.call_context.msg_sender) {\n            min_revertible_side_effect_counter = side_effect_counter;\n        }\n        PrivateContext {\n            inputs,\n            side_effect_counter,\n            min_revertible_side_effect_counter,\n            args_hash,\n            return_hash: 0,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            nullifier_key_validation_requests: BoundedVec::new(),\n            new_note_hashes: BoundedVec::new(),\n            new_nullifiers: BoundedVec::new(),\n            historical_header: inputs.historical_header,\n            private_call_stack_hashes: BoundedVec::new(),\n            public_call_stack_hashes: BoundedVec::new(),\n            new_l2_to_l1_msgs: BoundedVec::new(),\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n            nullifier_key: Option::none()\n        }\n    }\n\n    // Returns the header of a block whose state is used during private execution (not the block the transaction is\n    // included in).\n    fn get_header(self) -> Header {\n        self.historical_header\n    }\n\n    // Returns the header of an arbitrary block whose block number is less than or equal to the block number\n    // of historical header.\n    pub fn get_header_at(self, block_number: u32) -> Header {\n        get_header_at(block_number, self)\n    }\n\n    pub fn set_return_hash(&mut self, returns_hasher: ArgsHasher) {\n        returns::pack_returns(returns_hasher.fields);\n        self.return_hash = returns_hasher.hash();\n    }\n\n    pub fn finish(self) -> PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = 0;\n        let unencrypted_logs_hash = 0;\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            returns_hash: self.return_hash,\n            min_revertible_side_effect_counter: self.min_revertible_side_effect_counter,\n            max_block_number: self.max_block_number,\n            note_hash_read_requests: self.note_hash_read_requests.storage,\n            nullifier_read_requests: self.nullifier_read_requests.storage,\n            nullifier_key_validation_requests: self.nullifier_key_validation_requests.storage,\n            new_note_hashes: self.new_note_hashes.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            private_call_stack_hashes: self.private_call_stack_hashes.storage,\n            public_call_stack_hashes: self.public_call_stack_hashes.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            start_side_effect_counter: self.inputs.start_side_effect_counter,\n            end_side_effect_counter: self.side_effect_counter,\n            encrypted_logs_hash,\n            unencrypted_logs_hash,\n            encrypted_log_preimages_length,\n            unencrypted_log_preimages_length,\n            historical_header: self.historical_header,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version\n        };\n\n        priv_circuit_pub_inputs\n    }\n\n    pub fn capture_min_revertible_side_effect_counter(&mut self) {\n        self.min_revertible_side_effect_counter = self.side_effect_counter;\n    }\n\n    // docs:start:max-block-number\n    pub fn set_tx_max_block_number(&mut self, max_block_number: u32) {\n        // docs:end:max-block-number\n        self.max_block_number = MaxBlockNumber::min_with_u32(self.max_block_number, max_block_number);\n    }\n\n    pub fn push_note_hash_read_request(&mut self, note_hash: Field) {\n        let side_effect = SideEffect { value: note_hash, counter: self.side_effect_counter };\n        self.note_hash_read_requests.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn push_nullifier_read_request(&mut self, nullifier: Field) {\n        let request = ReadRequest { value: nullifier, counter: self.side_effect_counter };\n        self.nullifier_read_requests.push(request);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn request_nullifier_secret_key(&mut self, account: AztecAddress) -> GrumpkinPrivateKey {\n        let key_pair = if self.nullifier_key.is_none() {\n            let key_pair = get_nullifier_key_pair(account);\n            validate_nullifier_key_against_address(account, key_pair.public_key);\n            let request = NullifierKeyValidationRequest { public_key: key_pair.public_key, secret_key: key_pair.secret_key };\n            self.nullifier_key_validation_requests.push(request);\n            self.nullifier_key = Option::some(key_pair);\n            key_pair\n        } else {\n            let key_pair = self.nullifier_key.unwrap_unchecked();\n            // If MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL is larger than 1, need to update the way the key pair is cached.\n            assert(MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL == 1);\n            assert(\n                key_pair.account == account, \"Cannot query nullifier key for more than one account per call\"\n            );\n            key_pair\n        };\n        key_pair.secret_key\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        // docs:end:context_message_portal\n        let message = L2ToL1Message { recipient, content };\n        self.new_l2_to_l1_msgs.push(message);\n    }\n\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(&mut self, content: Field, secret: Field, sender: EthAddress) {\n        // docs:end:context_consume_l1_to_l2_message\n        let nullifier = process_l1_to_l2_message(\n            self.historical_header.state.l1_to_l2_message_tree.root,\n            self.this_address(),\n            sender,\n            self.chain_id(),\n            self.version(),\n            content,\n            secret\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, 0)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_private_function_no_args<RETURNS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_private_function_no_args<RETURNS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_private_function_no_args<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_private_function_with_packed_args<RETURNS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> PackedReturns {\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        let item = call_private_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            self.side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        assert_eq(item.public_inputs.call_context.side_effect_counter, self.side_effect_counter);\n        assert_eq(item.public_inputs.start_side_effect_counter, self.side_effect_counter);\n        self.side_effect_counter = item.public_inputs.end_side_effect_counter + 1;\n\n        // TODO (fees) figure out why this crashes the prover and enable it\n        // we need this in order to pay fees inside child call contexts\n        // assert(\n        //     (item.public_inputs.min_revertible_side_effect_counter == 0 as u32)\n        //     | (item.public_inputs.min_revertible_side_effect_counter\n        //         > self.min_revertible_side_effect_counter)\n        // );\n\n        // if item.public_inputs.min_revertible_side_effect_counter\n        //     > self.min_revertible_side_effect_counter {\n        //     self.min_revertible_side_effect_counter = item.public_inputs.min_revertible_side_effect_counter;\n        // }\n\n        assert(contract_address.eq(item.contract_address));\n        assert(function_selector.eq(item.function_data.selector));\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        assert(item.public_inputs.call_context.is_delegate_call == is_delegate_call);\n        assert(item.public_inputs.call_context.is_static_call == is_static_call);\n\n        if (is_delegate_call) {\n            // For delegate calls, we also constrain the execution context address for the nested call to be equal to our address.\n            assert(\n                item.public_inputs.call_context.storage_contract_address.eq(self.inputs.call_context.storage_contract_address)\n            );\n            assert(item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.msg_sender));\n        } else {\n            // For non-delegate calls, we also constrain the execution context address for the nested call to be equal to the address we called.\n            assert(item.public_inputs.call_context.storage_contract_address.eq(contract_address));\n            assert(\n                item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.storage_contract_address)\n            );\n        }\n\n        self.private_call_stack_hashes.push(item.hash());\n\n        PackedReturns::new(item.public_inputs.returns_hash)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        let fields = enqueue_public_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            self.side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let mut reader = Reader::new(fields);\n\n        // Note: Not using PublicCirclePublicInputs::deserialize here, because everything below args_hash is 0 and\n        // there is no more data in fields because there is only ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE fields!\n        let item = PublicCallStackItem {\n            contract_address: AztecAddress::from_field(reader.read()),\n            function_data: reader.read_struct(FunctionData::deserialize),\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: reader.read_struct(CallContext::deserialize),\n                args_hash: reader.read(),\n                returns_hash: 0,\n                nullifier_read_requests: [ReadRequest::empty(); MAX_NULLIFIER_READ_REQUESTS_PER_CALL],\n                nullifier_non_existent_read_requests: [ReadRequest::empty(); MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL],\n                contract_storage_update_requests: [StorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_reads: [StorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack_hashes: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_note_hashes: [SideEffect::empty(); MAX_NEW_NOTE_HASHES_PER_CALL],\n                new_nullifiers: [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs: [L2ToL1Message::empty(); MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                start_side_effect_counter: 0,\n                end_side_effect_counter: 0,\n                unencrypted_logs_hash: 0,\n                unencrypted_log_preimages_length: 0,\n                historical_header: Header::empty(),\n                prover_address: AztecAddress::zero(),\n                revert_code: 0,\n                gas_left: Gas::empty()\n            },\n            is_execution_request: true\n        };\n        reader.finish();\n\n        assert(contract_address.eq(item.contract_address));\n        assert(function_selector.eq(item.function_data.selector));\n\n        assert_eq(item.public_inputs.call_context.side_effect_counter, self.side_effect_counter);\n        // We increment the sideffect counter by one, to account for the call itself being a side effect.\n        self.side_effect_counter = self.side_effect_counter + 1;\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        assert(item.public_inputs.call_context.is_delegate_call == is_delegate_call);\n        assert(item.public_inputs.call_context.is_static_call == is_static_call);\n\n        if (is_delegate_call) {\n            // For delegate calls, we also constrain the execution context address for the nested call to be equal to our address.\n            assert(\n                item.public_inputs.call_context.storage_contract_address.eq(self.inputs.call_context.storage_contract_address)\n            );\n            assert(item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.msg_sender));\n        } else {\n            // For non-delegate calls, we also constrain the execution context address for the nested call to be equal to the address we called.\n            assert(item.public_inputs.call_context.storage_contract_address.eq(contract_address));\n            assert(\n                item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.storage_contract_address)\n            );\n        }\n\n        self.public_call_stack_hashes.push(item.hash());\n    }\n}\n\nimpl Empty for PrivateContext {\n    fn empty() -> Self {\n        PrivateContext {\n            inputs: PrivateContextInputs::empty(),\n            side_effect_counter: 0 as u32,\n            min_revertible_side_effect_counter: 0 as u32,\n            args_hash : 0,\n            return_hash : 0,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            nullifier_key_validation_requests: BoundedVec::new(),\n            new_note_hashes: BoundedVec::new(),\n            new_nullifiers: BoundedVec::new(),\n            private_call_stack_hashes : BoundedVec::new(),\n            public_call_stack_hashes : BoundedVec::new(),\n            new_l2_to_l1_msgs : BoundedVec::new(),\n            historical_header: Header::empty(),\n            nullifier_key: Option::none(),\n        }\n    }\n}\n\nstruct PackedReturns {\n  packed_returns: Field,\n}\n\nimpl PackedReturns {\n    pub fn new(packed_returns: Field) -> Self {\n        PackedReturns { packed_returns }\n    }\n\n    pub fn assert_empty(self) {\n        assert_eq(self.packed_returns, 0);\n    }\n\n    pub fn raw(self) -> Field {\n        self.packed_returns\n    }\n\n    pub fn unpack<N>(self) -> [Field; N] {\n        let unpacked: [Field; N] = returns::unpack_returns(self.packed_returns);\n        assert_eq(self.packed_returns, hash_args_array(unpacked));\n        unpacked\n    }\n\n    pub fn unpack_into<T, N>(self) -> T where T: Deserialize<N> {\n        let unpacked: [Field; N] = self.unpack();\n        Deserialize::deserialize(unpacked)\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/context/private_context.nr"},"80":{"source":"use dep::protocol_types::{abis::function_selector::FunctionSelector, address::AztecAddress};\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle<RETURNS_COUNT>(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> [Field; RETURNS_COUNT] {}\n\nunconstrained pub fn call_public_function_internal<RETURNS_COUNT>(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> [Field; RETURNS_COUNT] {\n    call_public_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    )\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/public_call.nr"},"82":{"source":"use dep::protocol_types::{\n    abis::{function_selector::FunctionSelector, private_call_stack_item::PrivateCallStackItem},\n    address::AztecAddress, constants::PRIVATE_CALL_STACK_ITEM_LENGTH\n};\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _start_side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> [Field; PRIVATE_CALL_STACK_ITEM_LENGTH] {}\n\nunconstrained pub fn call_private_function_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    start_side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> PrivateCallStackItem {\n    let fields = call_private_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        start_side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    );\n\n    PrivateCallStackItem::deserialize(fields)\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/call_private_function.nr"},"83":{"source":"use crate::note::{note_header::NoteHeader, note_interface::NoteInterface};\n\nuse dep::protocol_types::{address::AztecAddress, utils::arr_copy_slice};\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _serialized_note: [Field; N],\n    _inner_note_hash: Field\n) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(\n    storage_slot: Field,\n    note_type_id: Field,\n    serialized_note: [Field; N],\n    inner_note_hash: Field\n) -> Field {\n    notify_created_note_oracle(storage_slot, note_type_id, serialized_note, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(_nullifier: Field, _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(nullifier: Field, inner_note_hash: Field) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by_indexes: [u8; N],\n    _select_by_offsets: [u8; N],\n    _select_by_lengths: [u8; N],\n    _select_values: [Field; N],\n    _select_comparators: [u8; N],\n    _sort_by_indexes: [u8; N],\n    _sort_by_offsets: [u8; N],\n    _sort_by_lengths: [u8; N],\n    _sort_order: [u8; N],\n    _limit: u32,\n    _offset: u32,\n    _status: u8,\n    _return_size: u32,\n    _placeholder_fields: [Field; S]\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by_indexes: [u8; N],\n    select_by_offsets: [u8; N],\n    select_by_lengths: [u8; N],\n    select_values: [Field; N],\n    select_comparators: [u8; N],\n    sort_by_indexes: [u8; N],\n    sort_by_offsets: [u8; N],\n    sort_by_lengths: [u8; N],\n    sort_order: [u8; N],\n    limit: u32,\n    offset: u32,\n    status: u8,\n    mut placeholder_fields: [Field; S]\n) -> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        limit,\n        offset,\n        status,\n        return_size,\n        placeholder_fields\n    )\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by_indexes: [u8; M],\n    select_by_offsets: [u8; M],\n    select_by_lengths: [u8; M],\n    select_values: [Field; M],\n    select_comparators: [u8; M],\n    sort_by_indexes: [u8; M],\n    sort_by_offsets: [u8; M],\n    sort_by_lengths: [u8; M],\n    sort_order: [u8; M],\n    limit: u32,\n    offset: u32,\n    status: u8,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS], // TODO: Remove it and use `limit` to initialize the note array.\n    _placeholder_note_length: [Field; N] // Turbofish hack? Compiler breaks calculating read_offset unless we add this parameter\n) -> [Option<Note>; S] where Note: NoteInterface<N> {\n    let fields = get_notes_oracle_wrapper(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        limit,\n        offset,\n        status,\n        placeholder_fields\n    );\n    let num_notes = fields[0] as u64;\n    let contract_address = AztecAddress::from_field(fields[1]);\n    for i in 0..placeholder_opt_notes.len() {\n        if i < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: u64 = 2; // num_notes & contract_address.\n            let extra_preimage_length: u64 = 2; // nonce & is_transient.\n            let read_offset: u64 = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = Note::deserialize_content(serialized_note);\n            // TODO: change this to note.set_header(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n            Note::set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    }\n    placeholder_opt_notes\n}\n\n// Only ever use this in private!\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(_inner_nullifier: Field) -> Field {}\n\n// Only ever use this in private!\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/notes.nr"},"84":{"source":"#[oracle(packReturns)]\nfn pack_returns_oracle<N>(_returns: [Field]) -> Field {}\n\nunconstrained pub fn pack_returns(returns: [Field]) {\n    let _unused = pack_returns_oracle(returns);\n}\n\n#[oracle(unpackReturns)]\nfn unpack_returns_oracle<N>(_return_hash: Field) -> [Field; N] {}\n\nunconstrained pub fn unpack_returns<N>(return_hash: Field) -> [Field; N] {\n    unpack_returns_oracle(return_hash)\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/returns.nr"},"85":{"source":"use dep::protocol_types::{\n    abis::function_selector::FunctionSelector, address::AztecAddress,\n    constants::ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH\n};\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH] {\n    enqueue_public_function_call_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    )\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/enqueue_public_function_call.nr"},"86":{"source":"#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n/// - Pack arguments will notify the simulator that these arguments will be used later at\n///   some point in the call. \n/// - When the external call is made later, the simulator will know what the values unpack to.\n/// - This oracle will not be required in public vm functions, as the vm will keep track of arguments \n///   itself.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/arguments.nr"},"87":{"source":"use dep::protocol_types::{address::{AztecAddress, PartialAddress, PublicKeysHash}, grumpkin_point::GrumpkinPoint};\n\n#[oracle(getPublicKeyAndPartialAddress)]\nfn get_public_key_and_partial_address_oracle(_address: AztecAddress) -> [Field; 3] {}\n\nunconstrained fn get_public_key_and_partial_address_internal(address: AztecAddress) -> [Field; 3] {\n    get_public_key_and_partial_address_oracle(address)\n}\n\npub fn get_public_key(address: AztecAddress) -> GrumpkinPoint {\n    let result = get_public_key_and_partial_address_internal(address);\n    let pub_key = GrumpkinPoint::new(result[0], result[1]);\n    let partial_address = PartialAddress::from_field(result[2]);\n\n    let calculated_address = AztecAddress::compute(PublicKeysHash::compute(pub_key), partial_address);\n    assert(calculated_address.eq(address));\n\n    pub_key\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/get_public_key.nr"},"88":{"source":"use dep::protocol_types::traits::{Deserialize, Serialize};\n\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(_storage_slot: Field, _number_of_elements: Field) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field) -> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<N>(storage_slot: Field) -> [Field; N] {\n    storage_read_oracle_wrapper(storage_slot)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(_storage_slot: Field, _values: [Field; N]) -> [Field; N] {}\n\nunconstrained pub fn storage_write<N>(storage_slot: Field, fields: [Field; N]) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/storage.nr"},"90":{"source":"use dep::protocol_types::{address::AztecAddress, grumpkin_point::GrumpkinPoint};\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(\n    _contract_address: AztecAddress,\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _encryption_pub_key: GrumpkinPoint,\n    _preimage: [Field; N]\n) -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    note_type_id: Field,\n    encryption_pub_key: GrumpkinPoint,\n    preimage: [Field; N]\n) -> Field {\n    emit_encrypted_log_oracle(\n        contract_address,\n        storage_slot,\n        note_type_id,\n        encryption_pub_key,\n        preimage\n    )\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(\n    _contract_address: AztecAddress,\n    _event_selector: Field,\n    _message: T\n) -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(\n    contract_address: AztecAddress,\n    event_selector: Field,\n    message: T\n) -> Field {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    emit_unencrypted_log_oracle(contract_address, event_selector, message)\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/logs.nr"},"93":{"source":"use dep::protocol_types::{\n    constants::PUBLIC_DATA_TREE_HEIGHT, hash::pedersen_hash,\n    public_data_tree_leaf_preimage::PublicDataTreeLeafPreimage, traits::{Hash, Serialize},\n    utils::arr_copy_slice\n};\n\nglobal LEAF_PREIMAGE_LENGTH: u64 = 4;\nglobal PUBLIC_DATA_WITNESS: Field = 45;\n\nstruct PublicDataWitness {\n    index: Field,\n    leaf_preimage: PublicDataTreeLeafPreimage,\n    path: [Field; PUBLIC_DATA_TREE_HEIGHT],\n}\n\n#[oracle(getPublicDataTreeWitness)]\nfn get_public_data_witness_oracle(\n    _block_number: u32,\n    _leaf_slot: Field\n) -> [Field; PUBLIC_DATA_WITNESS] {}\n\nunconstrained pub fn get_public_data_witness(block_number: u32, leaf_slot: Field) -> PublicDataWitness {\n    let fields = get_public_data_witness_oracle(block_number, leaf_slot);\n    PublicDataWitness {\n        index: fields[0],\n        leaf_preimage: PublicDataTreeLeafPreimage { slot: fields[1], value: fields[2], next_index: fields[3] as u64, next_slot: fields[4] },\n        path: arr_copy_slice(fields, [0; PUBLIC_DATA_TREE_HEIGHT], 1 + LEAF_PREIMAGE_LENGTH)\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/get_public_data_witness.nr"},"94":{"source":"use dep::protocol_types::{address::AztecAddress, grumpkin_point::GrumpkinPoint, grumpkin_private_key::GrumpkinPrivateKey};\n\nstruct NullifierKeyPair {\n    account: AztecAddress,\n    public_key: GrumpkinPoint,\n    secret_key: GrumpkinPrivateKey,\n}\n\n#[oracle(getNullifierKeyPair)]\nfn get_nullifier_key_pair_oracle(_account: AztecAddress) -> [Field; 4] {}\n\nunconstrained fn get_nullifier_key_pair_internal(account: AztecAddress) -> NullifierKeyPair {\n    let result = get_nullifier_key_pair_oracle(account);\n    NullifierKeyPair {\n        account,\n        public_key: GrumpkinPoint { x: result[0], y: result[1] },\n        secret_key: GrumpkinPrivateKey { high: result[2], low: result[3] }\n    }\n}\n\npub fn get_nullifier_key_pair(account: AztecAddress) -> NullifierKeyPair {\n    get_nullifier_key_pair_internal(account)\n}\n\npub fn get_nullifier_secret_key(account: AztecAddress) -> GrumpkinPrivateKey {\n    get_nullifier_key_pair_internal(account).secret_key\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/nullifier_key.nr"},"95":{"source":"use dep::protocol_types::{\n    address::AztecAddress, contract_instance::ContractInstance, utils::arr_copy_slice,\n    constants::CONTRACT_INSTANCE_LENGTH, utils::reader::Reader\n};\n\n#[oracle(getContractInstance)]\nfn get_contract_instance_oracle(_address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH] {}\n\n// Returns a ContractInstance plus a boolean indicating whether the instance was found.\n#[oracle(avmOpcodeGetContractInstance)]\nfn get_contract_instance_oracle_avm(_address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH + 1] {}\n\nunconstrained fn get_contract_instance_internal(address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH] {\n    get_contract_instance_oracle(address)\n}\n\nunconstrained fn get_contract_instance_internal_avm(address: AztecAddress) -> [Field; CONTRACT_INSTANCE_LENGTH + 1] {\n    get_contract_instance_oracle_avm(address)\n}\n\npub fn get_contract_instance(address: AztecAddress) -> ContractInstance {\n    let instance = ContractInstance::deserialize(get_contract_instance_internal(address));\n    assert(instance.to_address().eq(address));\n    instance\n}\n\npub fn get_contract_instance_avm(address: AztecAddress) -> Option<ContractInstance> {\n    let mut reader = Reader::new(get_contract_instance_internal_avm(address));\n    let found = reader.read();\n    if found == 0 {\n        Option::none()\n    } else {\n        Option::some(reader.read_struct(ContractInstance::deserialize))\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/get_contract_instance.nr"},"96":{"source":"use dep::protocol_types::{\n    abis::nullifier_leaf_preimage::{NullifierLeafPreimage, NULLIFIER_LEAF_PREIMAGE_LENGTH},\n    constants::NULLIFIER_TREE_HEIGHT, hash::pedersen_hash, utils::arr_copy_slice\n};\n\n// INDEX_LENGTH + NULLIFIER_LEAF_PREIMAGE_LENGTH + NULLIFIER_TREE_HEIGHT\nglobal NULLIFIER_MEMBERSHIP_WITNESS: Field = 24;\n\nstruct NullifierMembershipWitness {\n    index: Field,\n    leaf_preimage: NullifierLeafPreimage,\n    path: [Field; NULLIFIER_TREE_HEIGHT],\n}\n\nimpl NullifierMembershipWitness {\n    pub fn deserialize(fields: [Field; NULLIFIER_MEMBERSHIP_WITNESS]) -> Self {\n        let leaf_preimage_fields = arr_copy_slice(fields, [0; NULLIFIER_LEAF_PREIMAGE_LENGTH], 1);\n        Self {\n            index: fields[0],\n            leaf_preimage: NullifierLeafPreimage::deserialize(leaf_preimage_fields),\n            path: arr_copy_slice(\n                fields,\n                [0; NULLIFIER_TREE_HEIGHT],\n                1 + NULLIFIER_LEAF_PREIMAGE_LENGTH\n            )\n        }\n    }\n}\n\n#[oracle(getLowNullifierMembershipWitness)]\nfn get_low_nullifier_membership_witness_oracle(\n    _block_number: u32,\n    _nullifier: Field\n) -> [Field; NULLIFIER_MEMBERSHIP_WITNESS] {}\n\n// Nullifier here refers to the nullifier we are looking to get non-inclusion proof for (by proving that a lower\n// nullifier's next_value is bigger than the nullifier)\nunconstrained pub fn get_low_nullifier_membership_witness(block_number: u32, nullifier: Field) -> NullifierMembershipWitness {\n    let fields = get_low_nullifier_membership_witness_oracle(block_number, nullifier);\n    NullifierMembershipWitness::deserialize(fields)\n}\n\n#[oracle(getNullifierMembershipWitness)]\nfn get_nullifier_membership_witness_oracle(\n    _block_number: u32,\n    _nullifier: Field\n) -> [Field; NULLIFIER_MEMBERSHIP_WITNESS] {}\n\n// Nullifier here refers to the nullifier we are looking to get non-inclusion proof for (by proving that a lower\n// nullifier's next_value is bigger than the nullifier)\nunconstrained pub fn get_nullifier_membership_witness(block_number: u32, nullifier: Field) -> NullifierMembershipWitness {\n    let fields = get_nullifier_membership_witness_oracle(block_number, nullifier);\n    NullifierMembershipWitness::deserialize(fields)\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/oracle/get_nullifier_membership_witness.nr"},"102":{"source":"mod globals;\nmod inputs;\n\nmod private_context;\nmod public_context;\nmod avm_context;\nmod interface;\nmod gas;\n\nuse interface::ContextInterface;\nuse private_context::PrivateContext;\nuse private_context::PackedReturns;\nuse public_context::PublicContext;\nuse public_context::FunctionReturns;\nuse avm_context::AvmContext;\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n    avm: Option<&mut AvmContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context { private: Option::some(context), public: Option::none(), avm: Option::none() }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context { public: Option::some(context), private: Option::none(), avm: Option::none() }\n    }\n\n    pub fn avm(context: &mut AvmContext) -> Context {\n        Context { avm: Option::some(context), public: Option::none(), private: Option::none() }\n    }\n\n    pub fn none() -> Context {\n        Context { public: Option::none(), private: Option::none(), avm: Option::none() }\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/context.nr"},"105":{"source":"use dep::protocol_types::{\n    constants::GENERATOR_INDEX__PUBLIC_LEAF_INDEX, hash::pedersen_hash, address::AztecAddress,\n    header::Header, utils::field::full_field_less_than\n};\nuse dep::std::merkle::compute_merkle_root;\n\nuse crate::{context::PrivateContext, oracle::get_public_data_witness::get_public_data_witness};\n\nfn _public_storage_historical_read(storage_slot: Field, contract_address: AztecAddress, header: Header) -> Field {\n    // 1) Compute the leaf slot by siloing the storage slot with the contract address\n    let public_value_leaf_slot = pedersen_hash(\n        [contract_address.to_field(), storage_slot],\n        GENERATOR_INDEX__PUBLIC_LEAF_INDEX\n    );\n\n    // 2) Get the membership witness of the slot\n    let witness = get_public_data_witness(\n        header.global_variables.block_number as u32,\n        public_value_leaf_slot\n    );\n\n    // 3) Extract the value from the witness leaf and check that the storage slot is correct\n    let preimage = witness.leaf_preimage;\n\n    // Here we have two cases. Code based on same checks in `validate_public_data_reads` in `base_rollup_inputs`\n    // 1. The value is the same as the one in the witness\n    // 2. The value was never initialized and is zero\n    let is_less_than_slot = full_field_less_than(preimage.slot, public_value_leaf_slot);\n    let is_next_greater_than = full_field_less_than(public_value_leaf_slot, preimage.next_slot);\n    let is_max = ((preimage.next_index == 0) & (preimage.next_slot == 0));\n    let is_in_range = is_less_than_slot & (is_next_greater_than | is_max);\n\n    let value = if is_in_range {\n        0\n    } else {\n        assert_eq(preimage.slot, public_value_leaf_slot, \"Public data slot doesn't match witness\");\n        preimage.value\n    };\n\n    // 4) Prove that the leaf exists in the public data tree. Note that `hash` returns not just the hash of the value\n    // but also the metadata (slot, next index and next slot).\n    assert(\n        header.state.partial.public_data_tree.root\n        == compute_merkle_root(preimage.hash(), witness.index, witness.path), \"Proving public value inclusion failed\"\n    );\n\n    value\n}\n\npub fn public_storage_historical_read(\n    context: PrivateContext,\n    storage_slot: Field, // The storage slot to read\n    contract_address: AztecAddress // The contract we want to look into\n) -> Field {\n    _public_storage_historical_read(storage_slot, contract_address, context.historical_header)\n}\n\npub fn public_storage_historical_read_at(\n    context: PrivateContext,\n    storage_slot: Field, // The storage slot to read\n    contract_address: AztecAddress, // The contract we want to look into\n    block_number: u32 // The block number at the end of which we'll read the value\n) -> Field {\n    let header = context.get_header_at(block_number);\n\n    _public_storage_historical_read(storage_slot, contract_address, header)\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/history/public_storage.nr"},"108":{"source":"use dep::std::merkle::compute_merkle_root;\nuse dep::protocol_types::header::Header;\n\nuse crate::{\n    context::PrivateContext, oracle::get_nullifier_membership_witness::get_nullifier_membership_witness,\n    note::{utils::compute_siloed_nullifier, note_interface::NoteInterface}\n};\n\nfn _nullifier_inclusion(nullifier: Field, header: Header) {\n    // 1) Get the membership witness of the nullifier\n    let witness = get_nullifier_membership_witness(header.global_variables.block_number as u32, nullifier);\n\n    // 2) Check that the witness we obtained matches the nullifier\n    assert(witness.leaf_preimage.nullifier == nullifier, \"Nullifier does not match value in witness\");\n\n    // 3) Compute the nullifier tree leaf\n    let nullifier_leaf = witness.leaf_preimage.hash();\n\n    // 4) Prove that the nullifier is in the nullifier tree\n    assert(\n        header.state.partial.nullifier_tree.root\n        == compute_merkle_root(nullifier_leaf, witness.index, witness.path), \"Proving nullifier inclusion failed\"\n    );\n    // --> Now we have traversed the trees all the way up to archive root and verified that the nullifier\n    //     was included in the nullifier tree.\n}\n\npub fn prove_nullifier_inclusion(nullifier: Field, context: PrivateContext) {\n    _nullifier_inclusion(nullifier, context.get_header());\n}\n\npub fn prove_nullifier_inclusion_at(\n    nullifier: Field,\n    block_number: u32, // The block at which we'll prove that the nullifier exists in the nullifier tree\n    context: PrivateContext\n) {\n    let header = context.get_header_at(block_number);\n\n    _nullifier_inclusion(nullifier, header);\n}\n\npub fn prove_note_is_nullified<Note, N>(\n    note: Note,\n    context: &mut PrivateContext\n) where Note: NoteInterface<N> {\n    let nullifier = compute_siloed_nullifier(note, context);\n\n    _nullifier_inclusion(nullifier, context.historical_header);\n}\n\npub fn prove_note_is_nullified_at<Note, N>(\n    note: Note,\n    block_number: u32,\n    context: &mut PrivateContext\n) where Note: NoteInterface<N> {\n    let nullifier = compute_siloed_nullifier(note, context);\n    let header = context.get_header_at(block_number);\n\n    _nullifier_inclusion(nullifier, header);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/history/nullifier_inclusion.nr"},"109":{"source":"use dep::protocol_types::{\n    address::AztecAddress, hash::{silo_nullifier, pedersen_hash},\n    constants::GENERATOR_INDEX__CONSTRUCTOR, abis::function_selector::FunctionSelector\n};\n\nuse crate::{\n    context::{PrivateContext, PublicContext, AvmContext, ContextInterface},\n    oracle::get_contract_instance::get_contract_instance,\n    oracle::get_contract_instance::get_contract_instance_avm,\n    history::nullifier_inclusion::prove_nullifier_inclusion\n};\n\npub fn mark_as_initialized_public(context: &mut PublicContext) {\n    mark_as_initialized(context);\n}\n\npub fn mark_as_initialized_avm(context: &mut AvmContext) {\n    mark_as_initialized(context);\n}\n\npub fn mark_as_initialized_private(context: &mut PrivateContext) {\n    mark_as_initialized(context);\n}\n\nfn mark_as_initialized<TContext>(context: &mut TContext) where TContext: ContextInterface {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier((*context).this_address());\n    ContextInterface::push_new_nullifier(context, init_nullifier, 0);\n}\n\npub fn assert_is_initialized_public(context: &mut PublicContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier(context.this_address());\n    assert(context.nullifier_exists(init_nullifier, context.this_address()), \"Not initialized\");\n}\n\npub fn assert_is_initialized_avm(context: &mut AvmContext) {\n    let init_nullifier = compute_unsiloed_contract_initialization_nullifier(context.this_address());\n    assert(context.nullifier_exists(init_nullifier, context.this_address()), \"Not initialized\");\n}\n\npub fn assert_is_initialized_private(context: &mut PrivateContext) {\n    let init_nullifier = compute_contract_initialization_nullifier(context.this_address());\n    prove_nullifier_inclusion(init_nullifier, *context);\n}\n\nfn compute_contract_initialization_nullifier(address: AztecAddress) -> Field {\n    silo_nullifier(\n        address,\n        compute_unsiloed_contract_initialization_nullifier(address)\n    )\n}\n\nfn compute_unsiloed_contract_initialization_nullifier(address: AztecAddress) -> Field {\n    address.to_field()\n}\n\npub fn assert_initialization_matches_address_preimage_public(context: PublicContext) {\n    assert_initialization_matches_address_preimage(context);\n}\n\npub fn assert_initialization_matches_address_preimage_avm(context: AvmContext) {\n    let address = context.this_address();\n    let instance = get_contract_instance_avm(address).unwrap();\n    let expected_init = compute_initialization_hash(context.selector(), context.get_args_hash());\n    assert(instance.initialization_hash == expected_init, \"Initialization hash does not match\");\n    assert(\n        (instance.deployer.is_zero()) | (instance.deployer == context.msg_sender()), \"Initializer address is not the contract deployer\"\n    );\n}\n\npub fn assert_initialization_matches_address_preimage_private(context: PrivateContext) {\n    assert_initialization_matches_address_preimage(context);\n}\n\nfn assert_initialization_matches_address_preimage<TContext>(context: TContext) where TContext: ContextInterface {\n    let address = context.this_address();\n    let instance = get_contract_instance(address);\n    let expected_init = compute_initialization_hash(context.selector(), context.get_args_hash());\n    assert(instance.initialization_hash == expected_init, \"Initialization hash does not match\");\n    assert(\n        (instance.deployer.is_zero()) | (instance.deployer == context.msg_sender()), \"Initializer address is not the contract deployer\"\n    );\n}\n\npub fn compute_initialization_hash(init_selector: FunctionSelector, init_args_hash: Field) -> Field {\n    pedersen_hash(\n        [init_selector.to_field(), init_args_hash],\n        GENERATOR_INDEX__CONSTRUCTOR\n    )\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/initializer.nr"},"110":{"source":"use dep::protocol_types::{\n    address::{AztecAddress, EthAddress},\n    constants::{\n    GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET, GENERATOR_INDEX__NULLIFIER, ARGS_HASH_CHUNK_COUNT,\n    GENERATOR_INDEX__FUNCTION_ARGS, ARGS_HASH_CHUNK_LENGTH\n},\n    traits::Hash, hash::{pedersen_hash, silo_nullifier}\n};\n\nuse dep::protocol_types::hash::sha256_to_field;\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    // TODO(#1205) This is probably not the right index to use\n    pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn compute_message_hash(\n    sender: EthAddress,\n    chain_id: Field,\n    recipient: AztecAddress,\n    version: Field,\n    content: Field,\n    secret_hash: Field\n) -> Field {\n    let mut hash_bytes = [0 as u8; 192];\n    let sender_bytes = sender.to_field().to_be_bytes(32);\n    let chain_id_bytes = chain_id.to_be_bytes(32);\n    let recipient_bytes = recipient.to_field().to_be_bytes(32);\n    let version_bytes = version.to_be_bytes(32);\n    let content_bytes = content.to_be_bytes(32);\n    let secret_hash_bytes = secret_hash.to_be_bytes(32);\n\n    for i in 0..32 {\n        hash_bytes[i] = sender_bytes[i];\n        hash_bytes[i + 32] = chain_id_bytes[i];\n        hash_bytes[i + 64] = recipient_bytes[i];\n        hash_bytes[i + 96] = version_bytes[i];\n        hash_bytes[i + 128] = content_bytes[i];\n        hash_bytes[i + 160] = secret_hash_bytes[i];\n    }\n\n    sha256_to_field(hash_bytes)\n}\n\n// The nullifier of a l1 to l2 message is the hash of the message salted with the secret and index of the message hash\n// in the L1 to L2 message tree\npub fn compute_message_nullifier(message_hash: Field, secret: Field, leaf_index: Field) -> Field {\n    pedersen_hash(\n        [message_hash, secret, leaf_index],\n        GENERATOR_INDEX__NULLIFIER\n    )\n}\n\npub fn compute_siloed_nullifier(address: AztecAddress, nullifier: Field) -> Field {\n    silo_nullifier(address, nullifier)\n}\n\nstruct ArgsHasher {\n    fields: [Field],\n}\n\nimpl Hash for ArgsHasher {\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nimpl ArgsHasher {\n    pub fn new() -> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n}\n\npub fn hash_args_array<N>(args: [Field; N]) -> Field {\n    hash_args(args.as_slice())\n}\n\npub fn hash_args(args: [Field]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        assert(args.len() < ARGS_HASH_CHUNK_COUNT * ARGS_HASH_CHUNK_LENGTH);\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        let mut current_chunk_values = [0; ARGS_HASH_CHUNK_LENGTH];\n\n        let mut current_chunk_index = 0;\n        let mut index_inside_current_chunk = 0;\n        for i in 0..args.len() {\n            current_chunk_values[index_inside_current_chunk] = args[i];\n            index_inside_current_chunk+=1;\n            if index_inside_current_chunk == ARGS_HASH_CHUNK_LENGTH {\n                chunks_hashes[current_chunk_index] = pedersen_hash(current_chunk_values, GENERATOR_INDEX__FUNCTION_ARGS);\n                current_chunk_values = [0; ARGS_HASH_CHUNK_LENGTH];\n                current_chunk_index+=1;\n                index_inside_current_chunk = 0;\n            }\n        }\n        if index_inside_current_chunk > 0 {\n            chunks_hashes[current_chunk_index] = pedersen_hash(current_chunk_values, GENERATOR_INDEX__FUNCTION_ARGS);\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\n#[test]\nfn compute_var_args_hash() {\n    let mut input = ArgsHasher::new();\n    for i in 0..800 {\n        input.add(i as Field);\n    }\n    let hash = input.hash();\n    assert(hash == 0x05a1023fef839ac88731f49ae983e172c1b600a3c8f3393ad0ac25d819ac0f0f);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/hash.nr"},"114":{"source":"use dep::protocol_types::{address::AztecAddress, constants::GENERATOR_INDEX__INITIALIZATION_NULLIFIER, hash::pedersen_hash};\n\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, destroy_note}, note_getter::{get_note, view_notes},\n    note_interface::NoteInterface, note_viewer_options::NoteViewerOptions\n};\nuse crate::oracle::{nullifier_key::get_nullifier_secret_key, notes::check_nullifier_exists};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:struct\nstruct PrivateMutable<Note> {\n    context: Option<&mut PrivateContext>,\n    storage_slot: Field\n}\n// docs:end:struct\n\nimpl<T> Storage<T> for PrivateMutable<T> {}\n\nimpl<Note> PrivateMutable<Note> {\n    // docs:start:new\n    pub fn new(context: Context, storage_slot: Field) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Self { context: context.private, storage_slot }\n    }\n    // docs:end:new\n\n    // The following computation is leaky, in that it doesn't hide the storage slot that has been initialized, nor does it hide the contract address of this contract.\n    // When this initialization nullifier is emitted, an observer could do a dictionary or rainbow attack to learn the preimage of this nullifier to deduce the storage slot and contract address.\n    // For some applications, leaking the details that a particular state variable of a particular contract has been initialized will be unacceptable.\n    // Under such circumstances, such application developers might wish to _not_ use this state variable type.\n    // This is especially dangerous for initial assignment to elements of a `Map<AztecAddress, PrivateMutable>` type (for example), because the storage slot often also identifies an actor. e.g.\n    // the initial assignment to `my_map.at(msg.sender)` will leak: `msg.sender`, the fact that an element of `my_map` was assigned-to for the first time, and the contract_address.\n    // Note: subsequent nullification of this state variable, via the `replace` method will not be leaky, if the `compute_nullifier()` method of the underlying note is designed to ensure privacy.\n    // For example, if the `compute_nullifier()` method injects the secret key of a note owner into the computed nullifier's preimage.\n    pub fn compute_initialization_nullifier(self) -> Field {\n        pedersen_hash(\n            [self.storage_slot],\n            GENERATOR_INDEX__INITIALIZATION_NULLIFIER\n        )\n    }\n\n    // docs:start:is_initialized\n    unconstrained pub fn is_initialized(self) -> bool {\n        let nullifier = self.compute_initialization_nullifier();\n        check_nullifier_exists(nullifier)\n    }\n    // docs:end:is_initialized\n\n    // docs:start:initialize\n    pub fn initialize<N>(self, note: &mut Note, broadcast: bool) where Note: NoteInterface<N> {\n        let context = self.context.unwrap();\n\n        // Nullify the storage slot.\n        let nullifier = self.compute_initialization_nullifier();\n        context.push_new_nullifier(nullifier, 0);\n\n        create_note(context, self.storage_slot, note, broadcast);\n    }\n    // docs:end:initialize\n\n    // docs:start:replace\n    pub fn replace<N>(self, new_note: &mut Note, broadcast: bool) where Note: NoteInterface<N> {\n        let context = self.context.unwrap();\n        let prev_note: Note = get_note(context, self.storage_slot);\n\n        // Nullify previous note.\n        destroy_note(context, prev_note);\n\n        // Add replacement note.\n        create_note(context, self.storage_slot, new_note, broadcast);\n    }\n    // docs:end:replace\n\n    // docs:start:get_note\n    pub fn get_note<N>(self, broadcast: bool) -> Note where Note: NoteInterface<N> {\n        let context = self.context.unwrap();\n        let mut note = get_note(context, self.storage_slot);\n\n        // Nullify current note to make sure it's reading the latest note.\n        destroy_note(context, note);\n\n        // Add the same note again.\n        // Because a nonce is added to every note in the kernel, its nullifier will be different.\n        create_note(context, self.storage_slot, &mut note, broadcast);\n\n        note\n    }\n    // docs:end:get_note\n\n    // docs:start:view_note\n    unconstrained pub fn view_note<N>(self) -> Note where Note: NoteInterface<N> {\n        let mut options = NoteViewerOptions::new();\n        view_notes(self.storage_slot, options.set_limit(1))[0].unwrap()\n    }\n    // docs:end:view_note\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/state_vars/private_mutable.nr"},"115":{"source":"use crate::{\n    context::Context, history::public_storage::public_storage_historical_read,\n    oracle::{storage::{storage_read, storage_write}}, state_vars::storage::Storage\n};\nuse dep::protocol_types::{constants::INITIALIZATION_SLOT_SEPARATOR, traits::{Deserialize, Serialize}};\n\n// Just like PublicImmutable but with the ability to read from private functions.\nstruct SharedImmutable<T>{\n    context: Context,\n    storage_slot: Field,\n}\n\nimpl<T> Storage<T> for SharedImmutable<T> {}\n\nimpl<T> SharedImmutable<T> {\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Self { context, storage_slot }\n    }\n\n    // Intended to be only called once. \n    pub fn initialize<T_SERIALIZED_LEN>(self, value: T) where T: Serialize<T_SERIALIZED_LEN> {\n        assert(\n            self.context.private.is_none(), \"SharedImmutable can only be initialized from public functions\"\n        );\n        // TODO(#4738): Uncomment the following assert\n        // assert(\n        //     self.context.public.unwrap_unchecked().is_deployment(), \"SharedImmutable can only be initialized during contract deployment\"\n        // );\n\n        // We check that the struct is not yet initialized by checking if the initialization slot is 0\n        let initialization_slot = INITIALIZATION_SLOT_SEPARATOR + self.storage_slot;\n        let fields_read: [Field; 1] = storage_read(initialization_slot);\n        assert(fields_read[0] == 0, \"SharedImmutable already initialized\");\n\n        // We populate the initialization slot with a non-zero value to indicate that the struct is initialized\n        storage_write(initialization_slot, [0xdead]);\n\n        let fields_write = T::serialize(value);\n        storage_write(self.storage_slot, fields_write);\n    }\n\n    pub fn read_public<T_SERIALIZED_LEN>(self) -> T where T: Deserialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"Public read only supported in public functions\");\n        let fields = storage_read(self.storage_slot);\n        T::deserialize(fields)\n    }\n\n    pub fn read_private<T_SERIALIZED_LEN>(self) -> T  where T: Deserialize<T_SERIALIZED_LEN> {\n        assert(self.context.public.is_none(), \"Private read only supported in private functions\");\n        let private_context = self.context.private.unwrap();\n\n        let mut fields = [0; T_SERIALIZED_LEN];\n\n        for i in 0..fields.len() {\n            fields[i] =\n                public_storage_historical_read(\n                    (*private_context),\n                    self.storage_slot + i as Field,\n                    (*private_context).this_address()\n                );\n        }\n        T::deserialize(fields)\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/state_vars/shared_immutable.nr"},"116":{"source":"use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::protocol_types::{hash::pedersen_hash, traits::ToField};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:map\nstruct Map<K, V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<K, T> Storage<T> for Map<K, T> {}\n\nimpl<K, V> Map<K, V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map { context, storage_slot, state_var_constructor }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: K) -> V where K: ToField {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key.to_field()], 0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/state_vars/map.nr"},"120":{"source":"use crate::context::Context;\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse dep::protocol_types::traits::{Deserialize, Serialize};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:public_mutable_struct\nstruct PublicMutable<T> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:public_mutable_struct\n\nimpl<T> Storage<T> for PublicMutable<T> {}\n\nimpl<T> PublicMutable<T> {\n    // docs:start:public_mutable_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicMutable { context, storage_slot }\n    }\n    // docs:end:public_mutable_struct_new\n\n    // docs:start:public_mutable_struct_read\n    pub fn read<T_SERIALIZED_LEN>(self) -> T where T: Deserialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"PublicMutable reads only supported in public functions\");\n        let fields = storage_read(self.storage_slot);\n        T::deserialize(fields)\n    }\n    // docs:end:public_mutable_struct_read\n\n    // docs:start:public_mutable_struct_write\n    pub fn write<T_SERIALIZED_LEN>(self, value: T) where T: Serialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"PublicMutable writes only supported in public functions\");\n        let fields = T::serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_mutable_struct_write\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/state_vars/public_mutable.nr"},"121":{"source":"use crate::{context::Context, oracle::{storage::{storage_read, storage_write}}, state_vars::storage::Storage};\nuse dep::protocol_types::{constants::INITIALIZATION_SLOT_SEPARATOR, traits::{Deserialize, Serialize}};\n\n// Just like SharedImmutable but without the ability to read from private functions.\n// docs:start:public_immutable_struct\nstruct PublicImmutable<T> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:public_immutable_struct\n\nimpl<T> Storage<T> for PublicImmutable<T> {}\n\nimpl<T> PublicImmutable<T> {\n    // docs:start:public_immutable_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicImmutable { context, storage_slot }\n    }\n    // docs:end:public_immutable_struct_new\n\n    // docs:start:public_immutable_struct_write\n    pub fn initialize<T_SERIALIZED_LEN>(self, value: T) where T: Serialize<T_SERIALIZED_LEN> {\n        assert(\n            self.context.private.is_none(), \"PublicImmutable can only be initialized from public functions\"\n        );\n        // TODO(#4738): Uncomment the following assert\n        // assert(\n        //     self.context.public.unwrap_unchecked().is_deployment(), \"PublicImmutable can only be initialized during contract deployment\"\n        // );\n\n        // We check that the struct is not yet initialized by checking if the initialization slot is 0\n        let initialization_slot = INITIALIZATION_SLOT_SEPARATOR + self.storage_slot;\n        let fields_read: [Field; 1] = storage_read(initialization_slot);\n        assert(fields_read[0] == 0, \"PublicImmutable already initialized\");\n\n        // We populate the initialization slot with a non-zero value to indicate that the struct is initialized\n        storage_write(initialization_slot, [0xdead]);\n\n        let fields_write = T::serialize(value);\n        storage_write(self.storage_slot, fields_write);\n    }\n    // docs:end:public_immutable_struct_write\n\n    // docs:start:public_immutable_struct_read\n    pub fn read<T_SERIALIZED_LEN>(self) -> T where T: Deserialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"PublicImmutable reads only supported in public functions\");\n        let fields = storage_read(self.storage_slot);\n        T::deserialize(fields)\n    }\n    // docs:end:public_immutable_struct_read\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/aztec-nr/aztec/src/state_vars/public_immutable.nr"},"130":{"source":"use dep::std::cmp::Eq;\nuse crate::{\n    address::AztecAddress,\n    constants::{NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH, NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH},\n    traits::{Empty, Serialize, Deserialize}, grumpkin_point::GrumpkinPoint,\n    grumpkin_private_key::GrumpkinPrivateKey\n};\n\nstruct NullifierKeyValidationRequest {\n    public_key: GrumpkinPoint,\n    secret_key: GrumpkinPrivateKey,\n}\n\nimpl Eq for NullifierKeyValidationRequest {\n    fn eq(self, request: NullifierKeyValidationRequest) -> bool {\n        (request.public_key.eq(self.public_key))\n            & (request.secret_key.eq(self.secret_key))\n    }\n}\n\nimpl Empty for NullifierKeyValidationRequest {\n    fn empty() -> Self {\n        NullifierKeyValidationRequest {\n            public_key: GrumpkinPoint::zero(),\n            secret_key: GrumpkinPrivateKey::zero(),\n        }\n    }\n}\n\nimpl Serialize<NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH> for NullifierKeyValidationRequest {\n    fn serialize(self) -> [Field; NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH] {\n        [\n            self.public_key.x,\n            self.public_key.y,\n            self.secret_key.high,\n            self.secret_key.low,\n        ]\n    }\n}\n\nimpl Deserialize<NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH> for NullifierKeyValidationRequest {\n    fn deserialize(fields: [Field; NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH]) -> Self {\n        Self {\n            public_key: GrumpkinPoint::new(fields[0], fields[1]),\n            secret_key: GrumpkinPrivateKey::new(fields[2], fields[3]),\n        }\n    }\n}\n\nimpl NullifierKeyValidationRequest {\n    pub fn to_context(self, contract_address: AztecAddress) -> NullifierKeyValidationRequestContext {\n        NullifierKeyValidationRequestContext { public_key: self.public_key, secret_key: self.secret_key, contract_address }\n    }\n}\n\nstruct NullifierKeyValidationRequestContext {\n    public_key: GrumpkinPoint,\n    secret_key: GrumpkinPrivateKey,\n    contract_address: AztecAddress,\n}\n\nimpl Eq for NullifierKeyValidationRequestContext {\n    fn eq(self, request: NullifierKeyValidationRequestContext) -> bool {\n        (request.public_key.eq(self.public_key))\n            & (request.secret_key.eq(self.secret_key))\n            & (request.contract_address.eq(self.contract_address))\n    }\n}\n\nimpl Empty for NullifierKeyValidationRequestContext {\n    fn empty() -> Self {\n        NullifierKeyValidationRequestContext {\n            public_key: GrumpkinPoint::zero(),\n            secret_key: GrumpkinPrivateKey::zero(),\n            contract_address: AztecAddress::zero(),\n        }\n    }\n}\n\nimpl Serialize<NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH> for NullifierKeyValidationRequestContext {\n    fn serialize(self) -> [Field; NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH] {\n        [\n            self.public_key.x,\n            self.public_key.y,\n            self.secret_key.high,\n            self.secret_key.low,\n            self.contract_address.to_field(),\n        ]\n    }\n}\n\nimpl Deserialize<NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH> for NullifierKeyValidationRequestContext {\n    fn deserialize(fields: [Field; NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH]) -> Self {\n        Self {\n            public_key: GrumpkinPoint::new(fields[0], fields[1]),\n            secret_key: GrumpkinPrivateKey::new(fields[2], fields[3]),\n            contract_address: AztecAddress::from_field(fields[4]),\n        }\n    }\n}\n\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/nullifier_key_validation_request.nr"},"131":{"source":"use dep::std::cmp::Eq;\nuse crate::{\n    address::{AztecAddress, EthAddress}, abis::gas_fees::GasFees,\n    constants::{GENERATOR_INDEX__GLOBAL_VARIABLES, GLOBAL_VARIABLES_LENGTH},\n    traits::{Deserialize, Empty, Hash, Serialize}, utils::reader::Reader\n};\n\n// docs:start:global-variables\nstruct GlobalVariables {\n    chain_id : Field,\n    version : Field,\n    block_number : Field,\n    timestamp : u64,\n    coinbase : EthAddress,\n    fee_recipient : AztecAddress,\n    gas_fees : GasFees\n}\n// docs:end:global-variables\n\nimpl Serialize<GLOBAL_VARIABLES_LENGTH> for GlobalVariables {\n    fn serialize(self) -> [Field; GLOBAL_VARIABLES_LENGTH] {\n        let mut serialized: BoundedVec<Field, GLOBAL_VARIABLES_LENGTH> = BoundedVec::new();\n\n        serialized.push(self.chain_id);\n        serialized.push(self.version);\n        serialized.push(self.block_number);\n        serialized.push(self.timestamp as Field);\n        serialized.push(self.coinbase.to_field());\n        serialized.push(self.fee_recipient.to_field());\n        serialized.extend_from_array(self.gas_fees.serialize());\n\n        serialized.storage\n    }\n}\n\nimpl Deserialize<GLOBAL_VARIABLES_LENGTH> for GlobalVariables {\n    fn deserialize(serialized: [Field; GLOBAL_VARIABLES_LENGTH]) -> GlobalVariables {\n        let mut reader = Reader::new(serialized);\n        GlobalVariables {\n            chain_id: reader.read(),\n            version: reader.read(),\n            block_number: reader.read(),\n            timestamp: reader.read() as u64,\n            coinbase: EthAddress::from_field(reader.read()),\n            fee_recipient: AztecAddress::from_field(reader.read()),\n            gas_fees: reader.read_struct(GasFees::deserialize)\n        }\n    }\n}\n\nimpl Eq for GlobalVariables {\n    fn eq(self, other : GlobalVariables) -> bool {\n        (self.chain_id == other.chain_id) &\n        (self.version == other.version) &\n        (self.block_number == other.block_number) &\n        (self.timestamp == other.timestamp) &\n        (self.coinbase == other.coinbase) &\n        (self.fee_recipient == other.fee_recipient) &\n        (self.gas_fees == other.gas_fees) \n    }\n}\n\nimpl Empty for GlobalVariables {\n    fn empty() -> Self {\n        Self {\n            chain_id: 0,\n            version: 0,\n            block_number: 0,\n            timestamp: 0,\n            coinbase: EthAddress::empty(),\n            fee_recipient: AztecAddress::empty(),\n            gas_fees: GasFees::empty()\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let vars = GlobalVariables::empty();\n    let _serialized = vars.serialize();\n    let _deserialized = GlobalVariables::deserialize(_serialized);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/global_variables.nr"},"132":{"source":"use crate::{\n    abis::{function_data::FunctionData, private_circuit_public_inputs::PrivateCircuitPublicInputs},\n    address::AztecAddress,\n    constants::{GENERATOR_INDEX__CALL_STACK_ITEM, PRIVATE_CALL_STACK_ITEM_LENGTH}, hash::pedersen_hash,\n    traits::{Deserialize, Hash, Serialize, Empty}, utils::reader::Reader\n};\n\nstruct PrivateCallStackItem {\n    // This is the _actual_ contract address relating to where this function's code resides in the\n    // contract tree. Regardless of whether this is a call or delegatecall, this\n    // `contract_address` _does not change_. Amongst other things, it's used as a lookup for\n    // getting the correct code from the tree. There is a separate `storage_contract_address`\n    // within a CallStackItem which varies depending on whether this is a call or delegatecall.\n    contract_address: AztecAddress,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n}\n\nimpl Eq for PrivateCallStackItem {\n    fn eq(self, other: Self) -> bool {\n        self.contract_address.eq(other.contract_address) &\n        self.function_data.eq(other.function_data) &\n        self.public_inputs.eq(other.public_inputs)\n    }\n}\n\nimpl Serialize<PRIVATE_CALL_STACK_ITEM_LENGTH> for PrivateCallStackItem {\n    fn serialize(self) -> [Field; PRIVATE_CALL_STACK_ITEM_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CALL_STACK_ITEM_LENGTH> = BoundedVec::new();\n\n        fields.push(self.contract_address.to_field());\n        fields.extend_from_array(self.function_data.serialize());\n        fields.extend_from_array(self.public_inputs.serialize());\n\n        assert_eq(fields.len(), PRIVATE_CALL_STACK_ITEM_LENGTH);\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<PRIVATE_CALL_STACK_ITEM_LENGTH> for PrivateCallStackItem {\n    fn deserialize(serialized: [Field; PRIVATE_CALL_STACK_ITEM_LENGTH]) -> Self {\n        // TODO(#4390): This should accept a reader ^ to avoid copying data.\n        let mut reader = Reader::new(serialized);\n\n        let item = Self {\n            contract_address: reader.read_struct(AztecAddress::deserialize),\n            function_data: reader.read_struct(FunctionData::deserialize),\n            public_inputs: reader.read_struct(PrivateCircuitPublicInputs::deserialize),\n        };\n\n        reader.finish();\n        item\n    }\n}\n\nimpl Hash for PrivateCallStackItem {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\nimpl Empty for PrivateCallStackItem {\n    fn empty() -> Self {\n        PrivateCallStackItem {\n            contract_address: AztecAddress::empty(),\n            function_data: FunctionData::empty(),\n            public_inputs: PrivateCircuitPublicInputs::empty(),\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let item = PrivateCallStackItem::empty();\n    let serialized = item.serialize();\n    let deserialized = PrivateCallStackItem::deserialize(serialized);\n    assert(item.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let mut item = PrivateCallStackItem::empty();\n    item.function_data.is_private = true;\n    let hash = item.hash();\n\n    // Value from private_call_stack_item.test.ts \"computes empty item hash\" test\n    let test_data_empty_hash = 0x243b1b69ea529d158803cc7a16b52293c5e5f2a1859337e3f69e4b20f55c6fb6;\n    assert_eq(hash, test_data_empty_hash);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/private_call_stack_item.nr"},"134":{"source":"use crate::{\n    abis::function_selector::FunctionSelector, address::{EthAddress, AztecAddress},\n    constants::GAS_LENGTH, hash::pedersen_hash, traits::{Deserialize, Hash, Serialize, Empty},\n    abis::side_effect::Ordered, utils::reader::Reader\n};\n\nstruct Gas {\n    da_gas: u32,\n    l1_gas: u32,\n    l2_gas: u32,\n}\n\nimpl Gas {\n    pub fn new(da_gas: u32, l1_gas: u32, l2_gas: u32) -> Self {\n        Self { da_gas, l1_gas, l2_gas }\n    }\n\n    fn add(self, other: Gas) -> Self {\n        Gas::new(\n            self.da_gas + other.da_gas,\n            self.l1_gas + other.l1_gas,\n            self.l2_gas + other.l2_gas\n        )\n    }\n\n    fn sub(self, other: Gas) -> Self {\n        Gas::new(\n            self.da_gas - other.da_gas,\n            self.l1_gas - other.l1_gas,\n            self.l2_gas - other.l2_gas\n        )\n    }\n}\n\nimpl Serialize<GAS_LENGTH> for Gas {\n    fn serialize(self) -> [Field; GAS_LENGTH] {\n        [self.da_gas as Field, self.l1_gas as Field, self.l2_gas as Field]\n    }\n}\n\nimpl Deserialize<GAS_LENGTH> for Gas {\n    fn deserialize(serialized: [Field; GAS_LENGTH]) -> Gas {\n        Gas::new(serialized[0] as u32, serialized[1] as u32, serialized[2] as u32)\n    }\n}\n\nimpl Eq for Gas {\n    fn eq(self, other : Gas) -> bool {\n        (self.da_gas == other.da_gas) & (self.l1_gas == other.l1_gas) & (self.l2_gas == other.l2_gas)\n    }\n}\n\nimpl Empty for Gas {\n    fn empty() -> Self {\n        Gas::new(0, 0, 0)\n    }\n}\n\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/gas.nr"},"136":{"source":"use crate::{\n    abis::function_selector::FunctionSelector, address::{EthAddress, AztecAddress}, abis::gas::Gas,\n    constants::{GAS_SETTINGS_LENGTH, DIMENSION_GAS_SETTINGS_LENGTH}, hash::pedersen_hash,\n    traits::{Deserialize, Hash, Serialize, Empty}, abis::side_effect::Ordered, utils::reader::Reader\n};\n\nstruct GasSettings {\n    da: DimensionGasSettings,\n    l1: DimensionGasSettings,\n    l2: DimensionGasSettings,\n    inclusion_fee: Field,\n}\n\nimpl GasSettings {\n    fn new(\n        da: DimensionGasSettings,\n        l1: DimensionGasSettings,\n        l2: DimensionGasSettings,\n        inclusion_fee: Field\n    ) -> Self {\n        Self { da, l1, l2, inclusion_fee }\n    }\n\n    fn get_gas_limits(self) -> Gas {\n        Gas { da_gas: self.da.gas_limit, l1_gas: self.l1.gas_limit, l2_gas: self.l2.gas_limit }\n    }\n}\n\nimpl Eq for GasSettings {\n    fn eq(self, other: Self) -> bool {\n        (self.da == other.da) & (self.l1 == other.l1) & (self.l2 == other.l2) & (self.inclusion_fee == other.inclusion_fee)\n    }\n}\n\nimpl Empty for GasSettings {\n    fn empty() -> Self {\n        GasSettings::new(\n            DimensionGasSettings::empty(),\n            DimensionGasSettings::empty(),\n            DimensionGasSettings::empty(),\n            0,\n        )\n    }\n}\n\nimpl Serialize<GAS_SETTINGS_LENGTH> for GasSettings {\n    fn serialize(self) -> [Field; GAS_SETTINGS_LENGTH] {\n        let mut serialized: BoundedVec<Field, GAS_SETTINGS_LENGTH> = BoundedVec::new();\n\n        serialized.extend_from_array(self.da.serialize());\n        serialized.extend_from_array(self.l1.serialize());\n        serialized.extend_from_array(self.l2.serialize());\n        serialized.push(self.inclusion_fee);\n    \n        serialized.storage\n    }\n}\n\nimpl Deserialize<GAS_SETTINGS_LENGTH> for GasSettings {\n    fn deserialize(serialized: [Field; GAS_SETTINGS_LENGTH]) -> GasSettings {\n        let mut reader = Reader::new(serialized);\n        GasSettings {\n            da: reader.read_struct(DimensionGasSettings::deserialize),\n            l1: reader.read_struct(DimensionGasSettings::deserialize),\n            l2: reader.read_struct(DimensionGasSettings::deserialize),\n            inclusion_fee: reader.read(),\n        }\n    }\n}\n\nstruct DimensionGasSettings {\n    gas_limit: u32,\n    teardown_gas_limit: u32,\n    max_fee_per_gas: Field,\n}\n\nimpl DimensionGasSettings {\n    pub fn new(gas_limit: u32, teardown_gas_limit: u32, max_fee_per_gas: Field) -> Self {\n        Self { gas_limit, teardown_gas_limit, max_fee_per_gas }\n    }\n}\n\nimpl Eq for DimensionGasSettings {\n    fn eq(self, other: Self) -> bool {\n        (self.gas_limit == other.gas_limit) & (self.teardown_gas_limit == other.teardown_gas_limit) & (self.max_fee_per_gas == other.max_fee_per_gas)\n    }\n\n}\n\nimpl Serialize<DIMENSION_GAS_SETTINGS_LENGTH> for DimensionGasSettings {\n    fn serialize(self) -> [Field; DIMENSION_GAS_SETTINGS_LENGTH] {\n        [\n            self.gas_limit as Field,\n            self.teardown_gas_limit as Field,\n            self.max_fee_per_gas,\n        ]\n    }\n}\n\nimpl Deserialize<DIMENSION_GAS_SETTINGS_LENGTH> for DimensionGasSettings {\n    fn deserialize(serialized: [Field; DIMENSION_GAS_SETTINGS_LENGTH]) -> DimensionGasSettings {\n        DimensionGasSettings::new(serialized[0] as u32, serialized[1] as u32, serialized[2])\n    }\n}\n\nimpl Empty for DimensionGasSettings {\n    fn empty() -> Self {\n        DimensionGasSettings::new(0,0,0)\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/gas_settings.nr"},"137":{"source":"use crate::{\n    abis::{\n    call_context::CallContext, max_block_number::MaxBlockNumber,\n    nullifier_key_validation_request::NullifierKeyValidationRequest, read_request::ReadRequest,\n    side_effect::{SideEffect, SideEffectLinkedToNoteHash}\n},\n    constants::{\n    MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_READ_REQUESTS_PER_CALL,\n    MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL, MAX_NEW_NOTE_HASHES_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL, MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS\n},\n    header::Header, hash::pedersen_hash, messaging::l2_to_l1_message::L2ToL1Message,\n    traits::{Deserialize, Hash, Serialize, Empty}, utils::reader::Reader\n};\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n\n    args_hash: Field,\n    returns_hash: Field,\n\n    min_revertible_side_effect_counter: u32,\n\n    max_block_number: MaxBlockNumber,\n\n    note_hash_read_requests: [SideEffect; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    nullifier_read_requests: [ReadRequest; MAX_NULLIFIER_READ_REQUESTS_PER_CALL],\n    nullifier_key_validation_requests: [NullifierKeyValidationRequest; MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL],\n\n    new_note_hashes: [SideEffect; MAX_NEW_NOTE_HASHES_PER_CALL],\n    new_nullifiers: [SideEffectLinkedToNoteHash; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack_hashes: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack_hashes: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [L2ToL1Message; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n\n    start_side_effect_counter : u32,\n    end_side_effect_counter : u32,\n    encrypted_logs_hash: Field,\n    unencrypted_logs_hash: Field,\n\n    // Here so that the gas cost of this request can be measured by circuits, without actually needing to feed in the\n    // variable-length data.\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    // Note: The following 2 values are not redundant to the values in self.historical_header.global_variables because\n    // they can be different in case of a protocol upgrade. In such a situation we could be using header from a block\n    // before the upgrade took place but be using the updated protocol to execute and prove the transaction.\n    chain_id: Field,\n    version: Field,\n}\n\nimpl Eq for PrivateCircuitPublicInputs {\n    fn eq(self, other: Self) -> bool {\n        self.call_context.eq(other.call_context) &\n        self.args_hash.eq(other.args_hash) &\n        (self.returns_hash == other.returns_hash) &\n        (self.max_block_number == other.max_block_number) &\n        (self.note_hash_read_requests == other.note_hash_read_requests) &\n        (self.nullifier_read_requests == other.nullifier_read_requests) &\n        (self.nullifier_key_validation_requests == other.nullifier_key_validation_requests) &\n        (self.new_note_hashes == other.new_note_hashes) &\n        (self.new_nullifiers == other.new_nullifiers) &\n        (self.private_call_stack_hashes == other.private_call_stack_hashes) &\n        (self.public_call_stack_hashes == other.public_call_stack_hashes) &\n        (self.new_l2_to_l1_msgs == other.new_l2_to_l1_msgs) &\n        (self.start_side_effect_counter == other.start_side_effect_counter) &\n        (self.end_side_effect_counter == other.end_side_effect_counter) &\n        (self.encrypted_logs_hash == other.encrypted_logs_hash) &\n        (self.unencrypted_logs_hash == other.unencrypted_logs_hash) &\n        (self.encrypted_log_preimages_length == other.encrypted_log_preimages_length) &\n        (self.unencrypted_log_preimages_length == other.unencrypted_log_preimages_length) &\n        self.historical_header.eq(other.historical_header) &\n        self.chain_id.eq(other.chain_id) &\n        self.version.eq(other.version)\n    }\n}\n\nimpl Serialize<PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PrivateCircuitPublicInputs {\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new();\n        fields.extend_from_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push(self.returns_hash);\n\n        fields.push(self.min_revertible_side_effect_counter as Field);\n\n        fields.extend_from_array(self.max_block_number.serialize());\n\n        for i in 0..MAX_NOTE_HASH_READ_REQUESTS_PER_CALL{\n            fields.extend_from_array(self.note_hash_read_requests[i].serialize());\n        }\n        for i in 0..MAX_NULLIFIER_READ_REQUESTS_PER_CALL{\n            fields.extend_from_array(self.nullifier_read_requests[i].serialize());\n        }\n        for i in 0..MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL{\n            fields.extend_from_array(self.nullifier_key_validation_requests[i].serialize());\n        }\n        for i in 0..MAX_NEW_NOTE_HASHES_PER_CALL{\n            fields.extend_from_array(self.new_note_hashes[i].serialize());\n        }\n        for i in 0..MAX_NEW_NULLIFIERS_PER_CALL{\n            fields.extend_from_array(self.new_nullifiers[i].serialize());\n        }\n        fields.extend_from_array(self.private_call_stack_hashes);\n        fields.extend_from_array(self.public_call_stack_hashes);\n        for i in 0..MAX_NEW_L2_TO_L1_MSGS_PER_CALL {\n            fields.extend_from_array(self.new_l2_to_l1_msgs[i].serialize());\n        }\n        fields.push(self.start_side_effect_counter as Field);\n        fields.push(self.end_side_effect_counter as Field);\n        fields.push(self.encrypted_logs_hash);\n        fields.push(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.extend_from_array(self.historical_header.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        assert_eq(fields.len(), PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH);\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PrivateCircuitPublicInputs {\n    fn deserialize(serialized: [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH]) -> Self {\n        // TODO(#4390): This should accept a reader ^ to avoid copying data.\n        let mut reader = Reader::new(serialized);\n        let inputs = Self {\n            call_context: reader.read_struct(CallContext::deserialize),\n            args_hash: reader.read(),\n            returns_hash: reader.read(),\n            min_revertible_side_effect_counter: reader.read() as u32,\n            max_block_number: reader.read_struct(MaxBlockNumber::deserialize),\n            note_hash_read_requests: reader.read_struct_array(SideEffect::deserialize, [SideEffect::empty(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL]),\n            nullifier_read_requests: reader.read_struct_array(ReadRequest::deserialize, [ReadRequest::empty(); MAX_NULLIFIER_READ_REQUESTS_PER_CALL]),\n            nullifier_key_validation_requests: reader.read_struct_array(NullifierKeyValidationRequest::deserialize, [NullifierKeyValidationRequest::empty(); MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL]),\n            new_note_hashes: reader.read_struct_array(SideEffect::deserialize, [SideEffect::empty(); MAX_NEW_NOTE_HASHES_PER_CALL]),\n            new_nullifiers: reader.read_struct_array(SideEffectLinkedToNoteHash::deserialize, [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL]),\n            private_call_stack_hashes: reader.read_array([0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL]),\n            public_call_stack_hashes: reader.read_array([0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL]),\n            new_l2_to_l1_msgs: reader.read_struct_array(L2ToL1Message::deserialize, [L2ToL1Message::empty(); MAX_NEW_L2_TO_L1_MSGS_PER_CALL]),\n            start_side_effect_counter: reader.read() as u32,\n            end_side_effect_counter: reader.read() as u32,\n            encrypted_logs_hash: reader.read() as Field,\n            unencrypted_logs_hash: reader.read() as Field,\n            encrypted_log_preimages_length: reader.read(),\n            unencrypted_log_preimages_length: reader.read(),\n            historical_header: reader.read_struct(Header::deserialize),\n            chain_id: reader.read(),\n            version: reader.read(),\n        };\n\n        reader.finish();\n        inputs\n    }\n}\n\nimpl Hash for PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n}\n\n\nimpl Empty for PrivateCircuitPublicInputs {\n    fn empty() -> Self {\n        PrivateCircuitPublicInputs {\n            call_context: CallContext::empty(),\n            args_hash: 0,\n            returns_hash: 0,\n            min_revertible_side_effect_counter: 0 as u32,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: [SideEffect::empty(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n            nullifier_read_requests: [ReadRequest::empty(); MAX_NULLIFIER_READ_REQUESTS_PER_CALL],\n            nullifier_key_validation_requests: [NullifierKeyValidationRequest::empty(); MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL],\n            new_note_hashes: [SideEffect::empty(); MAX_NEW_NOTE_HASHES_PER_CALL],\n            new_nullifiers: [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL],\n            private_call_stack_hashes: [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n            public_call_stack_hashes: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n            new_l2_to_l1_msgs: [L2ToL1Message::empty(); MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n            start_side_effect_counter : 0 as u32,\n            end_side_effect_counter : 0 as u32,\n            encrypted_logs_hash: 0,\n            unencrypted_logs_hash: 0,\n            encrypted_log_preimages_length: 0,\n            unencrypted_log_preimages_length: 0,\n            historical_header: Header::empty(),\n            chain_id: 0,\n            version: 0,\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let pcpi = PrivateCircuitPublicInputs::empty();\n    let serialized = pcpi.serialize();\n    let deserialized = PrivateCircuitPublicInputs::deserialize(serialized);\n    assert(pcpi.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let inputs = PrivateCircuitPublicInputs::empty();\n    let hash = inputs.hash();\n\n    // Value from private_circuit_public_inputs.test.ts \"computes empty item hash\" test\n    let test_data_empty_hash = 0x02e09d8c4897d560bd4caf05ab45fa22e1d4a251bf5b5e0448310a7f40f7a0b8;\n    assert_eq(hash, test_data_empty_hash);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/private_circuit_public_inputs.nr"},"138":{"source":"use crate::{\n    address::AztecAddress, constants::GENERATOR_INDEX__SIDE_EFFECT,\n    traits::{Empty, Hash, Serialize, Deserialize}\n};\nuse dep::std::cmp::Eq;\n\nglobal SIDE_EFFECT_SERIALIZED_LEN = 2;\n\ntrait Ordered {\n    fn counter(self) -> u32;\n}\n\ntrait OrderedValue<T> where T: Eq {\n    fn value(self) -> T;\n    fn counter(self) -> u32;\n}\n\ntrait ContractScopedOrderedValue<T> where T: Eq {\n    fn value(self) -> T;\n    fn counter(self) -> u32;\n    fn contract_address(self) -> AztecAddress;\n}\n\nstruct SideEffect {\n    value: Field,\n    counter: u32,\n}\n\nimpl Ordered for SideEffect {\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl OrderedValue<Field> for SideEffect {\n    fn value(self) -> Field {\n        self.value\n    }\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl Eq for SideEffect {\n    fn eq(self, side_effect: SideEffect) -> bool {\n        (self.value == side_effect.value)\n        & (self.counter == side_effect.counter)\n    }\n}\n\nimpl Empty for SideEffect {\n    fn empty() -> Self {\n        SideEffect {\n            value: 0,\n            counter: 0,\n        }\n    }\n}\n\nimpl Hash for SideEffect {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_hash_with_separator(\n            self.serialize() , GENERATOR_INDEX__SIDE_EFFECT)\n    }\n}\n\nimpl Serialize<SIDE_EFFECT_SERIALIZED_LEN> for SideEffect {\n    fn serialize(self) -> [Field; SIDE_EFFECT_SERIALIZED_LEN] {\n        [self.value, self.counter as Field]\n    }\n}\n\nimpl Deserialize<SIDE_EFFECT_SERIALIZED_LEN> for SideEffect {\n    fn deserialize(values: [Field; SIDE_EFFECT_SERIALIZED_LEN]) -> Self {\n        Self {\n            value: values[0],\n            counter: values[1] as u32,\n        }\n    }\n}\n\nstruct SideEffectLinkedToNoteHash{\n    value: Field,\n    note_hash: Field,\n    counter: u32,\n}\n\nimpl Ordered for SideEffectLinkedToNoteHash {\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl OrderedValue<Field> for SideEffectLinkedToNoteHash {\n    fn value(self) -> Field {\n        self.value\n    }\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl Eq for SideEffectLinkedToNoteHash {\n    fn eq(self, side_effect: SideEffectLinkedToNoteHash) -> bool {\n        (self.value == side_effect.value)\n            & (self.note_hash == side_effect.note_hash) \n            & (self.counter == side_effect.counter)\n    }\n}\n\nimpl Empty for SideEffectLinkedToNoteHash {\n    fn empty() -> Self {\n        SideEffectLinkedToNoteHash {\n            value: 0,\n            note_hash: 0,\n            counter: 0,\n        }\n    }\n}\n\nimpl Hash for SideEffectLinkedToNoteHash {\n    fn hash(self) -> Field {\n        dep::std::hash::pedersen_hash_with_separator(\n            self.serialize(),\n        GENERATOR_INDEX__SIDE_EFFECT)\n    }\n}\n\nimpl Serialize<3> for SideEffectLinkedToNoteHash {\n    fn serialize(self) -> [Field; 3] {\n        [self.value, self.note_hash, self.counter as Field]\n    }\n}\n\nimpl Deserialize<3> for SideEffectLinkedToNoteHash {\n    fn deserialize(values: [Field; 3]) -> Self {\n        Self {\n            value: values[0],\n            note_hash: values[1],\n            counter: values[2] as u32,\n        }\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/side_effect.nr"},"139":{"source":"use crate::{\n    abis::function_selector::FunctionSelector, address::{EthAddress, AztecAddress},\n    constants::{CALL_CONTEXT_LENGTH, GENERATOR_INDEX__CALL_CONTEXT}, hash::pedersen_hash,\n    traits::{Deserialize, Hash, Serialize, Empty}, abis::side_effect::Ordered,\n    abis::{gas_settings::GasSettings, gas::Gas}, utils::reader::Reader\n};\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : AztecAddress,\n    storage_contract_address : AztecAddress,\n    portal_contract_address : EthAddress,\n    function_selector : FunctionSelector,\n    gas_left: Gas,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n\n    side_effect_counter : u32,\n\n    gas_settings: GasSettings,\n    transaction_fee: Field,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn assert_is_zero(self) {\n        let serialized: [Field; CALL_CONTEXT_LENGTH] = self.serialize();\n\n        for i in 0..CALL_CONTEXT_LENGTH {\n            assert(serialized[i] == 0);\n        }\n    }\n}\n\nimpl Eq for CallContext {\n    fn eq(self, other: CallContext) -> bool {\n        self.serialize() == other.serialize()\n    }\n}\n\nimpl Hash for CallContext {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\nimpl Serialize<CALL_CONTEXT_LENGTH> for CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        let mut serialized: BoundedVec<Field, CALL_CONTEXT_LENGTH> = BoundedVec::new();\n\n        serialized.push(self.msg_sender.to_field());\n        serialized.push(self.storage_contract_address.to_field());\n        serialized.push(self.portal_contract_address.to_field());\n        serialized.push(self.function_selector.to_field());\n        serialized.extend_from_array(self.gas_left.serialize());\n        serialized.push(self.is_delegate_call as Field);\n        serialized.push(self.is_static_call as Field);\n        serialized.push(self.side_effect_counter as Field);\n        serialized.extend_from_array(self.gas_settings.serialize());\n        serialized.push(self.transaction_fee);\n    \n        serialized.storage\n    }\n}\n\nimpl Deserialize<CALL_CONTEXT_LENGTH> for CallContext {\n    fn deserialize(serialized: [Field; CALL_CONTEXT_LENGTH]) -> CallContext {\n        let mut reader = Reader::new(serialized);\n        CallContext {\n            msg_sender: AztecAddress::from_field(reader.read()),\n            storage_contract_address: AztecAddress::from_field(reader.read()),\n            portal_contract_address: EthAddress::from_field(reader.read()),\n            function_selector: FunctionSelector::from_field(reader.read()),\n            gas_left: reader.read_struct(Gas::deserialize),\n            is_delegate_call: reader.read() as bool,\n            is_static_call: reader.read() as bool,\n            side_effect_counter: reader.read() as u32,\n            gas_settings: reader.read_struct(GasSettings::deserialize),\n            transaction_fee: reader.read(),\n        }\n    }\n}\n\nimpl Empty for CallContext {\n    fn empty() -> Self {\n        CallContext {\n            msg_sender: AztecAddress::empty(),\n            storage_contract_address: AztecAddress::empty(),\n            portal_contract_address: EthAddress::empty(),\n            function_selector: FunctionSelector::empty(),\n            gas_left: Gas::empty(),\n            is_delegate_call: false,\n            is_static_call: false,\n            side_effect_counter: 0,\n            gas_settings: GasSettings::empty(),\n            transaction_fee: 0,\n        }\n    }\n}\n\n#[test]\nfn serialize_deserialize_of_empty() {\n    let context = CallContext::empty();\n    let serialized = context.serialize();\n    let deserialized = CallContext::deserialize(serialized);\n    assert(context.eq(deserialized));\n}\n\n#[test]\nfn assert_is_zero() {\n    let context = CallContext::empty();\n    context.assert_is_zero();\n}\n\n#[test(should_fail)]\nfn not_zero_assert_is_zero() {\n    let mut context = CallContext::empty();\n    context.is_delegate_call = true;\n    context.assert_is_zero();\n}\n\n#[test]\nfn test_eq() {\n    let mut context1 = CallContext::empty();\n    let mut context2 = CallContext::empty();\n\n    context1.is_delegate_call = true;\n    context2.is_delegate_call = true;\n\n    let address: AztecAddress = AztecAddress::from_field(69420);\n    context1.msg_sender = address;\n    context2.msg_sender = address;\n\n    assert(context1.eq(context2));\n}\n\n#[test(should_fail)]\nfn not_eq_test_eq() {\n    let mut context1 = CallContext::empty();\n    let mut context2 = CallContext::empty();\n\n    context1.is_delegate_call = true;\n    context2.is_delegate_call = false;\n\n    let address1: AztecAddress = AztecAddress::from_field(69420);\n    let address2: AztecAddress = AztecAddress::from_field(42069);\n\n    context1.msg_sender = address1;\n    context2.msg_sender = address2;\n\n    assert(context1.eq(context2));\n}\n\n#[test]\nfn hash_smoke() {\n    let context = CallContext::empty();\n    let _hashed = context.hash();\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/call_context.nr"},"140":{"source":"use crate::{\n    abis::{\n    call_context::CallContext, read_request::ReadRequest,\n    side_effect::{SideEffect, SideEffectLinkedToNoteHash}, gas::Gas\n},\n    address::AztecAddress,\n    constants::{\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL, MAX_NEW_NULLIFIERS_PER_CALL, MAX_NEW_NOTE_HASHES_PER_CALL,\n    MAX_NULLIFIER_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH\n},\n    contrakt::{storage_read::StorageRead, storage_update_request::StorageUpdateRequest},\n    hash::pedersen_hash, header::Header, messaging::l2_to_l1_message::L2ToL1Message,\n    traits::{Hash, Serialize, Deserialize, Empty}, utils::reader::Reader\n};\n\nstruct PublicCircuitPublicInputs{\n    call_context: CallContext,\n\n    args_hash: Field,\n    returns_hash: Field,\n\n    nullifier_read_requests: [ReadRequest; MAX_NULLIFIER_READ_REQUESTS_PER_CALL],\n    nullifier_non_existent_read_requests: [ReadRequest; MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL],\n    contract_storage_update_requests: [StorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_reads: [StorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n\n    // todo: add sideeffect ranges for the input to these hashes\n    public_call_stack_hashes: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_note_hashes: [SideEffect; MAX_NEW_NOTE_HASHES_PER_CALL],\n    new_nullifiers: [SideEffectLinkedToNoteHash; MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [L2ToL1Message; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n\n    start_side_effect_counter: u32,\n    end_side_effect_counter: u32,\n\n    unencrypted_logs_hash: Field,\n\n    // Here so that the gas cost of this request can be measured by circuits, without actually needing to feed in the\n    // variable-length data.\n    unencrypted_log_preimages_length: Field,\n\n    // Header of a block whose state is used during public execution. Set by sequencer to be a header of a block\n    // previous to the one in which the tx is included.\n    historical_header: Header,\n\n    prover_address: AztecAddress,\n\n    revert_code: u8,\n    \n    // gas left after execution is completed\n    gas_left: Gas,\n}\n\nimpl Eq for PublicCircuitPublicInputs {\n    fn eq(self, other: Self) -> bool {\n        self.serialize() == other.serialize()\n    }\n}\n\nimpl Serialize<PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PublicCircuitPublicInputs {\n    fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new();\n        fields.extend_from_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push(self.returns_hash);\n        for i in 0..MAX_NULLIFIER_READ_REQUESTS_PER_CALL {\n            fields.extend_from_array(self.nullifier_read_requests[i].serialize());\n        }\n        for i in 0..MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL {\n            fields.extend_from_array(self.nullifier_non_existent_read_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.extend_from_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.extend_from_array(self.contract_storage_reads[i].serialize());\n        }\n        fields.extend_from_array(self.public_call_stack_hashes);\n\n        for i in 0..MAX_NEW_NOTE_HASHES_PER_CALL {\n            fields.extend_from_array(self.new_note_hashes[i].serialize());\n        }\n        for i in 0..MAX_NEW_NULLIFIERS_PER_CALL {\n            fields.extend_from_array(self.new_nullifiers[i].serialize());\n        }\n        for i in 0..MAX_NEW_L2_TO_L1_MSGS_PER_CALL {\n            fields.extend_from_array(self.new_l2_to_l1_msgs[i].serialize());\n        }\n\n        fields.push(self.start_side_effect_counter as Field);\n        fields.push(self.end_side_effect_counter as Field);\n\n        fields.push(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.extend_from_array(self.historical_header.serialize());\n        fields.push(self.prover_address.to_field());\n        fields.push(self.revert_code as Field);\n        fields.extend_from_array(self.gas_left.serialize());\n        fields.storage\n    }\n}\n\nimpl Deserialize<PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> for PublicCircuitPublicInputs {\n    fn deserialize(serialized: [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH]) -> Self {\n        // TODO(#4390): This should accept a reader ^ to avoid copying data.\n        let mut reader = Reader::new(serialized);\n        let inputs = PublicCircuitPublicInputs {\n            call_context: reader.read_struct(CallContext::deserialize),\n            args_hash: reader.read(),\n            returns_hash: reader.read(),\n            nullifier_read_requests: reader.read_struct_array(ReadRequest::deserialize, [ReadRequest::empty(); MAX_NULLIFIER_READ_REQUESTS_PER_CALL]),\n            nullifier_non_existent_read_requests: reader.read_struct_array(ReadRequest::deserialize, [ReadRequest::empty(); MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL]),\n            contract_storage_update_requests: reader.read_struct_array(StorageUpdateRequest::deserialize, [StorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL]),\n            contract_storage_reads: reader.read_struct_array(StorageRead::deserialize, [StorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL]),\n            public_call_stack_hashes: reader.read_array([0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL]),\n            new_note_hashes: reader.read_struct_array(SideEffect::deserialize, [SideEffect::empty(); MAX_NEW_NOTE_HASHES_PER_CALL]),\n            new_nullifiers: reader.read_struct_array(SideEffectLinkedToNoteHash::deserialize, [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL]),\n            new_l2_to_l1_msgs: reader.read_struct_array(L2ToL1Message::deserialize, [L2ToL1Message::empty(); MAX_NEW_L2_TO_L1_MSGS_PER_CALL]),\n            start_side_effect_counter: reader.read() as u32,\n            end_side_effect_counter: reader.read() as u32,\n            unencrypted_logs_hash: reader.read() as Field,\n            unencrypted_log_preimages_length: reader.read(),\n            historical_header: reader.read_struct(Header::deserialize),\n            prover_address: reader.read_struct(AztecAddress::deserialize),\n            revert_code: reader.read() as u8,\n            gas_left: reader.read_struct(Gas::deserialize),\n        };\n\n        reader.finish();\n        inputs\n    }\n}\n\nimpl Hash for PublicCircuitPublicInputs {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n}\n\nimpl Empty for PublicCircuitPublicInputs {\n    fn empty() -> Self {\n        PublicCircuitPublicInputs {\n            call_context: CallContext::empty(),\n            args_hash: 0,\n            returns_hash: 0,\n            nullifier_read_requests: [ReadRequest::empty(); MAX_NULLIFIER_READ_REQUESTS_PER_CALL],\n            nullifier_non_existent_read_requests: [ReadRequest::empty(); MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL],\n            contract_storage_update_requests: [StorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n            contract_storage_reads: [StorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n            public_call_stack_hashes: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n            new_note_hashes: [SideEffect::empty(); MAX_NEW_NOTE_HASHES_PER_CALL],\n            new_nullifiers: [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL],\n            new_l2_to_l1_msgs: [L2ToL1Message::empty(); MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n            start_side_effect_counter: 0 as u32,\n            end_side_effect_counter: 0 as u32,\n            unencrypted_logs_hash: 0,\n            unencrypted_log_preimages_length: 0,\n            historical_header: Header::empty(),\n            prover_address: AztecAddress::zero(),\n            revert_code: 0 as u8,\n            gas_left: Gas::empty(),\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let pcpi = PublicCircuitPublicInputs::empty();\n    let serialized = pcpi.serialize();\n    let deserialized = PublicCircuitPublicInputs::deserialize(serialized);\n    assert(pcpi.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let inputs = PublicCircuitPublicInputs::empty();\n    let hash = inputs.hash();\n\n    // Value from public_circuit_public_inputs.test.ts \"computes empty item hash\" test\n    let test_data_empty_hash = 0x00147d3d2cde08ee1046bf73cb6664c2bdf11b43c5dca0e72f4137f354bdad25;\n    assert_eq(hash, test_data_empty_hash);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/public_circuit_public_inputs.nr"},"147":{"source":"global NULLIFIER_LEAF_PREIMAGE_LENGTH: u64 = 3;\n\nuse crate::{merkle_tree::leaf_preimage::{LeafPreimage, IndexedTreeLeafPreimage}, traits::{Empty, Hash}};\n\nstruct NullifierLeafPreimage {\n    nullifier : Field,\n    next_nullifier :Field,\n    next_index : u64,\n}\n\nimpl Empty for NullifierLeafPreimage {\n    fn empty() -> Self {\n        Self {\n            nullifier : 0,\n            next_nullifier : 0,\n            next_index : 0,\n        }\n    }\n}\n\nimpl Hash for NullifierLeafPreimage {\n    fn hash(self) -> Field {\n        if self.is_empty() {\n            0\n        } else {\n            dep::std::hash::pedersen_hash(self.serialize())\n        }\n    }\n}\n\nimpl LeafPreimage for NullifierLeafPreimage {\n    fn get_key(self) -> Field {\n        self.nullifier\n    }\n\n    fn as_leaf(self) -> Field {\n        self.hash()\n    }\n}\n\nimpl IndexedTreeLeafPreimage for NullifierLeafPreimage {\n    fn get_key(self) -> Field {\n        self.nullifier\n    }\n\n    fn get_next_key(self) -> Field {\n        self.next_nullifier\n    }\n\n    fn as_leaf(self) -> Field {\n        self.hash()\n    }\n}\n\nimpl NullifierLeafPreimage {\n    pub fn is_empty(self) -> bool {\n        (self.nullifier == 0) & (self.next_nullifier == 0) & (self.next_index == 0)\n    }\n\n    pub fn serialize(self) -> [Field; NULLIFIER_LEAF_PREIMAGE_LENGTH] {\n        [self.nullifier, self.next_nullifier, self.next_index as Field]\n    }\n\n    pub fn deserialize(fields: [Field; NULLIFIER_LEAF_PREIMAGE_LENGTH]) -> Self {\n        Self { nullifier: fields[0], next_nullifier: fields[1], next_index: fields[2] as u64 }\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/nullifier_leaf_preimage.nr"},"148":{"source":"use crate::abis::{function_data::FunctionData, public_circuit_public_inputs::PublicCircuitPublicInputs};\nuse crate::address::AztecAddress;\nuse crate::constants::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::traits::Hash;\n\nstruct PublicCallStackItem {\n    contract_address: AztecAddress,\n    public_inputs: PublicCircuitPublicInputs,\n    function_data: FunctionData,\n    // True if this call stack item represents a request to execute a function rather than a\n    // fulfilled execution. Used when enqueuing calls from private to public functions.\n    is_execution_request: bool,\n}\n\nimpl Hash for PublicCallStackItem {\n    fn hash(self) -> Field {\n        let item = if self.is_execution_request {\n            self.as_execution_request()\n        } else {\n            self\n        };\n\n        dep::std::hash::pedersen_hash_with_separator([\n            item.contract_address.to_field(),\n            item.function_data.hash(),\n            item.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\nimpl PublicCallStackItem {\n    fn as_execution_request(self) -> Self {\n        let public_inputs = self.public_inputs;\n        let mut request_public_inputs = PublicCircuitPublicInputs::empty();\n        request_public_inputs.call_context = public_inputs.call_context;\n        request_public_inputs.args_hash = public_inputs.args_hash;\n\n        let call_stack_item = PublicCallStackItem {\n            contract_address: self.contract_address,\n            function_data: self.function_data,\n            is_execution_request: true,\n            public_inputs: request_public_inputs\n        };\n        call_stack_item\n    }\n}\n\nmod tests {\n    use crate::{\n        abis::{\n        function_data::FunctionData, function_selector::FunctionSelector,\n        public_circuit_public_inputs::PublicCircuitPublicInputs,\n        public_call_stack_item::PublicCallStackItem, side_effect::SideEffect\n    },\n        address::AztecAddress, constants::GENERATOR_INDEX__CALL_STACK_ITEM, traits::Hash\n    };\n\n    #[test]\n    fn compute_call_stack_item_request_hash() {\n        let contract_address = AztecAddress::from_field(1);\n        let function_data = FunctionData { selector: FunctionSelector::from_u32(2), is_private: false };\n\n        let mut public_inputs = PublicCircuitPublicInputs::empty();\n        public_inputs.new_note_hashes[0] = SideEffect{\n            value: 1,\n            counter: 0,\n        };\n\n        let call_stack_item = PublicCallStackItem { contract_address, public_inputs, is_execution_request: true, function_data };\n\n        // Value from public_call_stack_item.test.ts \"Computes a callstack item request hash\" test\n        let test_data_call_stack_item_request_hash = 0x12c634ebadf4209e2def6cac0753f151422faf11237dc4f136bc17a84c8c2d76;\n        assert_eq(call_stack_item.hash(), test_data_call_stack_item_request_hash);\n    }\n\n    #[test]\n    fn compute_call_stack_item_hash() {\n        let contract_address = AztecAddress::from_field(1);\n        let function_data = FunctionData { selector: FunctionSelector::from_u32(2), is_private: false };\n\n        let mut public_inputs = PublicCircuitPublicInputs::empty();\n        public_inputs.new_note_hashes[0] = SideEffect{\n            value: 1,\n            counter: 0,\n        };\n\n        let call_stack_item = PublicCallStackItem { contract_address, public_inputs, is_execution_request: false, function_data };\n\n        // Value from public_call_stack_item.test.ts \"Computes a callstack item hash\" test\n        let test_data_call_stack_item_hash = 0x0864975afc9bec7eb7ec5b5608bbef648ec9afead1bbe986d0af148e3c944b9b;\n        assert_eq(call_stack_item.hash(), test_data_call_stack_item_hash);\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/public_call_stack_item.nr"},"155":{"source":"use crate::{\n    abis::function_selector::FunctionSelector,\n    constants::{GENERATOR_INDEX__FUNCTION_DATA, FUNCTION_DATA_LENGTH}, hash::pedersen_hash,\n    traits::{Serialize, Hash, Deserialize, Empty}\n};\n\nstruct FunctionData {\n    selector : FunctionSelector,\n    is_private : bool,\n}\n\nimpl Eq for FunctionData {\n    fn eq(self, other: Self) -> bool {\n        self.selector.eq(other.selector) &\n        self.is_private == other.is_private\n    }\n}\n\nimpl Serialize<FUNCTION_DATA_LENGTH> for FunctionData {\n    // A field is ~256 bits\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/3057): Since, function data can fit into a Field,\n    // This method will simply return a bit packed Field instead of hashing\n    fn serialize(self) -> [Field; FUNCTION_DATA_LENGTH] {\n        [\n            self.selector.to_field(),\n            self.is_private as Field,\n        ]\n    }\n}\n\nimpl Deserialize<FUNCTION_DATA_LENGTH> for FunctionData {\n    fn deserialize(serialized: [Field; FUNCTION_DATA_LENGTH]) -> Self {\n        Self {\n            selector: FunctionSelector::from_field(serialized[0]),\n            is_private: serialized[1] as bool,\n        }\n    }\n}\n\nimpl Hash for FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nimpl Empty for FunctionData {\n    fn empty() -> Self {\n        FunctionData {\n            selector: FunctionSelector::empty(),\n            is_private: false,\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let data = FunctionData::empty();\n    let serialized = data.serialize();\n    let deserialized = FunctionData::deserialize(serialized);\n    assert(data.eq(deserialized));\n}\n\n#[test]\nfn empty_hash() {\n    let data = FunctionData::empty();\n    let hash = data.hash();\n\n    // Value from function_data.test.ts \"computes empty item hash\" test\n    let test_data_empty_hash = 0x27b1d0839a5b23baf12a8d195b18ac288fcf401afb2f70b8a4b529ede5fa9fed;\n    assert_eq(hash, test_data_empty_hash);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/function_data.nr"},"160":{"source":"use crate::utils::field::field_from_bytes;\nuse dep::std::cmp::Eq;\nuse crate::traits::{Serialize, Deserialize, FromField, ToField, Empty};\n\nglobal SELECTOR_SIZE = 4;\n\nstruct FunctionSelector {\n    // 1st 4-bytes of abi-encoding of function.\n    inner: u32,\n}\n\nimpl Eq for FunctionSelector {\n    fn eq(self, function_selector: FunctionSelector) -> bool {\n        function_selector.inner == self.inner\n    }\n}\n\nimpl Serialize<1> for FunctionSelector {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.inner as Field]\n    }\n}\n\nimpl Deserialize<1> for FunctionSelector {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        Self {\n            inner: fields[0] as u32\n        }\n    }\n}\n\nimpl FromField for FunctionSelector {\n    fn from_field(field: Field) -> Self {\n        Self { inner: field as u32 }\n    }\n}\n\nimpl ToField for FunctionSelector {\n    fn to_field(self) -> Field {\n        self.inner as Field\n    }\n}\n\nimpl Empty for FunctionSelector {\n    fn empty() -> Self {\n        Self { inner: 0 as u32 }\n    }\n}\n\nimpl FunctionSelector {\n    pub fn from_u32(value: u32) -> Self {\n        Self { inner: value }\n    }\n\n    pub fn from_signature<N>(signature: str<N>) -> Self {\n        let bytes = signature.as_bytes();\n        let hash = dep::std::hash::keccak256(bytes, bytes.len() as u32);\n\n        let mut selector_be_bytes = [0; SELECTOR_SIZE];\n        for i in 0..SELECTOR_SIZE {\n            selector_be_bytes[i] = hash[i];\n        }\n\n        FunctionSelector::from_field(field_from_bytes(selector_be_bytes, true))\n    }\n\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/function_selector.nr"},"162":{"source":"use dep::std::cmp::Eq;\n\nstruct AppendOnlyTreeSnapshot {\n    root : Field,\n    // TODO(Alvaro) change this to a u64\n    next_available_leaf_index : u32\n}\n\nglobal APPEND_ONLY_TREE_SNAPSHOT_LENGTH: u64 = 2;\n\nimpl AppendOnlyTreeSnapshot {\n    pub fn serialize(self) -> [Field; APPEND_ONLY_TREE_SNAPSHOT_LENGTH] {\n        [self.root, self.next_available_leaf_index as Field]\n    }\n\n    pub fn deserialize(serialized: [Field; APPEND_ONLY_TREE_SNAPSHOT_LENGTH]) -> AppendOnlyTreeSnapshot {\n        AppendOnlyTreeSnapshot { root: serialized[0], next_available_leaf_index: serialized[1] as u32 }\n    }\n\n    pub fn zero() -> Self {\n        Self { root: 0, next_available_leaf_index: 0 }\n    }\n}\n\nimpl Eq for AppendOnlyTreeSnapshot {\n    fn eq(self, other : AppendOnlyTreeSnapshot) -> bool {\n        (self.root == other.root) & (self.next_available_leaf_index == other.next_available_leaf_index)\n    }\n}","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/append_only_tree_snapshot.nr"},"164":{"source":"use crate::{\n    abis::side_effect::{OrderedValue, ContractScopedOrderedValue},\n    traits::{Empty, Serialize, Deserialize}, address::AztecAddress\n};\nuse dep::std::cmp::Eq;\n\nglobal READ_REQUEST_SERIALIZED_LEN = 2;\nglobal READ_REQUEST_CONTEXT_SERIALIZED_LEN = 3;\n\nstruct ReadRequest {\n    value: Field,\n    counter: u32,\n}\n\nimpl OrderedValue<Field> for ReadRequest {\n    fn value(self) -> Field {\n        self.value\n    }\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl Eq for ReadRequest {\n    fn eq(self, read_request: ReadRequest) -> bool {\n        (self.value == read_request.value)\n        & (self.counter == read_request.counter)\n    }\n}\n\nimpl Empty for ReadRequest {\n    fn empty() -> Self {\n        ReadRequest {\n            value: 0,\n            counter: 0,\n        }\n    }\n}\n\nimpl Serialize<READ_REQUEST_SERIALIZED_LEN> for ReadRequest {\n    fn serialize(self) -> [Field; READ_REQUEST_SERIALIZED_LEN] {\n        [self.value, self.counter as Field]\n    }\n}\n\nimpl Deserialize<READ_REQUEST_SERIALIZED_LEN> for ReadRequest {\n    fn deserialize(values: [Field; READ_REQUEST_SERIALIZED_LEN]) -> Self {\n        Self {\n            value: values[0],\n            counter: values[1] as u32,\n        }\n    }\n}\n\nimpl ReadRequest {\n    pub fn to_context(self, contract_address: AztecAddress) -> ReadRequestContext {\n        ReadRequestContext { value: self.value, counter: self.counter, contract_address }\n    }\n}\n\nstruct ReadRequestContext {\n    value: Field,\n    counter: u32,\n    contract_address: AztecAddress,\n}\n\nimpl OrderedValue<Field> for ReadRequestContext {\n    fn value(self) -> Field {\n        self.value\n    }\n    fn counter(self) -> u32 {\n        self.counter\n    }\n}\n\nimpl ContractScopedOrderedValue<Field> for ReadRequestContext {\n    fn value(self) -> Field {\n        self.value\n    }\n    fn counter(self) -> u32 {\n        self.counter\n    }\n    fn contract_address(self) -> AztecAddress {\n        self.contract_address\n    }\n}\n\nimpl Eq for ReadRequestContext {\n    fn eq(self, read_request: ReadRequestContext) -> bool {\n        (self.value == read_request.value)\n        & (self.counter == read_request.counter)\n        & (self.contract_address.eq(read_request.contract_address))\n    }\n}\n\nimpl Empty for ReadRequestContext {\n    fn empty() -> Self {\n        ReadRequestContext {\n            value: 0,\n            counter: 0,\n            contract_address: AztecAddress::empty(),\n        }\n    }\n}\n\nimpl Serialize<READ_REQUEST_CONTEXT_SERIALIZED_LEN> for ReadRequestContext {\n    fn serialize(self) -> [Field; READ_REQUEST_CONTEXT_SERIALIZED_LEN] {\n        [self.value, self.counter as Field, self.contract_address.to_field()]\n    }\n}\n\nimpl Deserialize<READ_REQUEST_CONTEXT_SERIALIZED_LEN> for ReadRequestContext {\n    fn deserialize(values: [Field; READ_REQUEST_CONTEXT_SERIALIZED_LEN]) -> Self {\n        Self {\n            value: values[0],\n            counter: values[1] as u32,\n            contract_address: AztecAddress::from_field(values[2]),\n        }\n    }\n}\n\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/read_request.nr"},"167":{"source":"use crate::{\n    abis::function_selector::FunctionSelector, address::{EthAddress, AztecAddress},\n    constants::GAS_FEES_LENGTH, hash::pedersen_hash, traits::{Deserialize, Hash, Serialize, Empty},\n    abis::side_effect::Ordered, utils::reader::Reader\n};\n\nstruct GasFees {\n    fee_per_da_gas: Field,\n    fee_per_l1_gas: Field,\n    fee_per_l2_gas: Field,\n}\n\nimpl GasFees {\n    fn new(fee_per_da_gas: Field, fee_per_l1_gas: Field, fee_per_l2_gas: Field) -> Self {\n        Self { fee_per_da_gas, fee_per_l1_gas, fee_per_l2_gas }\n    }\n}\n\nimpl Serialize<GAS_FEES_LENGTH> for GasFees {\n    fn serialize(self) -> [Field; GAS_FEES_LENGTH] {\n        [self.fee_per_da_gas, self.fee_per_l1_gas, self.fee_per_l2_gas]\n    }\n}\n\nimpl Deserialize<GAS_FEES_LENGTH> for GasFees {\n    fn deserialize(serialized: [Field; GAS_FEES_LENGTH]) -> GasFees {\n        GasFees::new(serialized[0], serialized[1], serialized[2])\n    }\n}\n\nimpl Eq for GasFees {\n    fn eq(self, other : GasFees) -> bool {\n        (self.fee_per_da_gas == other.fee_per_da_gas) & (self.fee_per_l1_gas == other.fee_per_l1_gas) & (self.fee_per_l2_gas == other.fee_per_l2_gas)\n    }\n}\n\nimpl Empty for GasFees {\n    fn empty() -> Self {\n        GasFees::new(0, 0, 0)\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/gas_fees.nr"},"169":{"source":"use crate::{constants::MAX_BLOCK_NUMBER_LENGTH, traits::{Deserialize, Serialize, Empty}};\n\nstruct MaxBlockNumber {\n    _opt: Option<u32>\n}\n\nimpl Empty for MaxBlockNumber {\n    fn empty() -> Self {\n        Self { _opt: Option::none() }\n    }\n}\n\nimpl Eq for MaxBlockNumber {\n    fn eq(self, other: Self) -> bool {\n        self._opt == other._opt\n    }\n}\n\nimpl Serialize<MAX_BLOCK_NUMBER_LENGTH> for MaxBlockNumber {\n    fn serialize(self) -> [Field; MAX_BLOCK_NUMBER_LENGTH] {\n        [self._opt._is_some as Field, self._opt._value as Field]\n    }\n}\n\nimpl Deserialize<MAX_BLOCK_NUMBER_LENGTH> for MaxBlockNumber {\n    fn deserialize(serialized: [Field; MAX_BLOCK_NUMBER_LENGTH]) -> MaxBlockNumber {\n        MaxBlockNumber {\n            _opt: Option {\n                _is_some: serialized[0] as bool,\n                _value: serialized[1] as u32,\n            }\n        }\n    }\n}\n\nimpl MaxBlockNumber {\n    pub fn new(max_block_number: u32) -> Self {\n        Self { _opt: Option::some(max_block_number) }\n    }\n\n    pub fn is_none(self) -> bool {\n        self._opt.is_none()\n    }\n\n    pub fn is_some(self) -> bool {\n        self._opt.is_some()\n    }\n\n    pub fn unwrap(self) -> u32 {\n        self._opt.unwrap()\n    }\n\n    pub fn unwrap_unchecked(self) -> u32 {\n        self._opt.unwrap_unchecked()\n    }\n\n    pub fn min(lhs: MaxBlockNumber, rhs: MaxBlockNumber) -> MaxBlockNumber {\n        if rhs.is_none() {\n            lhs // lhs might also be none, but in that case both would be\n        } else {\n            MaxBlockNumber::min_with_u32(lhs, rhs.unwrap_unchecked())\n        }\n    }\n\n    pub fn min_with_u32(lhs: MaxBlockNumber, rhs: u32) -> MaxBlockNumber {\n        if lhs._opt.is_none() {\n            MaxBlockNumber::new(rhs)\n        } else {\n            let lhs_value = lhs._opt.unwrap_unchecked();\n\n            MaxBlockNumber::new(if lhs_value < rhs { lhs_value } else { rhs })\n        }\n    }\n}\n\n#[test]\nfn zeroed_is_none() {\n    // Large parts of the kernel rely on zeroed to initialize structs. This conveniently matches what `default` does,\n    // and though we should eventually move everything to use `default`, it's good to check for now that both are\n    // equivalent.\n    let a = MaxBlockNumber::empty();\n    assert(a.is_none());\n}\n\n#[test]\nfn serde_default() {\n    let a = MaxBlockNumber::empty();\n    let b = MaxBlockNumber::deserialize(a.serialize());\n    assert(b.is_none());\n}\n\n#[test]\nfn serde_some() {\n    let a = MaxBlockNumber::new(13);\n    let b = MaxBlockNumber::deserialize(a.serialize());\n    assert_eq(b.unwrap(), 13);\n}\n\n#[test(should_fail)]\nfn default_unwrap_panics() {\n    let a = MaxBlockNumber::empty();\n    let _ = a.unwrap();\n}\n\n#[test]\nfn min_default_default() {\n    let a = MaxBlockNumber::empty();\n    let b = MaxBlockNumber::empty();\n\n    assert(MaxBlockNumber::min(a, b).is_none());\n}\n\n#[test]\nfn min_default_some() {\n    let a = MaxBlockNumber::empty();\n    let b = MaxBlockNumber::new(13);\n\n    assert_eq(MaxBlockNumber::min(a, b).unwrap(), 13);\n    assert_eq(MaxBlockNumber::min(b, a).unwrap(), 13);\n}\n\n#[test]\nfn min_some_some() {\n    let a = MaxBlockNumber::new(13);\n    let b = MaxBlockNumber::new(42);\n\n    assert_eq(MaxBlockNumber::min(a, b).unwrap(), 13);\n    assert_eq(MaxBlockNumber::min(b, a).unwrap(), 13);\n}\n\n#[test]\nfn min_with_u32_default() {\n    let a = MaxBlockNumber::empty();\n    let b = 42;\n\n    assert_eq(MaxBlockNumber::min_with_u32(a, b).unwrap(), 42);\n}\n\n#[test]\nfn min_with_u32_some() {\n    let a = MaxBlockNumber::new(13);\n    let b = 42;\n    let c = 8;\n\n    assert_eq(MaxBlockNumber::min_with_u32(a, b).unwrap(), 13);\n    assert_eq(MaxBlockNumber::min_with_u32(a, c).unwrap(), 8);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/abis/max_block_number.nr"},"174":{"source":"use crate::{\n    abis::{\n    append_only_tree_snapshot::{AppendOnlyTreeSnapshot, APPEND_ONLY_TREE_SNAPSHOT_LENGTH},\n    global_variables::{GlobalVariables, GLOBAL_VARIABLES_LENGTH}\n},\n    constants::{GENERATOR_INDEX__BLOCK_HASH, HEADER_LENGTH, STATE_REFERENCE_LENGTH, CONTENT_COMMITMENT_LENGTH},\n    hash::pedersen_hash, state_reference::StateReference, traits::{Deserialize, Empty, Hash, Serialize},\n    utils::arr_copy_slice, content_commitment::ContentCommitment\n};\n\n// docs:start:header\nstruct Header {\n    last_archive: AppendOnlyTreeSnapshot,\n    content_commitment: ContentCommitment,\n    state: StateReference,\n    global_variables: GlobalVariables,\n}\n// docs:end:header\n\nimpl Eq for Header {\n    fn eq(self, other: Self) -> bool {\n        self.last_archive.eq(other.last_archive) &\n        self.content_commitment.eq(other.content_commitment) &\n        self.state.eq(other.state) &\n        self.global_variables.eq(other.global_variables)\n    }\n}\n\nimpl Serialize<HEADER_LENGTH> for Header {\n    fn serialize(self) -> [Field; HEADER_LENGTH] {\n        let mut fields: BoundedVec<Field, HEADER_LENGTH> = BoundedVec::new();\n\n        fields.extend_from_array(self.last_archive.serialize());\n        fields.extend_from_array(self.content_commitment.serialize());\n        fields.extend_from_array(self.state.serialize());\n        fields.extend_from_array(self.global_variables.serialize());\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<HEADER_LENGTH> for Header {\n    fn deserialize(serialized: [Field; HEADER_LENGTH]) -> Self {\n        let mut offset = 0;\n\n        let last_archive_fields = arr_copy_slice(serialized, [0; APPEND_ONLY_TREE_SNAPSHOT_LENGTH], offset);\n        offset = offset + APPEND_ONLY_TREE_SNAPSHOT_LENGTH;\n\n        let content_commitment_fields = arr_copy_slice(serialized, [0; CONTENT_COMMITMENT_LENGTH], offset);\n        offset = offset + CONTENT_COMMITMENT_LENGTH;\n\n        let state_fields = arr_copy_slice(serialized, [0; STATE_REFERENCE_LENGTH], offset);\n        offset = offset + STATE_REFERENCE_LENGTH;\n\n        let global_variables_fields = arr_copy_slice(serialized, [0; GLOBAL_VARIABLES_LENGTH], offset);\n\n        Header {\n            last_archive: AppendOnlyTreeSnapshot::deserialize(last_archive_fields),\n            content_commitment: ContentCommitment::deserialize(content_commitment_fields),\n            state: StateReference::deserialize(state_fields),\n            global_variables: GlobalVariables::deserialize(global_variables_fields),\n        }\n    }\n}\n\nimpl Empty for Header {\n    fn empty() -> Self {\n        Self {\n            last_archive: AppendOnlyTreeSnapshot::zero(),\n            content_commitment: ContentCommitment::empty(),\n            state: StateReference::empty(),\n            global_variables: GlobalVariables::empty(),\n        }\n    }\n}\n\nimpl Hash for Header {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__BLOCK_HASH)\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let header = Header::empty();\n    let serialized = header.serialize();\n    let deserialized = Header::deserialize(serialized);\n    assert(header.eq(deserialized));\n}\n\n#[test]\nfn hash_smoke() {\n    let header = Header::empty();\n    let _hashed = header.hash();\n}\n\n#[test]\nfn empty_hash_is_zero() {\n    let header = Header::empty();\n    let hash = header.hash();\n\n    // Value from new_contract_data.test.ts \"computes empty hash\" test\n    let test_data_empty_hash = 0x124e8c40a6eca2e3ad10c04050b01a3fad00df3cea47b13592c7571b6914c7a7;\n    assert_eq(hash, test_data_empty_hash);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/header.nr"},"201":{"source":"pub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// Convert a 32 byte array to a field element by truncating the final byte\npub fn field_from_bytes_32_trunc(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..15 {\n        // covers bytes 16..30 (31 is truncated and ignored)\n        low = low + (bytes32[15 + 15 - i] as Field) * v;\n        v = v * 256;\n        // covers bytes 0..14\n        high = high + (bytes32[14 - i] as Field) * v;\n    }\n    // covers byte 15\n    low = low + (bytes32[15] as Field) * v;\n\n    low + high * v\n}\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    lhs.lt(rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    rhs.lt(lhs)\n}\n\n#[test]\nunconstrained fn bytes_field_test() {\n    // Tests correctness of field_from_bytes_32_trunc against existing methods\n    // Bytes representing 0x543e0a6642ffeb8039296861765a53407bba62bd1c97ca43374de950bbe0a7\n    let inputs = [\n        84, 62, 10, 102, 66, 255, 235, 128, 57, 41, 104, 97, 118, 90, 83, 64, 123, 186, 98, 189, 28, 151, 202, 67, 55, 77, 233, 80, 187, 224, 167\n    ];\n    let field = field_from_bytes(inputs, true);\n    let return_bytes = field.to_be_bytes(31);\n    for i in 0..31 {\n        assert_eq(inputs[i], return_bytes[i]);\n    }\n    // 32 bytes - we remove the final byte, and check it matches the field\n    let inputs2 = [\n        84, 62, 10, 102, 66, 255, 235, 128, 57, 41, 104, 97, 118, 90, 83, 64, 123, 186, 98, 189, 28, 151, 202, 67, 55, 77, 233, 80, 187, 224, 167, 158\n    ];\n    let field2 = field_from_bytes_32_trunc(inputs2);\n    let return_bytes2 = field.to_be_bytes(31);\n\n    for i in 0..31 {\n        assert_eq(return_bytes2[i], return_bytes[i]);\n    }\n    assert_eq(field2, field);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/utils/field.nr"},"203":{"source":"struct Reader<N> {\n    data: [Field; N],\n    offset: u64,\n}\n\nimpl<N> Reader<N> {\n    pub fn new(data: [Field; N]) -> Self {\n        Self { data, offset: 0 }\n    }\n\n    pub fn read(&mut self) -> Field {\n        let result = self.data[self.offset];\n        self.offset += 1;\n        result\n    }\n\n    pub fn read_array<K>(&mut self, mut result: [Field; K]) -> [Field; K] {\n        for i in 0..K {\n            result[i] = self.data[self.offset + i];\n        }\n        self.offset += K;\n        result\n    }\n\n    // TODO(#4394)\n    pub fn read_struct<T, K>(&mut self, deserialise: fn([Field; K]) -> T) -> T {\n        let result = deserialise(self.read_array([0; K]));\n        result\n    }\n\n    pub fn read_struct_array<T, K, C>(&mut self, deserialise: fn([Field; K]) -> T, mut result: [T; C]) -> [T; C] {\n        for i in 0..C {\n            result[i] = self.read_struct(deserialise);\n        }\n        result\n    }\n\n    pub fn finish(self) {\n        assert(self.offset == self.data.len(), \"Reader did not read all data\");\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/utils/reader.nr"},"205":{"source":"use crate::traits::{Empty, Hash};\n\nstruct PublicDataTreeLeafPreimage {\n    slot : Field,\n    value: Field,\n    next_slot :Field,\n    next_index : u64,\n}\n\nimpl Empty for PublicDataTreeLeafPreimage {\n    fn empty() -> Self {\n        Self {\n            slot: 0,\n            value: 0,\n            next_slot: 0,\n            next_index: 0,\n        }\n    }\n}\n\nimpl Hash for PublicDataTreeLeafPreimage {\n    fn hash(self) -> Field {\n        if self.is_empty() {\n            0\n        } else {\n            dep::std::hash::pedersen_hash([self.slot, self.value, (self.next_index as Field), self.next_slot])\n        }\n    }\n}\n\nimpl PublicDataTreeLeafPreimage {\n    pub fn is_empty(self) -> bool {\n        (self.slot == 0) & (self.value == 0) & (self.next_slot == 0) & (self.next_index == 0)\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/public_data_tree_leaf_preimage.nr"},"207":{"source":"use dep::std::cmp::Eq;\n\n// Trait: is_empty\n//\n// The general is_empty trait checks if a data type is is empty,\n// and it defines empty for the basic data types as 0.\n//\n// If a Field is equal to zero, then it is regarded as zero.\n// We will go with this definition for now, however it can be problematic \n// if a value can actually be zero. In a future refactor, we can \n// use the optional type for safety. Doing it now would lead to a worse devex\n// and would make it harder to sync up with the cpp code.\n// Preferred over Default trait to convey intent, as default doesn't necessarily mean empty.\ntrait Empty {\n    fn empty() -> Self;\n}\n\nimpl Empty for Field { fn empty() -> Self {0} }\n\nimpl Empty for u1 { fn empty() -> Self {0} }\nimpl Empty for u8 { fn empty() -> Self {0} }\nimpl Empty for u32 { fn empty() -> Self {0} }\nimpl Empty for u64 { fn empty() -> Self {0} }\nimpl Empty for U128 { fn empty() -> Self {U128::from_integer(0)} }\n\npub fn is_empty<T>(item: T) -> bool where T: Empty + Eq {\n    item.eq(T::empty())\n}\n\npub fn is_empty_array<T, N>(array: [T; N]) -> bool where T: Empty + Eq {\n    array.all(|elem| is_empty(elem))\n}\n\ntrait Hash {\n    fn hash(self) -> Field;\n}\n\ntrait ToField {\n    fn to_field(self) -> Field;\n}\n\nimpl ToField for Field {\n    fn to_field(self) -> Field {\n        self\n    }\n}\n\nimpl ToField for bool { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u1 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u8 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u32 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u64 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for U128 {\n    fn to_field(self) -> Field {\n        self.to_integer()\n    }\n}\n\ntrait FromField {\n    fn from_field(value: Field) -> Self;\n}\n\nimpl FromField for Field {\n    fn from_field(value: Field) -> Self {\n        value\n    }\n}\n\nimpl FromField for bool { fn from_field(value: Field) -> Self { value as bool } }\nimpl FromField for u1 { fn from_field(value: Field) -> Self { value as u1 } }\nimpl FromField for u8 { fn from_field(value: Field) -> Self { value as u8 } }\nimpl FromField for u32 { fn from_field(value: Field) -> Self { value as u32 } }\nimpl FromField for u64 { fn from_field(value: Field) -> Self { value as u64 } }\nimpl FromField for U128 {\n    fn from_field(value: Field) -> Self {\n        U128::from_integer(value)\n    }\n}\n\n// docs:start:serialize\ntrait Serialize<N> {\n    fn serialize(self) -> [Field; N];\n}\n// docs:end:serialize\n\n// docs:start:deserialize\ntrait Deserialize<N> {\n    fn deserialize(fields: [Field; N]) -> Self;\n}\n// docs:end:deserialize\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/traits.nr"},"208":{"source":"use crate::traits::{Serialize, Deserialize};\n\nglobal BOOL_SERIALIZED_LEN: Field = 1;\nglobal U8_SERIALIZED_LEN: Field = 1;\nglobal U32_SERIALIZED_LEN: Field = 1;\nglobal U64_SERIALIZED_LEN: Field = 1;\nglobal U128_SERIALIZED_LEN: Field = 1;\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nimpl Serialize<BOOL_SERIALIZED_LEN> for bool {\n    fn serialize(self) -> [Field; BOOL_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<BOOL_SERIALIZED_LEN> for bool {\n    fn deserialize(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n        fields[0] as bool\n    }\n}\n\nimpl Serialize<U8_SERIALIZED_LEN> for u8 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U8_SERIALIZED_LEN> for u8 {\n    fn deserialize(fields: [Field; U8_SERIALIZED_LEN]) -> Self {\n        fields[0] as u8\n    }\n}\n\nimpl Serialize<U32_SERIALIZED_LEN> for u32 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U32_SERIALIZED_LEN> for u32 {\n    fn deserialize(fields: [Field; U32_SERIALIZED_LEN]) -> Self {\n        fields[0] as u32\n    }\n}\n\nimpl Serialize<U64_SERIALIZED_LEN> for u64 {\n    fn serialize(self) -> [Field; U64_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U64_SERIALIZED_LEN> for u64 {\n    fn deserialize(fields: [Field; U64_SERIALIZED_LEN]) -> Self {\n        fields[0] as u64\n    }\n}\n\nimpl Serialize<U128_SERIALIZED_LEN> for U128 {\n    fn serialize(self) -> [Field; 1] {\n        [self.to_integer()]\n    }\n\n}\n\nimpl Deserialize<U128_SERIALIZED_LEN> for U128 {\n    fn deserialize(fields: [Field; U128_SERIALIZED_LEN]) -> Self {\n        U128::from_integer(fields[0])\n    }\n}\n\nimpl Serialize<FIELD_SERIALIZED_LEN> for Field {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self]\n    }\n}\n\nimpl Deserialize<FIELD_SERIALIZED_LEN> for Field {\n    fn deserialize(fields: [Field; FIELD_SERIALIZED_LEN]) -> Self {\n        fields[0]\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/type_serialization.nr"},"209":{"source":"use crate::{\n    abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot, constants::PARTIAL_STATE_REFERENCE_LENGTH,\n    traits::{Deserialize, Empty, Hash, Serialize}\n};\n\nstruct PartialStateReference {\n    note_hash_tree: AppendOnlyTreeSnapshot,\n    nullifier_tree: AppendOnlyTreeSnapshot,\n    public_data_tree: AppendOnlyTreeSnapshot,\n}\n\nimpl Eq for PartialStateReference {\n    fn eq(self, other: PartialStateReference) -> bool {\n        self.note_hash_tree.eq(other.note_hash_tree) &\n        self.nullifier_tree.eq(other.nullifier_tree) &\n        self.public_data_tree.eq(other.public_data_tree)\n    }\n}\n\nimpl Serialize<PARTIAL_STATE_REFERENCE_LENGTH> for PartialStateReference {\n    fn serialize(self) -> [Field; PARTIAL_STATE_REFERENCE_LENGTH] {\n        let serialized_note_hash_tree = self.note_hash_tree.serialize();\n        let serialized_nullifier_tree = self.nullifier_tree.serialize();\n        let serialized_public_data_tree = self.public_data_tree.serialize();\n\n        [\n            serialized_note_hash_tree[0], \n            serialized_note_hash_tree[1],\n            serialized_nullifier_tree[0],\n            serialized_nullifier_tree[1],\n            serialized_public_data_tree[0],\n            serialized_public_data_tree[1],\n        ]\n    }\n}\n\nimpl Deserialize<PARTIAL_STATE_REFERENCE_LENGTH> for PartialStateReference {\n    fn deserialize(serialized: [Field; PARTIAL_STATE_REFERENCE_LENGTH]) -> PartialStateReference {\n        PartialStateReference {\n            note_hash_tree: AppendOnlyTreeSnapshot::deserialize(\n                [serialized[0], serialized[1]]\n            ),\n            nullifier_tree: AppendOnlyTreeSnapshot::deserialize(\n                [serialized[2], serialized[3]]\n            ),\n            public_data_tree: AppendOnlyTreeSnapshot::deserialize(\n                [serialized[4], serialized[5]]\n            ),\n        }\n    }\n}\n\nimpl Empty for PartialStateReference {\n    fn empty() -> Self {\n        Self {\n            note_hash_tree: AppendOnlyTreeSnapshot::zero(),\n            nullifier_tree: AppendOnlyTreeSnapshot::zero(),\n            public_data_tree: AppendOnlyTreeSnapshot::zero(),\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let partial = PartialStateReference::empty();\n    let _serialized = partial.serialize();\n    let _deserialized = PartialStateReference::deserialize(_serialized);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/partial_state_reference.nr"},"211":{"source":"use crate::{\n    constants::CONTENT_COMMITMENT_LENGTH, traits::{Deserialize, Empty, Hash, Serialize},\n    utils::arr_copy_slice\n};\n\nstruct ContentCommitment {\n  tx_tree_height: Field,\n  txs_effects_hash: Field,\n  in_hash: Field,\n  out_hash: Field,\n}\n\nimpl Serialize<CONTENT_COMMITMENT_LENGTH> for ContentCommitment {\n  fn serialize(self) -> [Field; CONTENT_COMMITMENT_LENGTH] {\n    let mut fields: BoundedVec<Field, CONTENT_COMMITMENT_LENGTH> = BoundedVec::new();\n\n    fields.push(self.tx_tree_height);\n    fields.push(self.txs_effects_hash);\n    fields.push(self.in_hash);\n    fields.push(self.out_hash);\n\n    fields.storage\n  }\n}\n\nimpl Deserialize<CONTENT_COMMITMENT_LENGTH> for ContentCommitment {\n  fn deserialize(serialized: [Field; CONTENT_COMMITMENT_LENGTH]) -> Self {\n    let tx_tree_height = serialized[0];\n\n    let txs_effects_hash = serialized[1];\n\n    let in_hash = serialized[2];\n\n    let out_hash = serialized[3];\n\n    Self {\n      tx_tree_height,\n      txs_effects_hash,\n      in_hash,\n      out_hash,\n    }\n  }\n}\n\nimpl Empty for ContentCommitment {\n  fn empty() -> Self {\n    Self {\n      tx_tree_height: 0,\n      txs_effects_hash: 0,\n      in_hash: 0,\n      out_hash: 0,\n    }\n  }\n}\n\nimpl Eq for ContentCommitment {\n  fn eq(self, other: Self) -> bool {\n    (self.tx_tree_height == other.tx_tree_height)\n      & (self.txs_effects_hash == other.txs_effects_hash)\n      & (self.in_hash == other.in_hash)\n      & (self.out_hash == other.out_hash)\n  }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let empty = ContentCommitment::empty();\n    let serialized = empty.serialize();\n    let deserialized = ContentCommitment::deserialize(serialized);\n\n    assert(empty.eq(deserialized));\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/content_commitment.nr"},"212":{"source":"use crate::{\n    address::{\n    aztec_address::AztecAddress, eth_address::EthAddress, partial_address::PartialAddress,\n    public_keys_hash::PublicKeysHash\n},\n    contract_class_id::ContractClassId,\n    constants::{GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA, CONTRACT_INSTANCE_LENGTH},\n    traits::{Deserialize, Hash, Serialize}\n};\n\nstruct ContractInstance {\n    salt : Field,\n    deployer: AztecAddress,\n    contract_class_id : ContractClassId,\n    initialization_hash : Field,\n    portal_contract_address : EthAddress,\n    public_keys_hash : PublicKeysHash,\n}\n\nimpl Eq for ContractInstance {\n    fn eq(self, other: Self) -> bool {\n        self.public_keys_hash.eq(other.public_keys_hash) &\n        self.initialization_hash.eq(other.initialization_hash) &\n        self.contract_class_id.eq(other.contract_class_id) &\n        self.salt.eq(other.salt) &\n        self.portal_contract_address.eq(other.portal_contract_address)\n    }\n}\n\nimpl Serialize<CONTRACT_INSTANCE_LENGTH> for ContractInstance {\n    fn serialize(self) -> [Field; CONTRACT_INSTANCE_LENGTH] {\n        [\n            self.salt,\n            self.deployer.to_field(),\n            self.contract_class_id.to_field(),\n            self.initialization_hash,\n            self.portal_contract_address.to_field(),\n            self.public_keys_hash.to_field()\n        ]\n    }\n}\n\nimpl Deserialize<CONTRACT_INSTANCE_LENGTH> for ContractInstance {\n    fn deserialize(serialized: [Field; CONTRACT_INSTANCE_LENGTH]) -> Self {\n        Self {\n            salt: serialized[0],\n            deployer: AztecAddress::from_field(serialized[1]),\n            contract_class_id: ContractClassId::from_field(serialized[2]),\n            initialization_hash: serialized[3],\n            portal_contract_address: EthAddress::from_field(serialized[4]),\n            public_keys_hash: PublicKeysHash::from_field(serialized[5]),\n        }\n    }\n}\n\nimpl Hash for ContractInstance {\n    fn hash(self) -> Field {\n        self.to_address().to_field()\n    }\n}\n\nimpl ContractInstance {\n    fn to_address(self) -> AztecAddress {\n        AztecAddress::compute(\n            self.public_keys_hash,\n            PartialAddress::compute(\n                self.contract_class_id,\n                self.salt,\n                self.initialization_hash,\n                self.portal_contract_address,\n                self.deployer\n            )\n        )\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/contract_instance.nr"},"213":{"source":"// general util packages/modules are usually bad practice\n// because there is no criteria for what we should not put in here.\n// Reducing the size of this package would be welcome.\n\nmod arrays;\nmod field;\nmod reader;\nmod uint256;\n\n// if predicate == true then return lhs, else return rhs\npub fn conditional_assign(predicate: bool, lhs: Field, rhs: Field) -> Field {\n    if predicate { lhs } else { rhs }\n}\n\npub fn arr_copy_slice<T, N, M>(src: [T; N], mut dst: [T; M], offset: u64) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/utils.nr"},"214":{"source":"use crate::{\n    crate::address::{eth_address::EthAddress, partial_address::PartialAddress, public_keys_hash::PublicKeysHash},\n    constants::{AZTEC_ADDRESS_LENGTH, GENERATOR_INDEX__CONTRACT_ADDRESS},\n    contract_class_id::ContractClassId, hash::pedersen_hash, grumpkin_point::GrumpkinPoint,\n    traits::{Empty, FromField, ToField, Serialize, Deserialize}, utils\n};\n\n// Aztec address\nstruct AztecAddress {\n    inner : Field\n}\n\nimpl Eq for AztecAddress {\n    fn eq(self, other : Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for AztecAddress {\n    fn empty() -> Self {\n        Self {\n            inner : 0\n        }\n    }\n}\n\nimpl ToField for AztecAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl FromField for AztecAddress {\n    fn from_field(value: Field) -> AztecAddress {\n        AztecAddress { inner: value }\n    }\n}\n\nimpl Serialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn serialize(self: Self) -> [Field; AZTEC_ADDRESS_LENGTH] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn deserialize(fields: [Field; AZTEC_ADDRESS_LENGTH]) -> Self {\n        FromField::from_field(fields[0])\n    }\n}\n\nimpl AztecAddress {\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n\n    pub fn compute_from_public_key(\n        pub_key: GrumpkinPoint,\n        contract_class_id: ContractClassId,\n        salt: Field,\n        initialization_hash: Field,\n        portal_contract_address: EthAddress,\n        deployer: AztecAddress\n    ) -> AztecAddress {\n        AztecAddress::compute(\n            PublicKeysHash::compute(pub_key),\n            PartialAddress::compute(\n                contract_class_id,\n                salt,\n                initialization_hash,\n                portal_contract_address,\n                deployer\n            )\n        )\n    }\n\n    pub fn compute(pub_keys_hash: PublicKeysHash, partial_address: PartialAddress) -> AztecAddress {\n        AztecAddress::from_field(\n            pedersen_hash(\n                [pub_keys_hash.to_field(), partial_address.to_field()],\n                GENERATOR_INDEX__CONTRACT_ADDRESS\n            )\n        )\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs: Self, rhs: Self) -> Self {\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self { inner: result }\n    }\n}\n\n#[test]\nfn compute_address() {\n    let point = GrumpkinPoint { x: 1, y: 2 };\n    let contract_address_salt = 3;\n    let contract_class_id = ContractClassId::from_field(4);\n    let initialization_hash = 5;\n    let portal_contract_address = EthAddress::from_field(6);\n    let deployer = AztecAddress::from_field(7);\n\n    let address = AztecAddress::compute_from_public_key(\n        point,\n        contract_class_id,\n        contract_address_salt,\n        initialization_hash,\n        portal_contract_address,\n        deployer\n    );\n\n    let expected_computed_address_from_preimage = 0x027ea2b41ced2ec9a98305984e96dd28518536a4628883ccdc06e38aa8997220;\n    assert(address.to_field() == expected_computed_address_from_preimage);\n}\n\n#[test]\nfn compute_address_from_partial_and_pubkey() {\n    let point = GrumpkinPoint { x: 1, y: 2 };\n    let partial_address = PartialAddress::from_field(3);\n\n    let address = AztecAddress::compute(PublicKeysHash::compute(point), partial_address);\n    let expected_computed_address_from_partial_and_pubkey = 0x0447f893197175723deb223696e2e96dbba1e707ee8507766373558877e74197;\n    assert(address.to_field() == expected_computed_address_from_partial_and_pubkey);\n}\n\n#[test]\nfn from_field_to_field() {\n    let address = AztecAddress { inner: 37 };\n    assert_eq(FromField::from_field(address.to_field()), address);\n}\n\n#[test]\nfn serde() {\n    let address = AztecAddress { inner: 37 };\n    assert_eq(Deserialize::deserialize(address.serialize()), address);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/address/aztec_address.nr"},"215":{"source":"use crate::{\n    constants::GENERATOR_INDEX__PARTIAL_ADDRESS, hash::pedersen_hash, grumpkin_point::GrumpkinPoint,\n    traits::{ToField, Serialize, Deserialize}\n};\n\n// Public keys hash. Used in the computation of an address.\nstruct PublicKeysHash {\n    inner: Field\n}\n\nimpl ToField for PublicKeysHash {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<1> for PublicKeysHash {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<1> for PublicKeysHash {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        PublicKeysHash::from_field(fields[0])\n    }\n}\n\nimpl Eq for PublicKeysHash {\n    fn eq(self, other: Self) -> bool {\n        self.inner == other.inner\n    }\n}\n\nimpl PublicKeysHash {\n    pub fn from_field(field: Field) -> Self {\n        Self { inner: field }\n    }\n\n    pub fn compute(public_key: GrumpkinPoint) -> Self {\n        PublicKeysHash::from_field(\n            pedersen_hash(\n                [\n            public_key.x,\n            public_key.y\n        ],\n                GENERATOR_INDEX__PARTIAL_ADDRESS\n            )\n        )\n    }\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n\n#[test]\nfn compute_public_keys_hash() {\n    let point = GrumpkinPoint { x: 1, y: 2 };\n    let actual = PublicKeysHash::compute(point);\n    let expected_public_keys_hash = 0x1923a6246e305720b6aaf751fde0342613e93c82e455c3831e28375c16dd40d8;\n    assert(actual.to_field() == expected_public_keys_hash);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/address/public_keys_hash.nr"},"216":{"source":"use crate::{\n    address::{eth_address::EthAddress, aztec_address::AztecAddress},\n    constants::GENERATOR_INDEX__PARTIAL_ADDRESS, hash::pedersen_hash, traits::ToField\n};\n\n// Salted initialization hash. Used in the computation of a partial address.\nstruct SaltedInitializationHash {\n    inner: Field\n}\n\nimpl ToField for SaltedInitializationHash {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl SaltedInitializationHash {\n    pub fn from_field(field: Field) -> Self {\n        Self { inner: field }\n    }\n\n    pub fn compute(\n        salt: Field,\n        initialization_hash: Field,\n        portal_contract_address: EthAddress,\n        deployer: AztecAddress\n    ) -> Self {\n        SaltedInitializationHash::from_field(\n            pedersen_hash(\n                [\n            salt,\n            initialization_hash,\n            deployer.to_field(),\n            portal_contract_address.to_field()\n        ],\n                GENERATOR_INDEX__PARTIAL_ADDRESS\n            )\n        )\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/address/salted_initialization_hash.nr"},"217":{"source":"use crate::{\n    address::{\n    eth_address::EthAddress, salted_initialization_hash::SaltedInitializationHash,\n    aztec_address::AztecAddress\n},\n    constants::GENERATOR_INDEX__PARTIAL_ADDRESS, contract_class_id::ContractClassId,\n    hash::pedersen_hash, traits::ToField\n};\n\n// Partial address\nstruct PartialAddress {\n    inner : Field\n}\n\nimpl ToField for PartialAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl PartialAddress {\n    pub fn from_field(field: Field) -> Self {\n        Self { inner: field }\n    }\n\n    pub fn compute(\n        contract_class_id: ContractClassId,\n        salt: Field,\n        initialization_hash: Field,\n        portal_contract_address: EthAddress,\n        deployer: AztecAddress\n    ) -> Self {\n        PartialAddress::compute_from_salted_initialization_hash(\n            contract_class_id,\n            SaltedInitializationHash::compute(salt, initialization_hash, portal_contract_address, deployer)\n        )\n    }\n\n    pub fn compute_from_salted_initialization_hash(\n        contract_class_id: ContractClassId,\n        salted_initialization_hash: SaltedInitializationHash\n    ) -> Self {\n        PartialAddress::from_field(\n            pedersen_hash(\n                [\n            contract_class_id.to_field(),\n            salted_initialization_hash.to_field()\n        ],\n                GENERATOR_INDEX__PARTIAL_ADDRESS\n            )\n        )\n    }\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/address/partial_address.nr"},"218":{"source":"use crate::{\n    constants::ETH_ADDRESS_LENGTH, hash::pedersen_hash,\n    traits::{Empty, ToField, Serialize, Deserialize}, utils\n};\n\nstruct EthAddress{\n    inner : Field\n}\n\nimpl Eq for EthAddress {\n    fn eq(self, other : Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for EthAddress {\n    fn empty() -> Self {\n        Self {\n            inner : 0\n        }\n    }\n}\n\nimpl ToField for EthAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<ETH_ADDRESS_LENGTH> for EthAddress {\n    fn serialize(self: Self) -> [Field; ETH_ADDRESS_LENGTH] {\n        [self.inner]\n    }\n}\n\nimpl Deserialize<ETH_ADDRESS_LENGTH> for EthAddress {\n    fn deserialize(fields: [Field; ETH_ADDRESS_LENGTH]) -> Self {\n        EthAddress::from_field(fields[0])\n    }\n}\n\nimpl EthAddress {\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n\n    pub fn from_field(field: Field) -> Self {\n        field.assert_max_bit_size(160);\n        Self { inner: field }\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs: Self, rhs: Self) -> Self {\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self { inner: result }\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/address/eth_address.nr"},"220":{"source":"use crate::address::{AztecAddress, EthAddress};\nuse crate::mocked::VerificationKey;\nuse crate::abis::function_selector::FunctionSelector;\nuse crate::abis::contract_class_function_leaf_preimage::ContractClassFunctionLeafPreimage;\nuse crate::contract_class_id::ContractClassId;\nuse crate::utils::{uint256::U256, field::field_from_bytes_32_trunc};\nuse crate::constants::{\n    FUNCTION_TREE_HEIGHT, GENERATOR_INDEX__SILOED_NOTE_HASH, GENERATOR_INDEX__OUTER_NULLIFIER,\n    GENERATOR_INDEX__VK, GENERATOR_INDEX__CONSTRUCTOR, GENERATOR_INDEX__PARTIAL_ADDRESS,\n    GENERATOR_INDEX__CONTRACT_ADDRESS, GENERATOR_INDEX__NOTE_HASH_NONCE,\n    GENERATOR_INDEX__UNIQUE_NOTE_HASH\n};\nuse crate::traits::Hash;\nuse crate::messaging::l2_to_l1_message::L2ToL1Message;\nuse crate::merkle_tree::root::root_from_sibling_path;\nuse dep::std::hash::{pedersen_hash_with_separator, sha256};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n    let hash_in_a_field = field_from_bytes_32_trunc(sha256_hashed);\n\n    hash_in_a_field\n}\n\npub fn private_functions_root_from_siblings(\n    selector: FunctionSelector,\n    vk_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = ContractClassFunctionLeafPreimage { selector, vk_hash };\n    let function_leaf = function_leaf_preimage.hash();\n    root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path)\n}\n\npub fn silo_note_hash(address: AztecAddress, inner_commitment: Field) -> Field {\n    pedersen_hash(\n        [\n        address.to_field(),\n        inner_commitment\n    ],\n        GENERATOR_INDEX__SILOED_NOTE_HASH\n    )\n}\n\npub fn silo_nullifier(address: AztecAddress, nullifier: Field) -> Field {\n    pedersen_hash(\n        [\n        address.to_field(),\n        nullifier\n    ],\n        GENERATOR_INDEX__OUTER_NULLIFIER\n    )\n}\n\npub fn merkle_hash(left: Field, right: Field) -> Field {\n    pedersen_hash([left, right], 0)\n}\n\npub fn stdlib_recursion_verification_key_compress_native_vk(_vk: VerificationKey) -> Field {\n    // Original cpp code\n    // stdlib::recursion::verification_key<CT::bn254>::compress_native(private_call.vk, GeneratorIndex::VK);\n    // The above cpp method is only ever called on verification key, so it has been special cased here\n    let _hash_index = GENERATOR_INDEX__VK;\n    0\n}\n\npub fn compute_l2_to_l1_hash(\n    contract_address: AztecAddress,\n    rollup_version_id: Field,\n    chain_id: Field,\n    message: L2ToL1Message\n) -> Field {\n    let mut bytes: BoundedVec<u8, 160> = BoundedVec::new();\n\n    let inputs = [\n        contract_address.to_field(), rollup_version_id, message.recipient.to_field(), chain_id, message.content\n    ];\n    for i in 0..inputs.len() {\n        // TODO are bytes be in fr.to_buffer() ?\n        let item_bytes = inputs[i].to_be_bytes(32);\n        for j in 0..32 {\n            bytes.push(item_bytes[j]);\n        }\n    }\n\n    sha256_to_field(bytes.storage)\n}\n\n// Computes sha256 hash of 2 input hashes.\n//\n// NB: This method now takes in two 31 byte fields - it assumes that any input\n// is the result of a sha_to_field hash and => is truncated\n//\n// TODO(Jan and David): This is used for the encrypted_log hashes.\n// Can we check to see if we can just use hash_to_field or pedersen_compress here?\n//\npub fn accumulate_sha256(input: [Field; 2]) -> Field {\n    // This is a note about the cpp code, since it takes an array of Fields\n    // instead of a U128.\n    // 4 Field elements when converted to bytes will usually \n    // occupy 4 * 32 = 128 bytes.\n    // However, this function is making the assumption that each Field \n    // only occupies 128 bits.\n    //\n    // TODO(David): This does not seem to be getting guaranteed anywhere in the code?\n\n    // Concatentate two fields into 32x2 = 64 bytes\n    // accumulate_sha256 assumes that the inputs are pre-truncated 31 byte numbers\n    let mut hash_input_flattened = [0; 64];\n    for offset in 0..input.len() {\n        let input_as_bytes = input[offset].to_be_bytes(32);\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n\n    sha256_to_field(hash_input_flattened)\n}\n\npub fn compute_logs_hash(previous_log_hash: Field, current_log_hash: Field) -> Field {\n    accumulate_sha256(\n        [\n        previous_log_hash,\n        current_log_hash\n    ]\n    )\n}\n\npub fn compute_note_hash_nonce(first_nullifier: Field, commitment_index: u64) -> Field {\n    pedersen_hash(\n        [\n        first_nullifier,\n        commitment_index as Field\n    ],\n        GENERATOR_INDEX__NOTE_HASH_NONCE\n    )\n}\n\npub fn compute_unique_siloed_note_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    pedersen_hash(\n        [\n        nonce,\n        siloed_note_hash\n    ],\n        GENERATOR_INDEX__UNIQUE_NOTE_HASH\n    )\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    dep::std::hash::pedersen_hash_with_separator(inputs, hash_index)\n}\n\n#[test]\nfn smoke_sha256_to_field() {\n    let full_buffer = [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n        60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n        80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\n        100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\n        120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\n        140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159\n    ];\n    let result = sha256_to_field(full_buffer);\n\n    assert(result == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184c7);\n\n    // to show correctness of the current ver (truncate one byte) vs old ver (mod full bytes):\n    let result_bytes = sha256(full_buffer);\n    let truncated_field = crate::utils::field::field_from_bytes_32_trunc(result_bytes);\n    assert(truncated_field == result);\n    let mod_res = result + (result_bytes[31] as Field);\n    assert(mod_res == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184e0);\n}\n\n#[test]\nfn compute_l2_l1_hash() {\n    // All zeroes\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(0), 0, 0, L2ToL1Message::empty());\n    assert(hash_result == 0xb393978842a0fa3d3e1470196f098f473f9678e72463cb65ec4ab5581856c2);\n\n    // Non-zero case\n    let message = L2ToL1Message { recipient: EthAddress::from_field(3), content: 5 };\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(1), 2, 4, message);\n    assert(hash_result == 0x3f88c1044a05e5340ed20466276500f6d45ca5603913b9091e957161734e16);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/hash.nr"},"224":{"source":"use crate::{address::EthAddress, constants::L2_TO_L1_MESSAGE_LENGTH, traits::{Deserialize, Empty, Serialize}};\n\n// Note: Not to be confused with L2ToL1Msg in Solidity\nstruct L2ToL1Message {\n    recipient: EthAddress,\n    content: Field,\n}\n\nimpl Empty for L2ToL1Message {\n    fn empty() -> Self {\n        Self {\n            recipient: EthAddress::empty(),\n            content: 0,\n        }\n    }\n}\n\nimpl Eq for L2ToL1Message {\n    fn eq(self, other: Self) -> bool {\n        (self.recipient == other.recipient) & (self.content == other.content)\n    }\n}\n\nimpl Serialize<L2_TO_L1_MESSAGE_LENGTH> for L2ToL1Message {\n    fn serialize(self) -> [Field; L2_TO_L1_MESSAGE_LENGTH] {\n        [self.recipient.to_field(), self.content]\n    }\n}\n\nimpl Deserialize<L2_TO_L1_MESSAGE_LENGTH> for L2ToL1Message {\n    fn deserialize(values: [Field; L2_TO_L1_MESSAGE_LENGTH]) -> Self {\n        Self {\n            recipient: EthAddress::from_field(values[0]),\n            content: values[1],\n        }\n    }\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/messaging/l2_to_l1_message.nr"},"226":{"source":"use crate::{\n    abis::append_only_tree_snapshot::{AppendOnlyTreeSnapshot, APPEND_ONLY_TREE_SNAPSHOT_LENGTH},\n    constants::{PARTIAL_STATE_REFERENCE_LENGTH, STATE_REFERENCE_LENGTH},\n    partial_state_reference::PartialStateReference, traits::{Deserialize, Empty, Hash, Serialize},\n    utils::arr_copy_slice\n};\n\nstruct StateReference {\n    l1_to_l2_message_tree: AppendOnlyTreeSnapshot,\n    partial: PartialStateReference,\n}\n\nimpl Eq for StateReference {\n    fn eq(self, other: StateReference) -> bool {\n        self.l1_to_l2_message_tree.eq(other.l1_to_l2_message_tree) &\n        self.partial.eq(other.partial)\n    }\n}\n\nimpl Serialize<STATE_REFERENCE_LENGTH> for StateReference {\n    fn serialize(self) -> [Field; STATE_REFERENCE_LENGTH] {\n        let mut fields: BoundedVec<Field, STATE_REFERENCE_LENGTH> = BoundedVec::new();\n\n        fields.extend_from_array(self.l1_to_l2_message_tree.serialize());\n        fields.extend_from_array(self.partial.serialize());\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<STATE_REFERENCE_LENGTH> for StateReference {\n    fn deserialize(serialized: [Field; STATE_REFERENCE_LENGTH]) -> StateReference {\n        let mut offset = 0;\n\n        let l1_to_l2_message_tree_fields = arr_copy_slice(serialized, [0; APPEND_ONLY_TREE_SNAPSHOT_LENGTH], offset);\n        offset = offset + APPEND_ONLY_TREE_SNAPSHOT_LENGTH;\n\n        let partial_fields = arr_copy_slice(serialized, [0; PARTIAL_STATE_REFERENCE_LENGTH], offset);\n\n        StateReference {\n            l1_to_l2_message_tree: AppendOnlyTreeSnapshot::deserialize(l1_to_l2_message_tree_fields),\n            partial: PartialStateReference::deserialize(partial_fields),\n        }\n    }\n}\n\nimpl Empty for StateReference {\n    fn empty() -> Self {\n        Self {\n            l1_to_l2_message_tree: AppendOnlyTreeSnapshot::zero(),\n            partial: PartialStateReference::empty(),\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let state = StateReference::empty();\n    let _serialized = state.serialize();\n    let _deserialized = StateReference::deserialize(_serialized);\n}\n","path":"/Users/jack-sw/nargo/github.com/AztecProtocol/aztec-packages/aztec-packages-v0.35.1/noir-projects/noir-protocol-circuits/crates/types/src/state_reference.nr"},"230":{"source":"use dep::std::ec::tecurve::affine::Curve as AffineCurve;\nuse dep::std::ec::tecurve::affine::Point as Gaffine;\nuse dep::std::collections::vec::Vec;\nuse dep::std;\nuse dep::std::ec;\n\nglobal bjj_a = 168700;\nglobal bjj_d = 168696;\nglobal bjj_generator_x = 995203441582195749578291179787384436505546430278305826713579947235728471134;\nglobal bjj_generator_y = 5472060717959818805561601436314318772137091100104008585924551046643952123905;\nglobal bjj_basept_x    = 5299619240641551281634865583518297030282874472190772894086521144482721001553;\nglobal bjj_basept_y    = 16950150798460657717958625567821834550301663161624707787222815936182638968203;\nglobal bjj_l = 2736030358979909402780800718157159386076813972158567259200215660948447373041; // order of the big prime subgroup of the curve = order of basept\n\npub fn get_affine_curve() -> AffineCurve {\n  AffineCurve::new(bjj_a, bjj_d, Gaffine::new(bjj_generator_x, bjj_generator_y))\n}\n\npub fn get_base_point() -> Gaffine {\n  Gaffine::new(bjj_basept_x, bjj_basept_y)\n}\n\n// Returns true if x is less than y\nfn lt_bytes32(x: Field, y: Field) -> bool {\n    let x_bytes = x.to_le_bytes(32);\n    let y_bytes = y.to_le_bytes(32);\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..32 {\n        if (!done) {\n            let x_byte = x_bytes[31 - i] as u8;\n            let y_byte = y_bytes[31 - i] as u8;\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\n/// This function checks that a point is in the big prime subgroup of the Baby Jubjub curve. \n/// It is used to check that a public key is valid.\npub fn is_valid_subgroup(point: Gaffine) -> bool {\n  let bjj_affine = get_affine_curve();\n  let is_on_curve = bjj_affine.contains(point); // checks the point is on bjj\n  let is_in_big_prime_subgroup = bjj_affine.mul(bjj_l, point).is_zero(); // checks the point is in the big prime subgroup of bjj\n  is_on_curve & is_in_big_prime_subgroup\n}\n\n\n/// This function converts a private key to a public key, which is a point on the Baby Jubjub curve.\n/// The private key is a Field element which should be sampled uniformly between 0 and bjj_l-1, where bjj_l is the order of the big prime subgroup of Baby Jubjub.\n/// Baby Jubjub parameters in affine representation are defined as in ERC-244.\npub fn priv_to_pub_key(private_key: Field) -> Gaffine\n{\n  let bjj_affine = get_affine_curve();\n  let base_pt = get_base_point();\n  bjj_affine.mul(private_key, base_pt)\n}\n\n/// Exponential ElGamal Encryption on Baby Jubjub, plaintext is restricted to u40 as the last step of decryption requires solving the Discrete Logarithm Problem.\n/// The randomness parameter should be sampled uniformly between 0 and bjj_l-1 and NEVER reused. bjj_l is the order of the big prime subgroup of Baby Jubjub.\n/// Same notations as in https://en.wikipedia.org/wiki/ElGamal_encryption \n/// The public_key point passed as an argument must correspond to a valid public key, i.e an element of the Baby Jubjub curve\npub fn exp_elgamal_encrypt(public_key: Gaffine, plaintext: u32, randomness: Field) -> (Gaffine,Gaffine)\n{\n  assert(is_valid_subgroup(public_key)); // checks the public key is valid\n  let bjj_affine = get_affine_curve();\n  let base_pt = get_base_point();\n  let C1: Gaffine = bjj_affine.mul(randomness, base_pt);\n  let plain_embedded: Gaffine = bjj_affine.mul(plaintext as Field, base_pt);\n  let shared_secret: Gaffine = bjj_affine.mul(randomness, public_key);\n  let C2: Gaffine = bjj_affine.add(shared_secret, plain_embedded);\n  (C1,C2)\n}\n\n/// Exponential ElGamal Decryption on Baby Jubjub, the returned point is an embedding of the plaintext on the curve,\n/// so to fully decrypt it, use the Baby-Step Giant-Step implementations in Rust or in JS/WASM which accompany this package\n/// Warning : ciphertext is supposed to be valid (i.e results from an encryption of a u40 with a valid Public Key via `exp_elgamal_encrypt`)\npub fn exp_elgamal_decrypt(private_key : Field, ciphertext: (Gaffine,Gaffine)) -> Gaffine\n{\n  let bjj_affine = get_affine_curve();\n  let shared_secret = bjj_affine.mul(private_key,ciphertext.0);\n  let plain_embedded = bjj_affine.subtract(ciphertext.1,shared_secret);\n  plain_embedded // give this embedded plaintext as input to the Baby-Step Giant-Step algorithm to get back the original plaintext\n}\n\n/// This function converts the orginal public key to its compressed form, i.e from a point on Baby Jubjub to a bytes32.\n/// This matches circomlibjs from here: https://github.com/iden3/circomlibjs/blob/4f094c5be05c1f0210924a3ab204d8fd8da69f49/src/babyjub.js#L97\n/// The public_key point passed as an argument must correspond to a valid public key, i.e an element of the Baby Jubjub curve.\npub fn pack_point(public_key: Gaffine) -> [u8;32] {\n  assert(is_valid_subgroup(public_key), \"The public key is not a point on the Baby Jubjub big subgroup\"); // checks the public key is valid\n\n  let mut array: [u8;32] = [0;32];\n  let mut y = public_key.y.to_le_bytes(32);\n  for i in 0..32 {\n    array[i] = y[i];\n  }\n\n  let pm1d2 = -1 / 2;\n\n  if(lt_bytes32(pm1d2, public_key.x))\n  {\n    array[31] = array[31] | 0x80;\n  }\n  array\n}\n\n/// This function converts back the compressed public key to its original form, i.e from a bytes32 to a point on Baby Jubjub\n/// This matches circomlibjs from here: https://github.com/iden3/circomlibjs/blob/4f094c5be05c1f0210924a3ab204d8fd8da69f49/src/babyjub.js#L108\n/// The packed_public_key array passed as an argument must correspond to a valid public key, i.e an element of the  Baby Jubjub curve\npub fn unpack_point(public_key: [u8; 32]) -> Gaffine \n{\n  let mut y_array = public_key;\n  let mut point: Gaffine = Gaffine::new(0,0);\n  let mut sign = false;\n  if((y_array[31] & 0x80) != 0) {\n    sign = true;\n    y_array[31] &= 0x7f;\n  }\n\n  point.y = from_rpr_le(y_array);\n  let recovered_y_slice = point.y.to_le_bytes(32); \n  let mut recovered_y_array: [u8;32] = [0;32];\n  for i in 0..32 {\n     recovered_y_array[i]=recovered_y_slice[i];\n  }\n  assert(recovered_y_array==y_array,\"The packed public key is invalid\"); // Important check to get unicity of the packed public key, otherwise a malicious user could generate several packed keys for the same unpacked public key by adding a multiple of p to y\n\n  let mut y2 = point.y * point.y;\n  let xa = 1-y2;\n  let xb = bjj_a - (bjj_d * y2);\n  let x2 = xa / xb;\n  point.x = ec::sqrt(x2);\n\n  let pm1d2 = -1 / 2;\n  let sign2 = lt_bytes32(pm1d2, point.x);\n\n  if(sign!=sign2) {  // discrepancy compared to circomlibjs here probably due to the Montgomery modular form conversion in circomlibjs/ffwasm\n     point.x = -point.x;\n  } \n\n  assert(is_valid_subgroup(point), \"The public key is not a point on the Baby Jubjub big subgroup\"); // checks the public key is valid\n  point // the unpacked public key\n}\n\n\n/// Same as exp_elgamal_encrypt but instead of an upacked public_key, takes directly the packed public key as an argument\n/// Saves gates because the validity of the public key is checked only once instead of twice (1st when using unpack_point and 2nd in exp_elgamal_encrypt)\npub fn exp_elgamal_encrypt_packed(packed_public_key: [u8; 32], plaintext: u32, randomness: Field) -> (Gaffine,Gaffine)\n{\n  let mut y_array = packed_public_key;\n  let mut public_key: Gaffine = Gaffine::new(0,0);\n  let mut sign = false;\n  if((y_array[31] & 0x80) != 0) {\n    sign = true;\n    y_array[31] &= 0x7f;\n  }\n\n  public_key.y = from_rpr_le(y_array);\n  let recovered_y_slice = public_key.y.to_le_bytes(32); \n  let mut recovered_y_array: [u8;32] = [0;32];\n  for i in 0..32 {\n     recovered_y_array[i]=recovered_y_slice[i];\n  }\n  assert(recovered_y_array==y_array,\"The packed public key is invalid\"); // Important check to get unicity of the packed public key, otherwise a malicious user could generate several packed keys for the same unpacked public key by adding a multiple of p to y\n\n  let mut y2 = public_key.y * public_key.y;\n  let xa = 1-y2;\n  let xb = bjj_a - (bjj_d * y2);\n  let x2 = xa / xb;\n  public_key.x = ec::sqrt(x2);\n\n  let pm1d2 = -1 / 2;\n\n  let sign2 = lt_bytes32(pm1d2, public_key.x);\n\n  if(sign!=sign2) { // discrepancy compared to circomlibjs here probably due to the Montgomery modular form conversion in circomlibjs/ffwasm\n     public_key.x = -public_key.x;\n  } \n\n  assert(is_valid_subgroup(public_key), \"The public key is not a point on the Baby Jubjub big subgroup\"); // checks the public key is valid\n\n  let bjj_affine = get_affine_curve();\n  let base_pt = get_base_point();\n  let C1: Gaffine = bjj_affine.mul(randomness, base_pt);\n  let plain_embedded: Gaffine = bjj_affine.mul(plaintext as Field, base_pt);\n  let shared_secret: Gaffine = bjj_affine.mul(randomness, public_key);\n  let C2: Gaffine = bjj_affine.add(shared_secret, plain_embedded);\n  (C1,C2)\n}\n\n/// translated from here: https://github.com/iden3/ffjavascript/blob/d1cd4ae32170aedd000865f0828b78a15df6f06f/src/scalar.js#L215\n/// and inspired by this: https://gist.github.com/signorecello/dad41f8b90ae48c7355bfd1f34f8885b\nfn from_rpr_le(public_key: [u8;32]) -> Field {\n  let mut y : Field = 0;\n  let mut v : Field = 1;\n  for i in 0..32 {\n      y += public_key[i] as Field * v;\n      v *= 256;\n  }\n  y\n}\n\n#[test]\nfn test_main() {\n  let message: u32 = 943594239;\n  let private_key: Field = 0x04c330a81537c0d29cc09e8b2b9c43fc5fb5a9d244ab741fc88dff3d40dbd75c; // chosen randomly between 0 and bjj_l-1\n  let randomness: Field = 0x010fe5884a7852054a21e21e549520352f563f03d3f79e66a2d75fbd2a21d5cf; // chosen randomly between 0 and bjj_l-1, and never reused\n\n  let public_key: Gaffine = priv_to_pub_key(private_key);\n  let ciphertext: (Gaffine,Gaffine) = exp_elgamal_encrypt(public_key, message, randomness);\n  let decryption = exp_elgamal_decrypt(private_key, ciphertext); // in embedded form (before the baby-step giant-step application)\n\n  let bjj_affine: AffineCurve = get_affine_curve();\n  let base_pt: Gaffine = get_base_point();\n  let plain_embedded: Gaffine = bjj_affine.mul(message as Field,base_pt);\n\n  assert(plain_embedded.x == decryption.x);\n  assert(plain_embedded.y == decryption.y);\n}\n\n#[test]\nfn test_pack_point(){\n  let private_key = 0x0510bae26a9b59ebad67a4324c944b1910a778e8481d7f08ddba6bcd2b94b2c4;\n  let pub_key: Gaffine = priv_to_pub_key(private_key);\n  let packed_pub_key = [0xdc, 0x9f, 0x9f, 0xdb, 0x74, 0x6d, 0x0f, 0x07, 0xb0, 0x04, 0xcc, 0x43, 0x16, 0xe3, 0x49, 0x5a, 0x58, 0x57, 0x0b, 0x90, 0x66, 0x14, 0x99, 0xf8, 0xa6, 0xa6, 0x69, 0x6f, 0xf4, 0x15, 0x6b, 0xaa];//generated via circomlibjs\n  let computed_packed_key = pack_point(pub_key);\n  assert(computed_packed_key == packed_pub_key);\n\n  let private_key2 = 0x03d7c10d654c601b60f2380551b4782896335c48f5d56662b1d0604dd22c8568;\n  let pub_key2: Gaffine = priv_to_pub_key(private_key2);\n  let packed_pub_key2 = [0x0c, 0x07, 0x99, 0x9c, 0x15, 0xd4, 0x06, 0xbc, 0x08, 0xd7, 0xf3, 0xf3, 0x1f, 0x62, 0xce, 0xdb, 0xc8, 0x9e, 0xbf, 0x3a, 0x53, 0xff, 0x4d, 0x3b, 0xf7, 0xe2, 0xd0, 0xdd, 0xa9, 0x31, 0x49, 0x04];//generated via circomlibjs\n  let computed_packed_key2 = pack_point(pub_key2);\n  assert(computed_packed_key2 == packed_pub_key2);\n\n  let private_key3 = 0x032336193e8d6ebf273828eb9d6600badbc7cd795c639dbe364307cd121473f2;\n  let pub_key3: Gaffine = priv_to_pub_key(private_key3);\n  let packed_pub_key3 = [0x29, 0x48, 0x3d, 0xe5, 0xe8, 0x1d, 0xe9, 0x89, 0x3b, 0x56, 0x58, 0xd6, 0x05, 0x01, 0xa4, 0x56, 0x19, 0x8f, 0xd4, 0xbb, 0x39, 0xe4, 0x91, 0x6c, 0x2e, 0x30, 0xf2, 0x42, 0x23, 0xdf, 0xf0, 0xa6];//generated via circomlibjs\n  let computed_packed_key3 = pack_point(pub_key3);\n  assert(computed_packed_key3 == packed_pub_key3);\n}\n\n#[test]\nfn test_pack_unpack_point() {\n  let private_keys: [Field] = [0x01e5cc52b94418c1d361a3479870df1f46fc4b3e697153843505053dd8b092da,0x05f53084112e74844b82f7cffe0ca07230681243ec3c77d53a6f31f5b04f7c4a,\n                              0x04edd04fa218f3b0f32e109696a00baeb5f5b5bc6082b9dd53ff1ad1efe48f29,0x00edd199d52b82a65e7aaf6951f792462a84680022e139d8acf1c07d5168a827,\n                              0x01975e987782456b7e73a34835934b6a20c196f750bc7390c0f7d8303b469f7e];\n  for private_key in private_keys {\n    let public_key: Gaffine = priv_to_pub_key(private_key);\n    let packed_pub_key = pack_point(public_key);\n    let point = unpack_point(packed_pub_key);\n    assert((point.x == public_key.x) & (point.y == public_key.y)); // check that unpack_point(packed_pub_key) always returns the original public key\n    }\n}\n\n#[test(should_fail_with = \"The packed public key is invalid\")]\nfn test_packed_key_unicity(){\n  let mut invalid_packed_public_key : [u8;32] = [0;32];\n\n  let private_key = 0x04d73359c9166e49aafaf9a4852eaa4dceb2c26878196b10e9048004ff5cc20c;\n  let pub_key = priv_to_pub_key(private_key);\n\n  let valid_packed_public_key = pack_point(pub_key);\n  \n  /// Computing a different packed public key which should not be valid, by adding p to the y coordinate :\n  // Previosuly could be computed when we imported BigUint via : \n  // let pBig = (BigUint56::from_bytes((-1).to_le_bytes(32)).add(BigUint56::from_bytes((1).to_le_bytes(32))));\n  // let yPluspBig = BigUint56::from_bytes(pub_key.y.to_le_bytes(32)).add(pBig); // A user tries to cheat by generating an invalid packed public key by adding p to y\n  // Now we hardcode the result in the test : (alternatively we can compute it in Typescript)\n  let y = [0xf3, 0xde, 0xb3, 0xbd, 0x36, 0x14, 0x67, 0x9c, 0x55, 0xba, 0x4c, 0xa2, 0x3f, 0xb0, 0xc6, 0x3b, 0x3d, 0xfd, 0xec, 0x4e, 0x10, 0x9d, 0x83, 0x84, 0x53, 0x92, 0xcc, 0x46, 0xc2, 0x30, 0x29, 0x4d];\n\n  for i in 0..32 {\n    invalid_packed_public_key[i] = y[i];\n  }\n  let pm1d2 = -1 / 2;\n\n  if(lt_bytes32(pm1d2, pub_key.x))\n  {\n    invalid_packed_public_key[31] = invalid_packed_public_key[31] | 0x80;\n  }\n  \n  assert(valid_packed_public_key!=invalid_packed_public_key); /// checks that the newly computed packed public key is different from the original one\n  assert((unpack_point(valid_packed_public_key).x==pub_key.x) & (unpack_point(valid_packed_public_key).y==pub_key.y)); // this should succeed\n  assert((unpack_point(invalid_packed_public_key).x==pub_key.x) & (unpack_point(invalid_packed_public_key).y==pub_key.y)); // this should fail with `The packed public key is invalid`\n\n}\n\n#[test]\nfn test_encrypt(){\n  let x: u32 = 5;\n  let bjj_affine = get_affine_curve();\n  let base_pt = get_base_point();\n  let embedded_x = bjj_affine.mul(x as Field, base_pt);\n\n  let private_key = 0x04d73359c9166e49aafaf9a4852eaa4dceb2c26878196b10e9048004ff5cc20c;\n  let pub_key: Gaffine = priv_to_pub_key(private_key);\n\n  let randomness = 0x03f90f366f9fd55bb1335eac3b11f2190f2ce9ff1769db241edaa7774136099b;\n  let encrypted_point = exp_elgamal_encrypt(pub_key, x, randomness);\n  let decrypted_point = exp_elgamal_decrypt(private_key, encrypted_point);\n\n  assert(decrypted_point.x == embedded_x.x);\n  assert(decrypted_point.y == embedded_x.y);\n\n  let packed = pack_point(pub_key);\n  let unpacked = unpack_point(packed);\n\n  let randomness2 = 0x0210a43c3e46d9ca877d57b2ff67ea8fff900031c57c478c0c03c2d432b2e2a5;\n  let encrypted_with_unpacked = exp_elgamal_encrypt(unpacked, x, randomness2);\n  let decrypted_with_unpacked = exp_elgamal_decrypt(private_key, encrypted_with_unpacked);\n\n  assert(decrypted_with_unpacked.x == embedded_x.x);\n  assert(decrypted_with_unpacked.y == embedded_x.y);\n}\n\n#[test]\nfn test_encrypt_packed(){\n  let x: u32 = 5;\n  let bjj_affine = get_affine_curve();\n  let base_pt = get_base_point();\n  let embedded_x = bjj_affine.mul(x as Field, base_pt);\n\n  let private_key = 0x03de9c86d98bf24ffaac6e38fb55c8c45f73a33bdd4b2d8c904f2c34971356c2;\n  let pub_key: Gaffine = priv_to_pub_key(private_key);\n\n  let packed = pack_point(pub_key);\n\n  let randomness = 0x030cffca80ca4344e54e436fc5a03ae8e884b8f3edcb780702599e1951e8aa62;\n  let encrypted_with_packed = exp_elgamal_encrypt_packed(packed, x, randomness);\n  let decrypted_with_packed = exp_elgamal_decrypt(private_key, encrypted_with_packed);\n\n  assert(decrypted_with_packed.x == embedded_x.x);\n  assert(decrypted_with_packed.y == embedded_x.y);\n}","path":"/Users/jack-sw/Codes/abstract/dex-build/token-bridge-uniswap/packages/aztec-contracts/noir_elgamal/src/lib.nr"}}}